<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Experience.CloudFx.Framework</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase">
            <summary>
            Implements a base class for a standard background process with control and synchronization elements in place. Derived classes provide the code to be executed at regular intervals.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.isDisposed">
            <summary>
            Used for the disposable pattern.  This variable is true once the type has been disposed of.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.delayInterval">
            <summary>
            The number of milliseconds to delay between each execution.  
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.timer">
            <summary>
            The timer class used to manage the execution calls to the derived classes Execute method.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.controlLock">
            <summary>
            A synchronization object used to ensure only one control method is being called at any given time.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.#ctor">
            <summary>
            This default constructor prepares the timer and sets the initial running state to false.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Finalize">
            <summary>
            The destructor ensures that the dispose method is called for resource cleanup.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Start">
            <summary>
            This method starts the service and when it enters running state it will begin to call the derived types Execute method.  There is a synchronization object that manages these control
            methods to ensure only one control method can be executed at a time.  If the service is in paused or stopped state it will try to enter the Running state.  If the derived classes
            Resuming (if in paused state) or Starting (if in stopped state) methods return false it will fail back to the original state.
            
            Trying to start a service that is in the pausing, resuming or stopping states will result in a ControlInvalidException exception.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Stop">
            <summary>
            This method stops the service and stops calling the derived types Execute method.  There is a synchronization object that manages these control
            methods to ensure only one control method can be executed at a time.  If the service is in paused or running state it will try to enter the Stopped state.  If the derived classes
            Stopping method return false it will fail back to the original state.
            
            Trying to stop a service that is in the resuming, pausing, stopping or starting states will result in a ControlInvalidException exception.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Resume">
            <summary>
            This method resumes the service and when it enters running state it will begin to call the derived types Execute method.  There is a synchronization object that manages these control
            methods to ensure only one control method can be executed at a time.  If the service is in the paused state it will try to enter the Running state.  If the derived classes
            Resuming (if in the paused state) method return false it will fail back to the original state.
            
            Trying to resume a service that is in the pausing, stopped, starting or stopping states will result in a ControlInvalidException exception.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Pause">
            <summary>
            This method pauses the service and no longer calls the derived types Execute method.  There is a synchronization object that manages these control
            methods to ensure only one control method can be executed at a time.  If the service is in the running state it will try to enter the Paused state.  If the derived classes
            Pausing (if in the running state) method return false it will fail back to the original state.
            
            Trying to resume a service that is in the resuming, pausing, starting, stopped or stopping states will result in a ControlInvalidException exception.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Starting">
            <summary>
            This method is called to allow the derived class to perform activities when the service is starting.  This is synchronous and the service will remain in the starting state until
            it completes.  If the method returns false the service will fail to start.
            
            No service control methods should be called from within this method.
            </summary>
            <returns>True is returned if the service should continue to start, false if the service should not start.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Stopping">
            <summary>
            This method is called to allow the derived class to perform activities when the service is stopping.  This is synchronous and the service will remain in the stopping state until
            it completes.  If the method returns false the service will fail to stop.
            
            No service control methods should be called from within this method.
            </summary>
            <returns>True is returned if the service should continue to stop, false if the service should not stop.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Resuming">
            <summary>
            This method is called to allow the derived class to perform activities when the service is resuming.  This is synchronous and the service will remain in the resuming state until
            it completes.  If the method returns false the service will fail to resume.
            
            No service control methods should be called from within this method.
            </summary>
            <returns>True is returned if the service should resume, false if the service should not resume.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Pausing">
            <summary>
            This method is called to allow the derived class to perform activities when the service is pausing.  This is synchronous and the service will remain in the pausing state until
            it completes.  If the method returns false the service will fail to pause.
            
            No service control methods should be called from within this method.
            </summary>
            <returns>True is returned if the service should continue to pause, false if the service should not pause.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Execute">
            <summary>
            This method should contain the derived types code that will be called at each interval.  This will only be called while the service is in a running state.  
            </summary>
            <returns>true if the execute method should be immediately called again, false to wait for the next interval.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Dispose">
            <summary>
            This method should be called when the instance is no longer needed.  This cleans up resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.DisposeOfObjects">
            <summary>
            This method can be overloaded to cleanup resources in the derived types.  This method will only be called one time when the class is disposed of.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.Dispose(System.Boolean)">
            <summary>
            This method is called from Dispose and terminators to provide a common set of cleanup logic.  Once this is called from the IDisposable interface it will also remove the class from
            the finalizer queue.
            </summary>
            <param name="isDisposing">true if the method is called from the Dispose method, false if from the terminator</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.TimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            This method handles the timer elapsed events.  In most cases this should only be called while the service is running, but there is a check in case of timing issues.
            </summary>
            <param name="sender">The timer that fired the event</param>
            <param name="e">Timer related arguments</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.IsActionValid(Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceAction)">
            <summary>
            This method determines if the service action being requested is valid for the current service state.  
            </summary>
            <param name="requestedAction">The action to be performed on the service.</param>
            <returns>True if the action is valid based on the current service state, false otherwise.</returns>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.OnStateTransitionComplete">
            <summary>
            This event is fired upon the completion of an entire transition.  An example of this is Starting the service from a Stopped state would not fire in the Starting state, but would fire
            when it enters the Started state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.OnStateTransitionFailed">
            <summary>
            This event is fired upon failure of a transition request.  
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.CurrentState">
            <summary>
            The current state of the service.  The consumer and derived classes cannot directly change the value without going through the control methods.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.DelayInterval">
            <summary>
            The interval in milliseconds. between calls to the derived types Execute method.  This can range from 0 ms to 86400000 ms (1 day).
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.StateTransitionComplete">
            <summary>
            This defines the signature for the OnStateTransitionComplete event.
            </summary>
            <param name="originalState">The original state that the service was in.</param>
            <param name="newState">The new state that the service has transitioned to.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.StateTransitionFailed">
            <summary>
            This defines the signature for the OnStateTransitionFailed event.
            </summary>
            <param name="message">A structure tracking the original state and action</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.StateTransitionMessage">
            <summary>
            This structure is used to identify a service action and the original state that it was in at the time the of the request.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.StateTransitionMessage.#ctor(Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState,Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceAction)">
            <summary>
            Initializes a new instance of the StateTransitionMessage structure.
            </summary>
            <param name="originalState">The state of the service when the request was made.</param>
            <param name="requestedAction">The action to be performed on the service.</param>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.StateTransitionMessage.OriginalState">
            <summary>
            The state of the service when the request was made.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.StateTransitionMessage.RequestedAction">
            <summary>
            The action to be performed on the service.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceAction">
            <summary>
            This enumeration represents the various state modifying actions that can be performed on the service.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceAction.Start">
            <summary>
            Start the service
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceAction.Stop">
            <summary>
            Stop the service
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceAction.Pause">
            <summary>
            Pause the service
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceAction.Resume">
            <summary>
            Resume the service
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState">
            <summary>
            This enumeration represents the potential service states
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState.Paused">
            <summary>
            the service is paused and the Execute method will not be called
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState.Pausing">
            <summary>
            the service is in the process of being paused and the Execute method will not be called
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState.Resuming">
            <summary>
            the service is resuming from a paused state and the Execute method will not be called
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState.Running">
            <summary>
            the service is running and the Execute method will be called
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState.Starting">
            <summary>
            the service is starting and the Execute method will not be called
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState.Stopped">
            <summary>
            the service is stopped and the Execute method will not be called
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ServiceState.Stopping">
            <summary>
            the service is stopping and the Execute method will not be called
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ControlInvalidException">
            <summary>
            This is an Exception type used to represent an invalid control request.  Typically this will be caused by a control event being requested when the current state of the service 
            is not valid for that specific control action.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.BackgroundServiceBase.ControlInvalidException.#ctor">
            <summary>
            This constructor sets the error message text.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Caching.CacheTransientErrorDetectionStrategy">
            <summary>
            Provides the transient error detection logic that can recognize transient faults when dealing with Windows Azure Caching Service.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy">
            <summary>
            Defines an interface which must be implemented by custom components responsible for detecting specific transient conditions.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy.IsTransient(System.Exception)">
            <summary>
            Determines whether the specified exception represents a transient failure that can be compensated by a retry.
            </summary>
            <param name="ex">The exception object to be verified.</param>
            <returns>True if the specified exception is considered as transient, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.CacheTransientErrorDetectionStrategy.IsTransient(System.Exception)">
            <summary>
            Checks whether or not the specified exception belongs to a category of transient failures that can be compensated by a retry.
            </summary>
            <param name="ex">The exception object to be verified.</param>
            <returns>A Boolean result indicating whether or not the specified exception belongs to the category of transient errors.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CloudApplicationException">
            <summary>
            Defines a generic exception for the user code running on Windows Azure. The exceptions of this type will include environmental details
            such as Azure role name and instance ID to be able to isolate an exception to a particular role instance.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudApplicationException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudApplicationException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudApplicationException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="errors">A list of exceptions associated with the error.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudApplicationException"/> class.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudApplicationException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.AdditionalInformation">
            <summary>
            Returns the custom information about the error. The content of this collection will be included into the error details.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudApplicationException.Errors">
            <summary>
            Returns the list of exceptions associated with the error.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CloudEnvironment">
            <summary>
            Provides helper functions to enable user code to get safe access to the environmental parameters of the cloud infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.GetConfigurationSettingValue(System.String)">
            <summary>
            Retrieves the value of a setting in the service configuration file.
            </summary>
            <param name="settingName">The name of the configuration setting.</param>
            <returns>A string containing the value of the configuration setting, or a null reference if the specified setting was not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.EnsureSafeHttpContext">
            <summary>
            Ensures that the HttpContext object is safe to use in the given context and returns an object that rolls the HttpContext object back to its original state.
            </summary>
            <returns>An object that needs to be explicitly disposed so that HttpContext can return back to its original state.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.GetDiagnosticMonitorEventProviderName(System.TimeSpan)">
            <summary>
            Detects and returns the ID of the ETW event provider used by the Diagnostic Monitor infrastructure.
            </summary>
            <param name="waitTime">The timeout value that defines the duration allowed for the Diagnostic Monitor runtime to initialize itself.</param>
            <returns>The ETW provider ID, which is usually a GUID value.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.IsAvailable">
            <summary>
            Indicates whether the role instance is running in the Windows Azure environment.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.IsEmulated">
            <summary>
            Indicates whether the role instance is running in the Windows Azure Development Fabric environment.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.CurrentRoleInstanceId">
            <summary>
            Gets the ID of the object representing the role instance in which this code is currently executing.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.CurrentRoleInstanceIndex">
            <summary>
            Gets the index value of the current role instance ID. The role index is a numeric value from 0 to the total number of instances minus 1.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.CurrentRoleName">
            <summary>
            Gets the name of the role in which this code is currently executing.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.CurrentRoleMachineName">
            <summary>
            Gets the machine name on which this code is currently executing.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.DeploymentId">
            <summary>
            Gets the deployment ID, a string value that uniquely identifies the deployment in which this role instance is running.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.MaxQueueVisibilityTimeout">
            <summary>
            Gets a maximum allowed visibility timeout for messages stored in the Windows Azure queues.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.MaxDequeueCount">
            <summary>
            Gets or sets a maximum allowed dequeue count for messages stored in the Windows Azure Storage Queues and Windows Azure Service Bus Queues before message get removed from the queue.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.SafeQueueVisibilityTimeout">
            <summary>
            Gets a visibility timeout for messages stored in the Windows Azure queues that is intended to avoid a race condition whereby
            Azure storage fabric attempts to reset the message visibility and remove it at the same time. The default safe value is
            5 minutes below the maximum allowed visibility timeout.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudEnvironment.DefaultConnectionLimit">
            <summary>
            Gets or sets the default number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CloudUtility">
            <summary>
            Provides helper methods to enable cloud application code to invoke common, globally accessible functions.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.CloudUtility.OptimalCacheItemSize">
            <summary>
            Returns the size of a cache item that is considered as optimal when storing objects in the Windows Azure Caching Service.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.CloudUtility.MaxServiceBusMessageSize">
            <summary>
            Returns the maximum message size that can be stored in a Windows Azure Service Bus queue or topic.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.CloudUtility.MinStorageEntityNameLength">
            <summary>
            Returns the minimum length of the Windows Azure blob storage container, table or queue.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.CloudUtility.MaxStorageEntityNameLength">
            <summary>
            Returns the maximum length of the Windows Azure blob storage container, table or queue.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.CloudUtility.MaxTableEntityBatchSize">
            <summary>
            Returns the maximum batch size allowed by Windows Azure Table Storage when performing batched table operations.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.CloudUtility.MaxMessageSize">
            <summary>
            Returns the maximum message size in bytes size allowed by Windows Azure Queue Storage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.CloudUtility.MaxNumberOfMessagesToPeek">
            <summary>
            Returns the maximum number of messages that can be peeked at a time from a Windows Azure queue. 
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.IsAllowedQueueMessageSize(System.Int64)">
            <summary>
            Verifies whether or not the specified message size can be accommodated in a Windows Azure queue.
            </summary>
            <param name="size">The message size value to be inspected.</param>
            <returns>True if the specified size can be accommodated in a Windows Azure queue, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.IsOptimalCacheItemSize(System.Int64)">
            <summary>
            Determines whether or not the specified value can be considered as optimal when storing an item of the given size in the cache.
            </summary>
            <param name="size">The item size value to be inspected.</param>
            <returns>True if the specified size can be considered as optimal, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.IsAllowedServiceBusMessageSize(System.Int64)">
            <summary>
            Verifies whether or not the specified message size can be accommodated in a Windows Azure Service Bus queue or topic.
            </summary>
            <param name="size">The message size value to be inspected.</param>
            <returns>True if the specified size can be accommodated in a Windows Azure Service Bus queue or topic, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.IsValidContainerName(System.String,System.Boolean)">
            <summary>
            Performs validation of the specified blob container name in accordance with the rules it must conform to.
            For more information on the rules which container names must conform to, see http://msdn.microsoft.com/en-us/library/dd135715.aspx.
            </summary>
            <param name="containerName">The blob container name to be validated.</param>
            <param name="throwOnError">True to throw an exception if the specified container name is found to be invalid; or false to return the result of validation without throwing an exception.</param>
            <returns>The result of validation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.IsValidTableName(System.String,System.Boolean)">
            <summary>
            Performs validation of the specified table name in accordance with the rules it must conform to.
            For more information on the rules which table names must conform to, see http://msdn.microsoft.com/en-us/library/windowsazure/dd179338.aspx.
            </summary>
            <param name="tableName">The table name to be validated.</param>
            <param name="throwOnError">True to throw an exception if the specified container name is found to be invalid; or false to return the result of validation without throwing an exception.</param>
            <returns>The result of validation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.EnsureSafeContainerName(System.String)">
            <summary>
            Ensures that the specified container name doesn't contain any invalid characters and is compliant with Windows Azure Storage resource names.
            For more information on the rules which container name must conform to, see http://msdn.microsoft.com/en-us/library/dd135715.aspx.
            </summary>
            <param name="containerName">The original container name.</param>
            <returns>The normalized name that is compliant with Windows Azure Storage resource names.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.CleanupContainerName(System.String)">
            <summary>
            Removes all unsupported characters from the specified container name.
            </summary>
            <param name="containerName">The original name.</param>
            <returns>The new name that does not contain any unsupported characters.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.CleanupTableName(System.String)">
            <summary>
            Removes all unsupported characters from the specified table name.
            </summary>
            <param name="tableName">The original table name.</param>
            <returns>The new name that does not contain any unsupported characters.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.TrimTableName(System.String,System.Boolean,System.Int32)">
            <summary>
            Trims the specified table name if its length exceeds the maximum allowed length for Windows Azure table names.
            </summary>
            <param name="tableName">The original table name.</param>
            <param name="trimStart">Indicates that any characters beyond the the maximum allowed length should be removed from the beginning of the specified name, essentially cutting the first N characters until the length restrictions are satisfied.</param>
            <param name="maxLength">The maximum length for the table name. It is initialized with the default maximum length allowed for Windows Azure table names.</param>
            <returns>Either the original table name (if its length is under the limits), or the trimmed name with excessive characters removed either from the beginning or the end of the specified name, as prescribed by the <paramref name="trimStart"/> parameter.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.GetRoleInstanceIndex(System.String)">
            <summary>
            Extracts the numeric ID from the string-based representation of the role instance ID value.
            </summary>
            <param name="instanceId">The role instance ID which the caller can obtain from <see cref="P:Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironment.CurrentRoleInstance"/> object.</param>
            <returns>The numeric ID extracted from the supplied string, or -1 if the supplied value cannot be successfully parsed.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase">
            <summary>
            Provides a base class for the custom ASP.NET application implementing a Windows Azure web role.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent">
            <summary>
            Defines an interface that must be implemented by all components which enable other components to extend themselves.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase"/> object initialized with default global settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.Application_Start(System.Object,System.EventArgs)">
            <summary>
            Called when the first resource (such as a page) in an ASP.NET application is requested. The Application_Start method is called only one time 
            during the life cycle of an application. You can use this method to perform startup tasks such as loading data into the cache and initializing static values.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.Application_End(System.Object,System.EventArgs)">
            <summary>
            Called once per lifetime of the application before the application is unloaded. 
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">The event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.Application_Error(System.Object,System.EventArgs)">
            <summary>
            Indicates that the application encountered an error.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.OnRoleStart">
            <summary>
            Enables the user code to extend the OnStart phase that is called by Windows Azure runtime to initialize the role instance.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.OnRoleStop">
            <summary>
            Enables the user code to extend the OnStop phase that is called by Windows Azure runtime when the role instance is to be stopped.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.OnRoleEnvironmentChanging(System.Object,Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironmentChangingEventArgs)">
            <summary>
            Enables the user code to provide a handler for the <see cref="E:Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironment.Changing"/> event that occurs before a change to the service 
            configuration is applied to the running instances of the role.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.OnRoleEnvironmentChanged(System.Object,Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironmentChangedEventArgs)">
            <summary>
            Enables the user code to provide a handler for the <see cref="E:Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironment.Changed"/> event that occurs after a change to the service 
            configuration is applied to the running instances of the role.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.OnUnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Enables the user code to provide a custom implementation of a method that will handle the event raised by an exception that is not handled by the application domain.
            </summary>
            <param name="sender">The source of the unhandled exception event.</param>
            <param name="args">An <see cref="T:System.UnhandledExceptionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.ConfigureDefaultExtensions">
            <summary>
            Configures the collection of default extensions that will be shared across all components in the web role implementation.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.Extensions">
            <summary>
            Gets a collection of extension objects for this extensible object.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudWebAppBase.ConnectionLimit">
            <summary>
            Gets or sets the maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CommunicationObjectExtensionMethods">
            <summary>
            Provides value-add extension methods for objects implementing the <see cref="T:System.ServiceModel.ICommunicationObject"/> interface.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CommunicationObjectExtensionMethods.SafeClose(System.ServiceModel.ICommunicationObject)">
            <summary>
            Performs a safe close of the current communication object instance.
            </summary>
            <param name="commObj">The instance of the object implementing the <see cref="T:System.ServiceModel.ICommunicationObject"/> interface.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CommunicationObjectExtensionMethods.IsValidState(System.ServiceModel.ICommunicationObject)">
            <summary>
            Verifies whether the specified communication object is in a valid state. If a communication object is not in a valid state, it needs to be recreated.
            </summary>
            <param name="commObj">The instance of the object implementing the <see cref="T:System.ServiceModel.ICommunicationObject"/> interface.</param>
            <returns>True if the specified communication object is in a valid state, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager">
            <summary>
            This class is used to manage active / passive relationships between instances.  The relationship is managed through the use of a BlobWaitHandle where the instance that possesses the 
            lease on the wait handle is viewed as primary.  A sample usage of this would be in a scheduler where you want a single instance to execute the event when it occurs but need the SLA and 
            availability / reliability of multiple instances.
            
            When the class is initiated through initial start call the instance will always be secondary.  Each control of the service (ex. stop, start, resume, pause) will trigger a 10 second delay before 
            attempting to assume the primary role.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.primaryRoleNotification">
            <summary>
            Contains the method to notify the consumer of a role change to primary.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.secondaryRoleNotification">
            <summary>
            Contains the method to notify the consumer of a role change to secondary.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.executeLock">
            <summary>
            This lock ensures that code logic is not being executed while the control events are called.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.waitUntil">
            <summary>
            The time that the instance should delay before trying to become primary
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.primarySynchronizationObject">
            <summary>
            The synchronization object used to manage the owner of the primary mode. 
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.RoleChangedToPrimary,Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.RoleChangedToSecondary)">
            <summary>
            Creates an instance of the PrimaryInstanceManager.  
            </summary>
            <param name="storageAccount">The storage account where the synchronization blob is to be stored.</param>
            <param name="containerName">The name of the storage container where the synchronization blob is to be stored.</param>
            <param name="blobName">The name of the blob to be used as a synchronization object.</param>
            <param name="primaryRoleNotification">This handler will be called when the role enters primary mode.</param>
            <param name="secondaryRoleNotification">This handler will be called when the role drops to secondary mode from primary.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.Execute">
            <summary>
            This method is called by the base class at regular intervals to execute PrimaryInstanceManager logic.  The logic provided will 
            determine if the role has changed and if so will call the appropriate delegate to notify the consumer of the change.
            </summary>
            <returns>true if the execute method should be immediately called again, false to wait for the next interval.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.Stopping">
            <summary>
            This method tells the client to wait 10 seconds prior to attempting to become primary.  This is to assist in the scenario where 
            the consumer would like to hand off primary role.
            </summary>
            <returns>Always returns true to let the base class know to continue stopping.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.Pausing">
            <summary>
            This method tells the client to wait 10 seconds prior to attempting to become primary.  This is to assist in the scenario where 
            the consumer would like to hand off primary role.
            </summary>
            <returns>Always returns true to let the base class know to continue pausing.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.Resuming">
            <summary>
            This method tells the client to wait 10 seconds prior to attempting to become primary.  This is to assist in the scenario where 
            the consumer would like to hand off primary role.
            </summary>
            <returns>Always returns true to let the base class know to continue resuming.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.Starting">
            <summary>
            This method tells the client to wait 10 seconds prior to attempting to become primary.  This is to assist in the scenario where 
            the consumer would like to hand off primary role.
            </summary>
            <returns>Always returns true to let the base class know to continue starting.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.DisposeOfObjects">
            <summary>
            This method is called when the object is being disposed to cleanup unmanaged objects.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.IsPrimary">
            <summary>
            This flag determines if the instance is in the primary mode or secondary.  
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.RoleChangedToPrimary">
            <summary>
            Method signature for handling role change events that result in the instance being primary.
            </summary>
            <returns>True if the instance is currently capable of obtaining primary mode.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Compute.PrimaryInstanceManager.RoleChangedToSecondary">
            <summary>
            Method signature for handling role change events that result in the instance being secondary.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.AppSettingsConfigurationSection">
            <summary>
            Implements a configuration section containing the application settings, namely a list of key/value pairs defined in the appSettings section.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.SerializableConfigurationSection">
            <summary>
            Represents a configuration section that can be serialized and deserialized to XML.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.SerializableConfigurationSection.GetSchema">
            <summary>
            Returns the XML schema for the configuration section.
            </summary>
            <returns>A string with the XML schema, or <see langword="null"/> (<b>Nothing</b> 
            in Visual Basic) if there is no schema.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.SerializableConfigurationSection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Updates the configuration section with the values from an <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> that reads the configuration source located at the element that describes the configuration section.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.SerializableConfigurationSection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the configuration section values as an XML element to an <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> that writes to the configuration source.</param>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.AppSettingsConfigurationSection.SectionName">
            <summary>
            The name of the configuration section represented by this type.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.AppSettingsConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.AppSettingsConfigurationSection"/> object with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.AppSettingsConfigurationSection.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.AppSettingsConfigurationSection"/> object with the specified settings.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.AppSettingsConfigurationSection.Settings">
            <summary>
            Returns a list of key/value pairs defined in the appSettings section.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration">
            <summary>
            Provides access to the application configuration file to retrieve and manage the lifecycle of strongly-typed configuration sections.
            The configuration sections will be retrieved from the application's app.config, web.config or ServiceConfiguration.cscfg depending on the type of the application.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.currentConfiguration">
            <summary>
            A pre-initialized instance of the current configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.initLock">
            <summary>
            A lock object.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.configSectionCache">
            <summary>
            A dictionary object containing cached instances of the configuration sections.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.configSectionCacheLock">
            <summary>
            A lock object for the configuration section cache.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.GetSection``1">
            <summary>
            Returns a configuration section defined by the given type <typeparamref name="T"/> and name that corresponds to the type's fully qualified name.
            </summary>
            <typeparam name="T">The type of the configuration section.</typeparam>
            <returns>An instance of the type <typeparamref name="T"/> containing the configuration section or a null reference if configuration section was not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.GetSection``1(System.String)">
            <summary>
            Returns a configuration section defined by the given type <typeparamref name="T"/> and specified section name.
            </summary>
            <typeparam name="T">The type of the configuration section.</typeparam>
            <param name="sectionName">The name of the configuration section.</param>
            <returns>An instance of the type <typeparamref name="T"/> containing the configuration section or a null reference if configuration section was not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.Unload">
            <summary>
            Signals the configuration manager to unload all currently loaded configuration sections by removing them from in-memory cache.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.GetSection(System.String,System.Type)">
            <summary>
            Retrieves the specified configuration section from the application configuration file. 
            </summary>
            <param name="sectionName">The name of the section to be retrieved.</param>
            <param name="sectionType">The type of the section.</param>
            <returns>An instance of the specified configuration section, or a null reference if a section by that name is not found.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.Current">
            <summary>
            Returns an instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration"/> class by enforcing a singleton design pattern.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.AppSettings">
            <summary>
            Returns the list of key/value pairs defined in the application's configuration file as application settings.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CloudApplicationConfiguration.SectionCache">
            <summary>
            Provides access to the internal cache.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection">
            <summary>
            Implements a configuration section containing the application diagnostic settings.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.SectionName">
            <summary>
            The name of the configuration section represented by this type.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection"/> object with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.EnableDiagnostic">
            <summary>
            Enables the collection of diagnostic data for this application.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DisableDiagnostic">
            <summary>
            Disables the collection of diagnostic data for this application.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.EnableCrashDumpCollection">
            <summary>
            Enables the collection of application crash dumps (mini dumps or full dumps) for this application.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DisableCrashDumpCollection">
            <summary>
            Disables the collection of application crash dumps (mini dumps or full dumps) for this application.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.SetDefaultTransferPeriodInSeconds(System.Int32)">
            <summary>
            Sets the default time interval between scheduled transfers of diagnostic data for the specified number of seconds.
            </summary>
            <param name="value">The number of seconds between scheduled transfers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.SetDefaultTransferPeriodInMinutes(System.Int32)">
            <summary>
            Sets the default time interval between scheduled transfers of diagnostic data for the specified number of minutes.
            </summary>
            <param name="value">The number of minutes between scheduled transfers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.SetDefaultTransferPeriodInHours(System.Int32)">
            <summary>
            Sets the default time interval between scheduled transfers of diagnostic data for the specified number of hours.
            </summary>
            <param name="value">The number of hours between scheduled transfers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.SetDefaultHeartbeatIntervalInSeconds(System.Int32)">
            <summary>
            Sets the time interval for heartbeats emitted by worker role instances for the specified number of seconds.
            </summary>
            <param name="value">The heartbeat interval expressed in seconds.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.AddEventLogDataSource(System.String)">
            <summary>
            Adds a new source into the list of configured data sources for Windows event log data transfers.
            </summary>
            <param name="logName">The event log source to be included into scheduled transfers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.AddFileLogDirectory(System.String,System.String)">
            <summary>
            Adds a new path into the list of configured directories for file-based log data transfers.
            </summary>
            <param name="containerName">The name of a container defined in a storage account where the contents of file-based logs are to be transferred.</param>
            <param name="path">The absolute path for the local directory to which file-based logs are being written.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.AddPerformanceCounter(System.String,System.TimeSpan)">
            <summary>
            Adds a new performance counter into the list of configurations for performance counters that are being collected.
            </summary>
            <param name="counterName">The performance counter specified using standard Windows counter syntax.</param>
            <param name="sampleRate">The rate at which to sample the performance counter, rounded up to the nearest second.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DiagnosticStorageAccount">
            <summary>
            Gets or sets the name of the Windows Azure storage account in which diagnostic data will be queued for processing.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DiagnosticEnabled">
            <summary>
            Gets or sets the value indicating whether or not collection of diagnostic data is enabled for a given application.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.CrashDumpCollectionEnabled">
            <summary>
            Gets or sets the value indicating whether or not the collection of application crash dumps (mini dumps or full dumps) is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DefaultTransferPeriod">
            <summary>
            Gets or sets the default time interval between scheduled transfers of diagnostic data.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DefaultTransferFilter">
            <summary>
            Gets or sets the default level of trace messages by which to filter records when performing a scheduled transfer.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.PerformanceCountersTransferPeriod">
            <summary>
            Gets or sets the interval between scheduled transfers of performance counters.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.EventLogsTransferPeriod">
            <summary>
            Gets or sets the interval between scheduled transfers of event log entries.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.EventLogsTransferFilter">
            <summary>
            Gets or sets a logging level by which to filter records when performing a scheduled transfer of event log entries.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.TraceLogsTransferPeriod">
            <summary>
            Gets or sets the interval between scheduled transfers of trace logs.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.TraceLogsTransferFilter">
            <summary>
            Gets or sets a logging level by which to filter records when performing a scheduled transfer of trace logs.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.FileLogsTransferPeriod">
            <summary>
            Gets or sets the interval between scheduled transfers of file-based logs defined by the developer.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DiagnosticLogsTransferPeriod">
            <summary>
            Gets or sets the interval between scheduled transfers of the logs generated by the underlying
            diagnostics infrastructure. The diagnostic infrastructure logs are useful for troubleshooting 
            the diagnostics system itself.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.DiagnosticLogsTransferFilter">
            <summary>
            Gets or sets a logging level by which to filter records when performing a scheduled transfer of
            the logs generated by the underlying diagnostics infrastructure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.EventLogDataSources">
            <summary>
            Gets a list of configured data sources for Windows event logs.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.FileLogDirectories">
            <summary>
            Gets a list of configured directories for file-based logs.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.PerformanceCountersDataSources">
            <summary>
            Gets a list of configurations for performance counters that are being collected.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ApplicationDiagnosticConfigurationSection.HeartbeatInterval">
            <summary>
            Gets or sets the time interval for heartbeats emitted by worker role instances.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceConfigurationSection">
            <summary>
            Implements a configuration section containing Windows Azure Caching Service endpoint configuration settings.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceConfigurationSection.SectionName">
            <summary>
            The name of the configuration section represented by this type.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceConfigurationSection"/> object using default settings.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceConfigurationSection.DefaultEndpoint">
            <summary>
            Gets or sets the name of a Windows Azure Caching Service endpoint which is intended to be used as default.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceConfigurationSection.DefaultRetryPolicy">
            <summary>
            Gets or sets the name of the default retry policy.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceConfigurationSection.Endpoints">
            <summary>
            Returns a collection of Windows Azure Caching Service endpoints configured for the application.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo">
            <summary>
            Implements a configuration element holding parameters defining an endpoint of the Windows Azure Caching Service.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement">
            <summary>
            Represents a named <see cref="T:System.Configuration.ConfigurationElement"/> where the name is the key to a collection.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement.NameProperty">
            <summary>
            Name of the property that holds the name of <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement.#ctor">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement.#ctor(System.String)">
            <summary>
            Initialize a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement"/> class with a name.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement"/> object is read-only.
            </summary>
            <returns>True if the configuration element object is read-only; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement.DeserializeElement(System.Xml.XmlReader)">
            <summary>
            This method supports the Enterprise Library infrastructure and is not intended to be used directly from your code.
            Updates the configuration properties of the receiver with the information in the current element in the <paramref name="reader"/>.
            </summary>
            <param name="reader">The reader over the configuration file.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement.Name">
            <summary>
            Gets or sets the name of the element.
            </summary>
            <value>
            The name of the element.
            </value>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo"/> object with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo"/> object with specified specified endpoint namespace and ACS authentication token.
            </summary>
            <param name="serviceNamespace">The unique service namespace name used by the endpoint.</param>
            <param name="authToken">The service authentication token.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.PostDeserialize">
            <summary>
            Implements an extension point that gets called after deserialization.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.AuthenticationToken">
            <summary>
            Gets or sets the key value containing an ACS key that secures access to the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.ServiceHostName">
            <summary>
            Gets or sets the FQDN-style service host name used by the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.CachePort">
            <summary>
            Gets or sets the port number of the caching service host.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.SslEnabled">
            <summary>
            Gets or sets the flag indicating that communication between cache client and caching service will be protected by SSL.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.SecureAuthenticationToken">
            <summary>
            Gets the key value containing a read-only secure version of the ACS key that secures access to the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo.RetryPolicy">
            <summary>
            Gets or sets the retry policy definition associated with the caching service endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.DiagnosticUtilities">
            <summary>
            This class contains a set of methods that perform common functions around diagnostics.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.DiagnosticUtilities.DemandTransfer(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,System.String,Microsoft.WindowsAzure.Diagnostics.DataBufferName,System.String)">
            <summary>
            This method is used to execute a demand transfer of the local stores to the blob and table storage from the Diagnostic Monitor.  
            </summary>
            <param name="storageAccount">The CloudStorageAccount to transfer the data to.</param>
            <param name="deploymentId">The identifier that represents the deployment of interest.</param>
            <param name="roleName">The name of the role to execute the demand transfer on.</param>
            <param name="roleInstanceId">The id of the instance to have the demand transfer applied to.</param>
            <param name="bufferToTransfer">The section of data to transfer (ex. Event Logs).</param>
            <param name="notificationQueueName">The queue that should have a message placed on it when the demand transfer is complete.</param>
            <returns>A unique identifier representing the demand transfer that was requested.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.DiagnosticUtilities.DemandTransfer(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,Microsoft.WindowsAzure.Diagnostics.DataBufferName,System.String)">
            <summary>
            This method is used to execute a demand transfer of the local stores to the blob and table storage from the Diagnostic Monitor.
            All instances of the role will be transferred.  
            </summary>
            <param name="storageAccount">The CloudStorageAccount to transfer the data to.</param>
            <param name="deploymentId">The identifier that represents the deployment of interest.</param>
            <param name="roleName">The name of the role to execute the demand transfer on.</param>
            <param name="bufferToTransfer">The section of data to transfer (ex. Event Logs).</param>
            <param name="notificationQueueName">The queue that should have a message placed on it when the demand transfer is complete.</param>
            <returns>A list of unique identifiers representing the demand transfers that were requested.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.DiagnosticUtilities.DemandTransfer(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,Microsoft.WindowsAzure.Diagnostics.DataBufferName,System.String)">
            <summary>
            This method is used to execute a demand transfer of the local stores to the blob and table storage from the Diagnostic Monitor.
            All instances of all of the roles will be transferred.  
            </summary>
            <param name="storageAccount">The CloudStorageAccount to transfer the data to.</param>
            <param name="deploymentId">The identifier that represents the deployment of interest.</param>
            <param name="bufferToTransfer">The section of data to transfer (ex. Event Logs).</param>
            <param name="notificationQueueName">The name of the queue to have the message placed on when the transfer is complete.</param>
            <returns>A list of unique identifiers representing the demand transfers that were requested.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ExtensionMethods">
            <summary>
            Provides extension methods for configuration types.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ExtensionMethods.FirstOrDefault(Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection{Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo},System.String[])">
            <summary>
            Returns the first available retry policy definition from the specified list of names, or null if no matching policy was found.
            </summary>
            <param name="policies">The collection of retry policy definitions which this method extends.</param>
            <param name="names">One or more string retry policy names.</param>
            <returns>An instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo"/> which matches the first name from the specified list.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource">
            <summary>
            Represents a source for getting configuration information.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource.GetSection(System.String)">
            <summary>
            Retrieves the specified <see cref="T:System.Configuration.ConfigurationSection"/>.
            </summary>
            <param name="sectionName">The name of the section to be retrieved.</param>
            <returns>The specified <see cref="T:System.Configuration.ConfigurationSection"/>, or <see langword="null"/> (<b>Nothing</b> in Visual Basic)
            if a section by that name is not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource.Add(System.String,System.Configuration.ConfigurationSection)">
            <summary>
            Adds a <see cref="T:System.Configuration.ConfigurationSection"/> to the configuration source and saves the configuration source.
            </summary>
            <remarks>
            If a configuration section with the specified name already exists it will be replaced.
            </remarks>
            <param name="sectionName">The name by which the <paramref name="configurationSection"/> should be added.</param>
            <param name="configurationSection">The configuration section to add.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource.Remove(System.String)">
            <summary>
            Removes a <see cref="T:System.Configuration.ConfigurationSection"/> from the configuration source.
            </summary>
            <param name="sectionName">The name of the section to remove.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource.AddSectionChangeHandler(System.String,System.EventHandler{Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangedEventArgs})">
            <summary>
            Adds a handler to be called when changes to the section named <paramref name="sectionName"/> are detected.
            </summary>
            <param name="sectionName">The name of the section to watch for.</param>
            <param name="handler">The handler for the change event to add.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource.RemoveSectionChangeHandler(System.String,System.EventHandler{Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangedEventArgs})">
            <summary>
            Removes a handler to be called when changes to section <code>sectionName</code> are detected.
            </summary>
            <param name="sectionName">The name of the watched section.</param>
            <param name="handler">The handler for the change event to remove.</param>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource.SourceChanged">
            <summary>
            Event raised when any section in this configuration source changes.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationSourceChangedEventArgs">
            <summary>
            Event arguments describing which sections have changed in a configuration source.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationSourceChangedEventArgs.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.IConfigurationSource,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationSourceChangedEventArgs"/> class.
            </summary>
            <param name="configurationSource">Configuration source that changed.</param>
            <param name="changedSectionNames">Sequence of the section names in <paramref name="configurationSource"/>
            that have changed.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationSourceChangedEventArgs.ConfigurationSource">
            <summary>
            The configuration source that has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationSourceChangedEventArgs.ChangedSectionNames">
            <summary>
            The set of section names that have changed.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangingEventArgs">
            <summary>
            Event arguments describing a section the content of which is about to be changed in the configuration source.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangingEventArgs.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangingEventArgs"/> class with the section name.</para>
            </summary>
            <param name="sectionName"><para>The section name of the changes.</para></param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangingEventArgs.SectionName">
            <summary>
            <para>Gets the section name where the changes occurred.</para>
            </summary>
            <value>
            <para>The section name where the changes occurred.</para>
            </value>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangedEventArgs">
            <summary>
            Event arguments describing a section the content of which has changed in the configuration source.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangedEventArgs.#ctor(System.String)">
            <summary>
            <para>Initialize a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangedEventArgs"/> class with the section name.</para>
            </summary>
            <param name="sectionName"><para>The section name of the changes.</para></param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ConfigurationChangedEventArgs.SectionName">
            <summary>
            <para>Gets the section name where the changes occurred.</para>
            </summary>
            <value>
            <para>The section name where the changes occurred.</para>
            </value>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.IApplicationConfigurationSource">
            <summary>
            Extends the IConfigurationSource contract to support application-specific configuration that can be localized to a particular 
            application name or machine on which the application is running.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.IApplicationConfigurationSource.GetSection(System.String,System.String,System.String)">
            <summary>
            Retrieves the specified <see cref="T:System.Configuration.ConfigurationSection"/> for a given application running of the specified machine.
            </summary>
            <param name="sectionName">The name of the section to be retrieved.</param>
            <param name="applicationName">The name of the application for which a configuration section is being requested.</param>
            <param name="machineName">The name of the machine on which the requesting application is running.</param>
            <returns>The specified <see cref="T:System.Configuration.ConfigurationSection"/>, or a null reference if a section by that name is not found.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1">
            <summary>
            Represents a collection of <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement"/> objects.
            </summary>
            <typeparam name="T">A new object that inherits from <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.NamedConfigurationElement"/>.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.ForEach(System.Action{`0})">
            <summary>
            Performs the specified action on each element of the collection.
            </summary>
            <param name="action">The action to perform.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.Get(System.Int32)">
            <summary>
            Gets the configuration element at the specified index location. 
            </summary>
            <param name="index">The index location of the <see name="T"/> to return. </param>
            <returns>The <see name="T"/> at the specified index. </returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.Add(`0)">
            <summary>
            Add an instance of <typeparamref name="T"/> to the collection.
            </summary>
            <param name="element">An instance of <typeparamref name="T"/>.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.Get(System.String)">
            <summary>
            Gets the named instance of <typeparamref name="T"/> from the collection.
            </summary>
            <param name="name">The name of the <typeparamref name="T"/> instance to retrieve.</param>
            <returns>The instance of <typeparamref name="T"/> with the specified key; otherwise, <see langword="null"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.Contains(System.String)">
            <summary>
            Determines if the name exists in the collection.
            </summary>
            <param name="name">The name to search.</param>
            <returns><see langword="true"/> if the name is contained in the collection; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.Remove(System.String)">
            <summary>
            Remove the named element from the collection.
            </summary>
            <param name="name">The name of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.Clear">
            <summary>
            Clear the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection. 
            </summary>
            <returns>An enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.CreateNewElement">
            <summary>
            Creates a new instance of a <typeparamref name="T"/> object.
            </summary>
            <returns>A new <see cref="T:System.Configuration.ConfigurationElement"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.NamedElementCollection`1.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class. 
            </summary>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
            <returns>An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection">
            <summary>
            Implements a configuration section containing retry policy settings.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.SectionName">
            <summary>
            The name of the configuration section represented by this type.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection"/> object using default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.GetRetryPolicy``1(System.String)">
            <summary>
            Returns an instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.RetryPolicy"/> object initialized for a given policy name.
            </summary>
            <typeparam name="T">The type implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> interface which is responsible for detecting transient conditions.</typeparam>
            <param name="policyName">The name under which a retry policy definition is registered in the application configuration.</param>
            <returns>The retry policy initialized from the specified policy definition, or a null reference if no such policy definition was found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.AddFixedIntervalPolicy(System.String,System.Int32,System.Int32)">
            <summary>
            Adds a new definition describing a retry policy based on fixed interval retry mode.
            </summary>
            <param name="policyName">The name under which a retry policy definition will be registered in the application configuration.</param>
            <param name="maxRetryCount">The maximum number of retry attempts.</param>
            <param name="retryInterval">The interval in milliseconds between retry attempts.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.AddIncrementalIntervalPolicy(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a new definition describing a retry policy based on incremental interval retry mode.
            </summary>
            <param name="policyName">The name under which a retry policy definition will be registered in the application configuration.</param>
            <param name="maxRetryCount">The maximum number of retry attempts.</param>
            <param name="retryInterval">The initial interval in milliseconds which will apply for the first retry.</param>
            <param name="retryIncrement">The incremental time value in milliseconds for calculating progressive delay between retry attempts.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.AddExponentialIntervalPolicy(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a new definition describing a retry policy based on random exponential back-off retry mode.
            </summary>
            <param name="policyName">The name under which a retry policy definition will be registered in the application configuration.</param>
            <param name="maxRetryCount">The maximum number of retry attempts.</param>
            <param name="minBackoff">The minimum back-off time in milliseconds.</param>
            <param name="maxBackoff">The maximum back-off time in milliseconds.</param>
            <param name="deltaBackof">The delta value in milliseconds to calculate random exponential delay between retry attempts.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.DefaultPolicy">
            <summary>
            Gets or sets the name of the default general-purpose retry policy.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.DefaultSqlConnectionPolicy">
            <summary>
            Gets or sets the name of a retry policy dedicated to handling transient conditions with SQL connections.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.DefaultSqlCommandPolicy">
            <summary>
            Gets or sets the name of a retry policy dedicated to handling transient conditions with SQL commands.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.DefaultStoragePolicy">
            <summary>
            Gets or sets the name of a retry policy dedicated to handling transient conditions in Windows Azure storage services.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.DefaultCommunicationPolicy">
            <summary>
            Gets or sets the name of a retry policy dedicated to handling transient conditions in the WCF communication infrastructure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyConfigurationSection.Policies">
            <summary>
            Returns a collection of retry policy definitions represented by the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo"/> object instances.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo">
            <summary>
            Implements a configuration element holding retry policy parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo"/> object with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.CreatePolicy``1">
            <summary>
            Returns an instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.RetryPolicy"/> object based on the parameters in the current policy definition object.
            </summary>
            <typeparam name="T">The type implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> interface which is responsible for detecting transient conditions.</typeparam>
            <returns>The retry policy initialized from the current policy definition, or a null reference if method was unable to detect the type of retry method.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.MaxRetryCount">
            <summary>
            Gets or sets the maximum number of retry attempts. This parameter is compulsory.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.RetryInterval">
            <summary>
            Gets or sets the interval in milliseconds between retry attempts.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.MinBackoff">
            <summary>
            Gets or sets the minimum back-off time in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.MaxBackoff">
            <summary>
            Gets or sets the maximum back-off time in milliseconds.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.DeltaBackoff">
            <summary>
            Gets or sets the delta value in milliseconds to calculate random exponential delay between retry attempts.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.RetryPolicyInfo.RetryIncrement">
            <summary>
            Gets or sets the incremental time value in milliseconds for calculating progressive delay between retry attempts.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection">
            <summary>
            Implements a configuration section containing Windows Azure Service Bus endpoint configuration settings.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection.SectionName">
            <summary>
            The name of the configuration section represented by this type.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection"/> object with default settings.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection.DefaultEndpoint">
            <summary>
            Gets or sets the name of a Windows Azure Service Bus endpoint which is intended to be used as default.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection.DefaultNamespace">
            <summary>
            Gets or sets the default Windows Azure Service Bus service namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection.DefaultIssuerName">
            <summary>
            Gets or sets the default issuer name for authentication in Windows Azure Service Bus.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection.DefaultIssuerSecret">
            <summary>
            Gets or sets the default issuer secret for authentication in Windows Azure Service Bus.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusConfigurationSection.Endpoints">
            <summary>
            Returns a collection of Windows Azure Service Bus endpoints configured for the application.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection">
            <summary>
            Implements a collection of configuration elements describing Windows Azure Service Bus endpoints represented by <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.Add(System.String,System.String,System.String)">
            <summary>
            Adds a new Windows Azure Service Bus endpoint definition into the collection of endpoints.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.Add(System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode)">
            <summary>
            Adds a new Windows Azure Service Bus endpoint definition into the collection of endpoints. 
            Allows specifying the desired relay mode for the new endpoint.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
            <param name="relayMode">The connection mode for the endpoint.</param>
            <param name="transferMode">The optional message transfer mode for the endpoint.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.Add(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a new Windows Azure Service Bus endpoint definition into the collection of endpoints. 
            Allows specifying endpoint-specific security credentials in a form of issuer name and secret.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.Add(System.String,System.String,System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode)">
            <summary>
             Adds a new Windows Azure Service Bus endpoint definition into the collection of endpoints.
             Allows specifying the desired relay mode as well as endpoint-specific security credentials in a form of issuer name and secret.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="relayMode">The connection mode for the endpoint.</param>
            <param name="transferMode">The optional message transfer mode for the endpoint.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.AddRelayEndpoint(System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode)">
            <summary>
            Adds a new Windows Azure Service Bus relay endpoint definition into the collection of endpoints.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
            <param name="transferMode">The optional message transfer mode for the endpoint.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.AddRelayEndpoint(System.String,System.String,System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode)">
            <summary>
            Adds a new Windows Azure Service Bus relay endpoint definition into the collection of endpoints.
            Allows specifying endpoint-specific security credentials in a form of issuer name and secret.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="transferMode">The optional message transfer mode for the endpoint.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.AddEventingEndpoint(System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode)">
            <summary>
            Adds a new Windows Azure Service Bus one-way multicast (event relay) endpoint definition into the collection of endpoints.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
            <param name="transferMode">The optional message transfer mode for the endpoint.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.AddEventingEndpoint(System.String,System.String,System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode)">
            <summary>
            Adds a new Windows Azure Service Bus one-way multicast (event relay) endpoint definition into the collection of endpoints.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="transferMode">The optional message transfer mode for the endpoint.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointCollection.Item(System.String)">
            <summary>
            Gets or sets the Windows Azure Service Bus endpoint definition.
            </summary>
            <param name="name">The unique name under which the endpoint definition is registered in the collection.</param>
            <returns>The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object containing the endpoint definition, or a null reference if no such endpoint definition was found under the specified name.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo">
            <summary>
            Implements a configuration element describing a Windows Azure Service Bus endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object with the specified endpoint name and its location in the Service Bus namespace hierarchy.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint. This usually applies to Service Bus Relay endpoints. For other types of endpoints, this parameter can be set to null.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object with the specified endpoint name, its location in the Service Bus namespace hierarchy
            and authentication parameters.
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint. This usually applies to Service Bus Relay endpoints. For other types of endpoints, this parameter can be set to null.</param>
            <param name="issuerName">The issuer name to be used to authenticate with Service Bus. It can be retrieved from the Management Portal.</param>
            <param name="issuerSecret">The issuer secret to be used to authenticate with Service Bus. It can also be retrieved from the Management Portal.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.#ctor(System.String,System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object with the specified endpoint name, its location in the Service Bus namespace hierarchy,
            authentication parameters and the type of the Service Bus endpoint (queue, topic, relay, etc.)
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="issuerName">The issuer name to be used to authenticate with Service Bus. It can be retrieved from the Management Portal.</param>
            <param name="issuerSecret">The issuer secret to be used to authenticate with Service Bus. It can also be retrieved from the Management Portal.</param>
            <param name="endpointType">The type of the endpoint. See <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType"/> enumeration for possible options.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.#ctor(System.String,System.String,System.String,System.String,System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode,System.Boolean)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object with the specified endpoint name, its location in the Service Bus namespace hierarchy,
            authentication parameters and custom data transfer mode (applicable to Relay endpoints only).
            </summary>
            <param name="endpointName">The unique name under which the endpoint definition will be registered in the configuration.</param>
            <param name="serviceNamespace">The service namespace name used by the endpoint.</param>
            <param name="servicePath">The service path used by the endpoint. This usually applies to Service Bus Relay endpoints. For other types of endpoints, this parameter can be set to null.</param>
            <param name="issuerName">The issuer name to be used to authenticate with Service Bus. It can be retrieved from the Management Portal.</param>
            <param name="issuerSecret">The issuer secret to be used to authenticate with Service Bus. It can also be retrieved from the Management Portal.</param>
            <param name="endpointType">The type of the endpoint. See <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType"/> enumeration for possible options.</param>
            <param name="transferMode">The message transfer mode for the endpoint.</param>
            <param name="loadBalanced">The flag indicating whether the endpoint is enabled for load balancing.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.Parse(System.String)">
            <summary>
            Parses the specified Windows Azure Service Bus connection string and returns a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> instance created from the information in the connection string.
            The connection string must conform to the format explained in the Service Bus documentation. See http://msdn.microsoft.com/en-us/library/windowsazure/jj149830.aspx for details.
            </summary>
            <param name="connectionString">A valid connection string for Windows Azure Service Bus (or Service Bus for Windows Server).</param>
            <returns>A <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object constructed from the values provided in the connection string.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.ToString">
            <summary>
            Returns the string-based representation of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object in the form of a connection string to Windows Azure Service Bus. 
            </summary>
            <returns>A valid connection string for Windows Azure Service Bus (or Service Bus for Windows Server).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.CreateQueueEndpoint(System.String,System.String,System.String)">
            <summary>
            Returns a Service Bus endpoint definition representing a Service Bus queue. This method is provided for additional convenience.
            </summary>
            <param name="serviceNamespace">The service namespace name where the queue endpoint is located.</param>
            <param name="issuerName">The issuer name to be used to authenticate with Service Bus. It can be retrieved from the Management Portal.</param>
            <param name="issuerSecret">The issuer secret to be used to authenticate with Service Bus. It can also be retrieved from the Management Portal.</param>
            <returns>A <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object representing a Service Bus queue endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.CreateQueueEndpoint(System.String)">
            <summary>
            Returns a Service Bus endpoint definition representing a Service Bus queue constructed from the specified connection string.
            This method is provided for additional convenience.
            </summary>
            <param name="connectionString">A valid connection string for Windows Azure Service Bus (or Service Bus for Windows Server).</param>
            <returns>A <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object representing a Service Bus queue endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.CreateTopicEndpoint(System.String,System.String,System.String)">
            <summary>
            Returns a Service Bus endpoint definition representing a Service Bus topic. This method is provided for additional convenience.
            </summary>
            <param name="serviceNamespace">The service namespace name where the topic endpoint is located.</param>
            <param name="issuerName">The issuer name to be used to authenticate with Service Bus. It can be retrieved from the Management Portal.</param>
            <param name="issuerSecret">The issuer secret to be used to authenticate with Service Bus. It can also be retrieved from the Management Portal.</param>
            <returns>A <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object representing a Service Bus topic endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.CreateTopicEndpoint(System.String)">
            <summary>
            Returns a Service Bus endpoint definition representing a Service Bus topic constructed from the specified connection string.
            This method is provided for additional convenience.
            </summary>
            <param name="connectionString">A valid connection string for Windows Azure Service Bus (or Service Bus for Windows Server).</param>
            <returns>A <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object representing a Service Bus topic endpoint.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.ServiceNamespace">
            <summary>
            Gets or sets the service namespace name used by the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.ServicePath">
            <summary>
            Gets or sets the service namespace name used by the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.IssuerName">
            <summary>
            Gets or sets the name of the service identity configured in Access Control for the Windows Azure Service Bus namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.IssuerSecret">
            <summary>
            Gets or sets the key for the service identity configured in Access Control for the Windows Azure Service Bus namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.SharedAccessKeyName">
            <summary>
            Gets or sets the Shared Access Signature (SAS) key name that describes the authorization rule configured on the Service Bus namespace, 
            or on the messaging entity with which specific rights are associated. If the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object was initialized
            from a connection string, this property will return the value of the SharedAccessKeyName parameter specified in the connection string.
            For more information on Shared Access Signature authentication with Service Bus, see http://msdn.microsoft.com/en-us/library/windowsazure/dn170477.aspx.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.SharedAccessKeyValue">
            <summary>
            Gets or sets the Shared Access Signature (SAS) key name value. This value represents a 256-bit primary cryptographic key in Base64 representation.
            SAS authentication in Service Bus involves the use of this cryptographic key with associated rights on a Service Bus resource to protect against
            unauthorized access. Clients claim access to Service Bus resources by presenting a SAS token. This is done transparently by the Service Bus brokered 
            messaging API. If the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object was initialized from a connection string, this property will return the value of the 
            SharedAccessKey parameter specified in the connection string. For more information on Shared Access Signature authentication with Service Bus, visit 
            http://msdn.microsoft.com/en-us/library/windowsazure/dn170477.aspx.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.TopicPath">
            <summary>
            Gets or sets the name of the topic endpoint in Windows Azure Service Bus.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.QueuePath">
            <summary>
            Gets or sets the name of the queue endpoint in Windows Azure Service Bus.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.SubscriptionName">
            <summary>
            Gets or sets the name of the subscription endpoint in Windows Azure Service Bus.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.EndpointType">
            <summary>
            Gets or sets the type of the Windows Azure Service Bus endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.TransferMode">
            <summary>
            Gets or sets the message transfer mode for the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.ConnectionString">
            <summary>
            Gets or sets the connection string containing all parameters required by a client to be able to connect to Windows Azure Service Bus.
            The connection string must conform to the format explained in the MSDN documentation.
            See http://msdn.microsoft.com/en-us/library/windowsazure/jj149830.aspx for details.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.HostName">
            <summary>
            Gets or sets the server name hosting the Windows Azure Service Bus endpoint. Depending on the version of Windows Azure Service Bus, it is either
            the fully qualified DNS name ending with servicebus.windows.net, or the machine name that is resolvable through the local DNS.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.TransportType">
            <summary>
            Gets or sets the type of the messaging protocol which Windows Azure Service Bus client will use to connect to the endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.IsLoadBalanced">
            <summary>
            Gets or sets the flag indicating whether the endpoint is enabled for load balancing.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.IsCloudService">
            <summary>
            Gets the flag indicating whether or not the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object addresses an endpoint on the Windows Azure Service Bus
            cloud-based service as opposed to on-premises version of Windows Azure Service Bus usually referred to as "Windows Service Bus". 
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.IsSharedAccessEnabled">
            <summary>
            Gets the flag indicating whether or not the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> object describes an endpoint that is enabled for Shared Access Signature (SAS)
            authentication. For more information on Shared Access Signature authentication with Service Bus, see http://msdn.microsoft.com/en-us/library/windowsazure/dn170477.aspx.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType">
            <summary>
            Provides the types of Windows Azure Service Bus endpoints.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType.Undefined">
            <summary>
            Represents an undefined endpoint type. This member can be useful if <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType"/> object needs to refer to a Windows Azure Service Bus
            namespace as a whole as opposed to an individual queue, topic or relay endpoint.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType.Relay">
            <summary>
            Defines an endpoint type prescribing the use of the NetTcpRelayBinding binding with Relayed connection mode.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType.HybridRelay">
            <summary>
            Defines an endpoint type prescribing the use of the NetTcpRelayBinding binding with Hybrid connection mode.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType.Eventing">
            <summary>
            Defines an endpoint type prescribing the use of the NetEventRelayBinding binding.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType.Queue">
            <summary>
            Defines an endpoint type prescribing the use of a Service Bus queue.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointType.Topic">
            <summary>
            Defines an endpoint type prescribing the use of a Service Bus topic.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings">
            <summary>
            Implements a configuration element containing runtime settings for the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel"/> component.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.MaximumLockDuration">
            <summary>
            Gets the maximum lock duration allowed by the underlying messaging infrastructure.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.MaximumTimeToLive">
            <summary>
            Gets the maximum message time-to-live (TTL) allowed by the underlying messaging infrastructure.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.MaximumWaitTimeout">
            <summary>
            Gets the maximum message wait timeout allowed by the underlying messaging infrastructure.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings"/> object with default settings.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.MessageWaitTimeout">
            <summary>
            Gets or sets the custom time value indicating how long Service Bus messaging API will keep a communication channel open while waiting for a new message.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.MessageLockDuration">
            <summary>
            Gets or sets the custom duration during which the messages that are being processed remain marked as “in-flight” and invisible to other competing consumers (if any).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.MessageTimeToLive">
            <summary>
            Gets or sets the custom time-to-live (TTL) value for published messages. The messages older than their TTL will be removed before they can reach the subscribers.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.PrefetchCount">
            <summary>
            Gets or sets the number of messages that the message receiver can simultaneously request. Use PrefetchCount to fetch multiple messages from the server in the same round-trip. 
            This can be useful in scenarios that need lower latency for receiving existing messages from a subscription. 
            Prefetch can also improve throughput depending upon the scenarios as the number of round-trips to the server are reduced.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.UseSharedConnection">
            <summary>
            Gets or sets the flag enabling a connection share between publishers and subscribers. When enabled, publishers and subscribers share the same connection to the 
            underlying messaging infrastructure. When disabled, a dedicated connection is established to the underlying messaging infrastructure to server all publishers and 
            subscribers in isolation.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.UsePeekLock">
            <summary>
            Gets or sets the flag enabling the PeekLock mode when receiving messages from a subscription. With the PeekLock mode, the receive process becomes a two-stage operation 
            making it possible to support scenarios that cannot tolerate failed messages. 
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.UseDuplicateDetection">
            <summary>
            Gets or sets the value indicating whether the duplicate detection functionality must be enforced when accepting messages from the publisher.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.DuplicateDetectionWindow">
            <summary>
            Gets or sets the time value that defines how long message IDs will be retained in the messaging infrastructure in order to detect duplicates.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.UseDeadLettering">
            <summary>
            Gets or sets a value that indicates whether the global dead letter support is enabled either when a message expires or when filter evaluation doesn't succeed.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.UseHttps">
            <summary>
            Gets or sets a value that instructs the Service Bus messaging API to use the HTTPS-based protocol for connectivity, as opposed to the TCP-based SBMP protocol, 
            which is the default choice of the messaging API.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.MaxSizeInMegabytes">
            <summary>
            Gets or sets the maximum size of the topic in megabytes, which is the size of message store allocated for the topic.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.ReceiveBatchSize">
            <summary>
            Gets or sets the maximum number of messages to be received as a single batch.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.SendBatchSize">
            <summary>
            Gets or sets the maximum number of messages to be published as a single batch.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings.Default">
            <summary>
            Returns default settings.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings">
            <summary>
            Implements a configuration element containing runtime settings for the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel"/> component.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings"/> object with default settings.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings.ResponseTimeout">
            <summary>
            Gets or sets the timeout value indicating how long the component will be waiting for response after sending a request.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings.ResponseSubscriptionName">
            <summary>
            Gets or sets the name of a subscription in the underlying messaging service that will be used for delivering response messages to.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings.Default">
            <summary>
            Returns default settings.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode">
            <summary>
            Provides message transfer modes supported by Windows Azure Service Bus.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode.Buffered">
            <summary>
            The request and response messages are both buffered. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode.Streamed">
            <summary>
            The request and response messages are both streamed. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode.StreamedRequest">
            <summary>
            The request message is streamed and the response message is buffered. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusTransferMode.StreamedResponse">
            <summary>
            The request message is buffered and the response message is streamed. 
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration">
            <summary>
            Enables discovering and applying service endpoint configuration at runtime.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultOpenTimeoutSeconds">
            <summary>
            Returns the default time interval for a connection to open before the transport raises an exception.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultCloseTimeoutSeconds">
            <summary>
            Returns the default time interval for a connection to close before the transport raises an exception.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultReceiveTimeoutSeconds">
            <summary>
            Returns the default time interval indicating how long a connection can remain inactive with no application messages being received before it is dropped.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultSendTimeoutSeconds">
            <summary>
            Returns the default time interval indicating how long a write operation can remain active before the transport raises an exception.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultMaxReceivedMessageSize">
            <summary>
            Returns the default maximum allowable message size that can be received.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultMaxBufferPoolSize">
            <summary>
            Returns the default maximum size of any buffer pools used by the transport. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultMaxBufferSize">
            <summary>
            Returns the default value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultReaderQuotasMaxArrayLength">
            <summary>
            Returns the default maximum allowed array length.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultReaderQuotasMaxBytesPerRead">
            <summary>
            Returns the default maximum allowed bytes returned for each read.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultReaderQuotasMaxDepth">
            <summary>
            Returns the default maximum nested node depth.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultReaderQuotasMaxNameTableCharCount">
            <summary>
            Returns the default maximum characters allowed in a table name.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultReaderQuotasMaxStringContentLength">
            <summary>
            Returns the default maximum string length returned by the reader.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultTransferMode">
            <summary>
            Returns the default transfer mode which indicates whether a channel uses streamed or buffered modes for the transfer of request and response messages.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.DefaultRelayConnectionMode">
            <summary>
            Returns the default connection mode for Windows Azure Service Bus.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.RegisterDiscoveryClient(System.IObserver{System.ServiceModel.Description.ServiceEndpoint})">
            <summary>
            Registers a client subscription acting as an observer for all service endpoints that are relayed to the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration"/> object for initialization.
            </summary>
            <param name="discoveryClient">The instance of an object implementing the IObserver interface receiving notifications whenever a <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> is being configured.</param>
            <returns>A disposable client subscription that can be used to cancel the notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.ConfigureDefaults(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Configures default settings for the specified instance of the <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> object.
            In addition, notifies all registered endpoint configuration discovery clients and let them override the endpoint configuration.
            </summary>
            <param name="endpoint">The service endpoint to be configured.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.ConfigureDefaults(System.ServiceModel.Channels.Binding)">
            <summary>
            Configures default settings for the specified generic WCF binding.
            </summary>
            <param name="binding">The WCF transport binding to be configured.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.ConfigureDefaults(Microsoft.ServiceBus.NetOnewayRelayBinding)">
            <summary>
            Configures default settings for the specified <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding"/> binding.
            </summary>
            <param name="eventRelayBinding">The Service Bus transport binding to be configured.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.ConfigureDefaults(Microsoft.ServiceBus.NetTcpRelayBinding)">
            <summary>
            Configures default settings for the specified <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding"/> binding.
            </summary>
            <param name="relayBinding">The Service Bus transport binding to be configured.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.ConfigureDefaults(System.ServiceModel.BasicHttpBinding)">
            <summary>
            Configures default settings for the specified <see cref="T:System.ServiceModel.BasicHttpBinding"/> binding.
            </summary>
            <param name="httpBinding">The HTTP transport binding to be configured.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceEndpointConfiguration.ConfigureDefaults(System.ServiceModel.WebHttpBinding)">
            <summary>
            Configures default settings for the specified <see cref="T:System.ServiceModel.WebHttpBinding"/> binding.
            </summary>
            <param name="webHttpBinding">The REST-based HTTP transport binding to be configured.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection">
            <summary>
            Implements a configuration section containing Windows Azure storage configuration settings.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.SectionName">
            <summary>
            The name of the configuration section represented by this type.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection"/> object with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.AddAccount(System.String,System.String)">
            <summary>
            Adds details of a new storage account into the collection of storage account definitions.
            </summary>
            <param name="accountName">The storage account name.</param>
            <param name="accountKey">The account key, as a Base64-encoded string.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.AddAccount(System.String,System.String,System.String)">
            <summary>
            Adds details of a new storage account into the collection of storage account definitions and overrides the storage retry policy with the specified retry policy name.
            </summary>
            <param name="accountName">The storage account name.</param>
            <param name="accountKey">The account key, as a Base64-encoded string.</param>
            <param name="retryPolicyName">The name of the retry policy definition specified in the application configuration.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.AssignRetryPolicy(System.String,System.String)">
            <summary>
            Associates the specified storage account definition with a retry policy.
            </summary>
            <param name="accountName">The storage account name.</param>
            <param name="retryPolicyName">The name of the retry policy definition specified in the application configuration.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.DefaultTableStorage">
            <summary>
            Gets or sets the name of the Windows Azure storage account intended to be used as default for holding the Azure tables.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.DefaultBlobStorage">
            <summary>
            Gets or sets the name of the Windows Azure storage account intended to be used as default for holding the Azure blobs.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.DefaultQueueStorage">
            <summary>
            Gets or sets the name of the Windows Azure storage account intended to be used as default for holding the Azure queues.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountConfigurationSection.Accounts">
            <summary>
            Returns a collection of Windows Azure storage account definitions configured for the application. 
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo">
            <summary>
            Implements a configuration element holding storage account parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> object with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> object with specified account name and access key.
            </summary>
            <param name="accountName">The storage account name.</param>
            <param name="accountKey">The account key, as a Base64-encoded string.</param>
            <param name="useHttps">The optional parameter that instructs the Windows Azure Storage client to use HTTPS to connect to storage service endpoints, otherwise it will use the HTTP protocol.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.Parse(System.String)">
            <summary>
            Parses the specified Windows Azure storage service connection string and returns a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> instance created from the information in the connection string. 
            </summary>
            <param name="connectionString">A valid connection string for Windows Azure storage service.</param>
            <returns>A <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> object constructed from the values provided in the connection string.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.Parse(Microsoft.WindowsAzure.Storage.CloudStorageAccount)">
            <summary>
            Parses the specified Windows Azure storage account and returns a <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> instance created from the information in the <paramref name="storageAccount"/> object.
            </summary>
            <param name="storageAccount">The  Windows Azure storage account object to be used to create a new <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> instance.</param>
            <returns>A <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> object constructed from the specified storage account object.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.AccountName">
            <summary>
            Gets or sets the name of the storage account associated with the specified credentials.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.AccountKey">
            <summary>
            Gets or sets the key value which is part of storage account credentials for accessing the Windows Azure storage services. 
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.RetryPolicy">
            <summary>
            Gets or sets the retry policy definition associated with the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.UseHttps">
            <summary>
            Gets or sets a value that instructs the Windows Azure Storage client to use HTTPS to connect to storage service endpoints, otherwise it will use the HTTP protocol.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo.IsLocal">
            <summary>
            Gets a flag indicating whether the storage account referenced by this instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo"/> object represents the local storage also known as development storage.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.DatabaseNetworkLibraryErrorCode">
            <summary>
            Holds the error codes reported by the DBNETLIB (Database Network Library) module.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.DataContextExtensions">
            <summary>
            Provides value-add extension methods for <see cref="T:System.Data.Linq.DataContext"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.DataContextExtensions.ExecuteAction(System.Data.Linq.DataContext,Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action)">
            <summary>
            Uses the specified retry policy to execute the custom action and handle connection reset and transaction rollback in the event if the specified action
            fails with a known transient exception determined by the retry policy.
            </summary>
            <param name="context">The context object which is required as per extension method declaration.</param>
            <param name="retryPolicy">The retry policy defining whether to retry the specified <paramref name="action"/> if it fails with a known transient error.</param>
            <param name="action">The custom action that be invoked against the specified <paramref name="context"/> and may be subject to transient errors.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior">
            <summary>
            Provides the extended description of the results of the query and its effect on the database. This enumeration extends the standard <see cref="T:System.Data.CommandBehavior"/>.
            It is decorated with a <see cref="T:System.FlagsAttribute"/> attribute that allows a bitwise combination of its member values.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.Default">
            <summary>
            The query may return multiple result sets. Execution of the query may affect the database state. Default sets no CommandBehavior flags, so calling 
            ExecuteReader(CommandBehavior.Default) is functionally equivalent to calling ExecuteReader().
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.SingleResult">
            <summary>
            The query returns a single result set.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.SchemaOnly">
            <summary>
            The query returns column information only. When using SchemaOnly, the .NET Framework Data Provider for SQL Server precedes the statement being 
            executed with SET FMTONLY ON.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.KeyInfo">
            <summary>
            The query returns column and primary key information. When KeyInfo is used for command execution, the provider will append extra columns to the result 
            set for existing primary key and timestamp columns. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.SingleRow">
            <summary>
            The query is expected to return a single row of the first result set. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.SequentialAccess">
            <summary>
            Provides a way for the DataReader to handle rows that contain columns with large binary values. Rather than loading the entire row, SequentialAccess 
            enables the DataReader to load data as a stream. You can then use the GetBytes or GetChars method to specify a byte location to start the read operation,
            and a limited buffer size for the data being returned. When you specify SequentialAccess, you are required to read from the columns in the order they are 
            returned, although you are not required to read each column. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.CloseConnection">
            <summary>
            When the command is executed, the associated connection object is closed when the associated DataReader object is closed.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior.ClearPoolOnTimeout">
            <summary>
            When the command execution results in a SQL timeout, the associated connection object will be forcibly removed from the connection pool so that a new
            connection can be re-established to the database.
            <remarks>
            In some rare cases, the SQL timeout exceptions could become “sticky” to the underlying (potentially broken) physical connection to a Windows Azure SQL database. 
            From a client application perspective, it may seem like a long-lasting transient fault that continuously results in a query timeout exception and never recovers. 
            One potential remedy is to force the physical connection to close and reopen by cleaning the specific SQL connection pool holding off the “broken” connection.
            This particular flag enables the above behavior by permitting the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection"/> to clear the connection pool.
            </remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1">
            <summary>
            Provides conversion functions to map from IEnumerable to DataTable
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1._fi">
            <summary>
            Store the field information for T
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1._pi">
            <summary>
            Store the property information for T
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1._ordinalMap">
            <summary>
            Store the map of fields and properties to ordinals
            </summary>        
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1.#ctor">
            <summary>
            Initialize the field and property information
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1.Shred(System.Collections.Generic.IEnumerable{`0},System.Data.DataTable,System.Nullable{System.Data.LoadOption})">
            <summary>
            Loads a DataTable from a sequence of objects.
            </summary>
            <param name="source">The sequence of objects to load into the DataTable.</param>
            <param name="table">The input table. The schema of the table must match that 
            the type T.  If the table is null, a new table is created with a schema 
            created from the public properties and fields of the type T.</param>
            <param name="options">Specifies how values from the source sequence will be applied to 
            existing rows in the table.</param>
            <returns>A DataTable created from the source sequence.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1.ShredPrimitive(System.Collections.Generic.IEnumerable{`0},System.Data.DataTable,System.Nullable{System.Data.LoadOption})">
            <summary>
            Load the data from source into the data table table
            </summary>
            <param name="source">Source data</param>
            <param name="table">Destination</param>
            <param name="options">Data loading options</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1.ShredObject(System.Data.DataTable,`0)">
            <summary>
            Given a data table (for metadata) and an instance of T, return 
            an array of object values in the appropriate (ordinal) order
            </summary>
            <param name="table">Table into which the data should be loaded</param>
            <param name="instance">Object to shred</param>
            <returns>An array of objects in the correct ordinal order to be loaded 
            into the data table</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ObjectShredder`1.ExtendTable(System.Data.DataTable,System.Type)">
            <summary>
            Extend the table schema if the input table was null or if the value 
            in the sequence is derived from type T.            
            </summary>
            <param name="table"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection">
            <summary>
            Provides a reliable way of opening connections to and executing commands against the Windows Azure SQL 
            databases taking into account potential network unreliability and a requirement for connection retry.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection"/> class with a given connection string. Uses the default
            retry policy for connections and commands unless retry settings are provided in the connection string.
            </summary>
            <param name="connectionString">The connection string used to open the Windows Azure SQL database.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection"/> class with a given connection string
            and a policy defining whether to retry a request if the connection fails to be opened or a command
            fails to be successfully executed. The specified policy will apply to both SQL connections and SQL commands.
            </summary>
            <param name="connectionString">The connection string used to open the Windows Azure SQL database.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a request if a connection or a command fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection"/> class with a given connection string
            and a policy defining whether to retry a request if the connection fails to be opened or a command
            fails to be successfully executed.
            </summary>
            <param name="connectionString">The connection string used to open the Windows Azure SQL database.</param>
            <param name="connectionRetryPolicy">The retry policy defining whether to retry a request if a connection fails to be established.</param>
            <param name="commandRetryPolicy">The retry policy defining whether to retry a request if a command fails to be executed.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.Open">
            <summary>
            Opens a database connection with the settings specified by the ConnectionString and ConnectionRetryPolicy properties.
            </summary>
            <returns>An object representing the open connection.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.Open(Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Opens a database connection with the settings specified by the ConnectionString and specified retry policy.
            </summary>
            <param name="retryPolicy">The retry policy defining whether to retry a request if the connection fails to be opened.</param>
            <returns>An object representing the open connection.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand``1(System.Data.IDbCommand)">
            <summary>
            Executes a SQL command and returns a result defined by the specified type <typeparamref name="T"/>. This method uses the retry policy specified when 
            instantiating the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection"/> class (or the default retry policy if no policy was set at construction time).
            </summary>
            <typeparam name="T">Either IDataReader, XmlReader or any .NET type defining the type of result to be returned.</typeparam>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <returns>An instance of an IDataReader, XmlReader or any .NET object containing the result.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand``1(System.Data.IDbCommand,Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior)">
            <summary>
            Executes a SQL command and returns a result defined by the specified type <typeparamref name="T"/>. This method uses the retry policy specified when 
            instantiating the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection"/> class (or the default retry policy if no policy was set at construction time).
            </summary>
            <typeparam name="T">Either IDataReader, XmlReader or any .NET type defining the type of result to be returned.</typeparam>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <param name="behavior">Provides a description of the results of the query and its effect on the database.</param>
            <returns>An instance of an IDataReader, XmlReader or any .NET object containing the result.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand``1(System.Data.IDbCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Executes a SQL command using the specified retry policy and returns a result defined by the specified type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Either IDataReader, XmlReader or any .NET type defining the type of result to be returned.</typeparam>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <returns>An instance of an IDataReader, XmlReader or any .NET object containing the result.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand``1(System.Data.IDbCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior)">
            <summary>
            Executes a SQL command using the specified retry policy and returns a result defined by the specified type <typeparamref name="T"/>
            </summary>
            <typeparam name="T">Either IDataReader, XmlReader or any .NET type defining the type of result to be returned.</typeparam>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <param name="behavior">Provides a description of the results of the query and its effect on the database.</param>
            <returns>An instance of an IDataReader, XmlReader or any .NET object containing the result.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand(System.Data.IDbCommand)">
            <summary>
            Executes a SQL command and returns the number of rows affected.
            </summary>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand(System.Data.IDbCommand,Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior)">
            <summary>
            Executes a SQL command and returns the number of rows affected.
            </summary>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <param name="behavior">Provides a description of the results of the query and its effect on the database.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand(System.Data.IDbCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Executes a SQL command and returns the number of rows affected.
            </summary>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ExecuteCommand(System.Data.IDbCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Data.ExtendedCommandBehavior)">
            <summary>
            Executes a SQL command and returns the number of rows affected.
            </summary>
            <param name="command">A SqlCommand object containing the SQL command to be executed.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <param name="behavior">Provides a description of the results of the query and its effect on the database.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a database transaction with the specified System.Data.IsolationLevel value.
            </summary>
            <param name="level">One of the System.Data.IsolationLevel values.</param>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.BeginTransaction">
            <summary>
            Begins a database transaction.
            </summary>
            <returns>An object representing the new transaction.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ChangeDatabase(System.String)">
            <summary>
            Changes the current database for an open Connection object.
            </summary>
            <param name="databaseName">The name of the database to use in place of the current database.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.System#Data#IDbConnection#Open">
            <summary>
            Opens a database connection with the settings specified by the ConnectionString
            property of the provider-specific Connection object.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.Close">
            <summary>
            Closes the connection to the database.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.CreateCommand">
            <summary>
            Creates and returns a SqlCommand object associated with the underlying SqlConnection.
            </summary>
            <returns>A System.Data.SqlClient.SqlCommand object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.System#Data#IDbConnection#CreateCommand">
            <summary>
            Creates and returns an object implementing the IDbCommand interface which is associated 
            with the underlying SqlConnection.
            </summary>
            <returns>A System.Data.SqlClient.SqlCommand object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.System#ICloneable#Clone">
            <summary>
            Creates a new connection that is a copy of the current instance including the connection
            string, connection retry policy and command retry policy.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ConnectionString">
            <summary>
            Gets or sets the connection string for opening a connection to the Windows Azure SQL database.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ConnectionRetryPolicy">
            <summary>
            Specified the policy which decides whether to retry a connection request, based on how many 
            times the request has been made and the reason for the last failure. 
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.CommandRetryPolicy">
            <summary>
            Specified the policy which decides whether to retry a command, based on how many 
            times the request has been made and the reason for the last failure. 
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.Current">
            <summary>
            An instance of the SqlConnection object that represents the connection to an instance of Windows Azure SQL database.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.SessionTracingId">
            <summary>
            Returns the CONTEXT_INFO value that was set for the current session. This value can be used for tracing the query execution problems. 
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.ConnectionTimeout">
            <summary>
            Gets the time to wait while trying to establish a connection before terminating
            the attempt and generating an error.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.Database">
            <summary>
            Gets the name of the current database or the database to be used after a
            connection is opened.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.State">
            <summary>
            Gets the current state of the connection.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ReliableSqlConnection.NonQueryResult">
            <summary>
            This helpers class is intended to be used exclusively for fetching the number of affected records when executing a command using ExecuteNonQuery.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ShredderExtensions">
            <summary>
            Extension methods for shredding data tables.  
            TODO: provide caching for object shredders to avoid
            initializing shredders in a 
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ShredderExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Copy the contents of the enumerable source into an appropriately
            formatted data table
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ShredderExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Nullable{System.Data.LoadOption})">
            <summary>
            Copy the contents of the enumerable source into an appropriately
            formatted data table   
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="table"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingDetails">
            <summary>
            This class is used to correlate a reason and mode for SQL Azure throttling.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingDetails.#ctor(Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingMode,Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason)">
            <summary>
            Initializes a new class of type SqlAzureThrottlingDetails.  
            </summary>
            <param name="mode">The mode of the SQL Azure throttling.</param>
            <param name="reason">The resource that is the reason of the SQL Azure throttling.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingDetails.Mode">
            <summary>
            The throttling mode provided by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingDetails.Reason">
            <summary>
            The resource that the throttling was due to.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingMode">
            <summary>
            Identifies the throttling mode provided by SQL Azure.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingMode.Unknown">
            <summary>
            Unknown mode.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingMode.AllowAll">
            <summary>
            No throttling allow all connections.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingMode.PreventDataGrowth">
            <summary>
            No data growth allowed.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingMode.RejectAllWrites">
            <summary>
            No write commands allowed but reads are allowed.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingMode.RejectAll">
            <summary>
            Reject all connections.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason">
            <summary>
            Used to determine the reason for throttling based on the bit mask.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason.Unknown">
            <summary>
            Unknown throttling reason.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason.HighCpu">
            <summary>
            Hard throttling due to high CPU.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason.MildCpu">
            <summary>
            Soft throttling due to high CPU.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason.HighIoTemporaryLog">
            <summary>
            Hard throttling due to temp log IO.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason.MildIoTemporaryLogild">
            <summary>
            Soft throttling due to temp log IO.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason.TemporaryLogSpaceUsageHigh">
            <summary>
            Hard throttling due to log space usage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingResourceReason.TemporaryLogSpaceUsageMild">
            <summary>
            Soft throttling due to log space usage.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureTransientErrorDetectionStrategy">
            <summary>
            Provides the transient error detection logic for transient faults that are specific to SQL Azure.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlAzureTransientErrorDetectionStrategy.IsTransient(System.Exception)">
            <summary>
            Determines whether the specified exception represents a transient failure that can be compensated by a retry.
            </summary>
            <param name="ex">The exception object to be verified.</param>
            <returns>True if the specified exception is considered as transient, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions">
            <summary>
            Provides a set of extension methods adding retry capabilities into the standard System.Data.SqlClient.SqlCommand implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteNonQuery(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected. Uses the specified retry policy when executing the command.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteNonQuery(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected. Uses the specified retry policy when executing the command.
            Uses a separate specified retry policy when establishing a connection.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="cmdRetryPolicy">The command retry policy defining whether to retry a command if it fails while executing.</param>
            <param name="conRetryPolicy">The connection retry policy defining whether to re-establish a connection if it drops while executing the command.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteReader(System.Data.SqlClient.SqlCommand)">
            <summary>
            Sends the specified command to the connection and builds a SqlDataReader object containing the results.
            Uses the default retry policy when executing the command.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <returns>A System.Data.SqlClient.SqlDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteReader(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Sends the specified command to the connection and builds a SqlDataReader object containing the results.
            Uses the specified retry policy when executing the command.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <returns>A System.Data.SqlClient.SqlDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteReader(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Sends the specified command to the connection and builds a SqlDataReader object containing the results.
            Uses the specified retry policy when executing the command. Uses a separate specified retry policy when
            establishing a connection.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="cmdRetryPolicy">The command retry policy defining whether to retry a command if it fails while executing.</param>
            <param name="conRetryPolicy">The connection retry policy defining whether to re-establish a connection if it drops while executing the command.</param>
            <returns>A System.Data.SqlClient.SqlDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteReader(System.Data.SqlClient.SqlCommand,System.Data.CommandBehavior,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Sends the specified command to the connection and builds a SqlDataReader object using one of the
            CommandBehavior values. Uses the specified retry policy when executing the command.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="behavior">One of the System.Data.CommandBehavior values.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <returns>A System.Data.SqlClient.SqlDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteReader(System.Data.SqlClient.SqlCommand,System.Data.CommandBehavior,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Sends the specified command to the connection and builds a SqlDataReader object using one of the
            CommandBehavior values. Uses the specified retry policy when executing the command.
            Uses a separate specified retry policy when establishing a connection.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="behavior">One of the System.Data.CommandBehavior values.</param>
            <param name="cmdRetryPolicy">The command retry policy defining whether to retry a command if it fails while executing.</param>
            <param name="conRetryPolicy">The connection retry policy defining whether to re-establish a connection if it drops while executing the command.</param>
            <returns>A System.Data.SqlClient.SqlDataReader object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteScalar(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            Uses the specified retry policy when executing the command.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <returns> The first column of the first row in the result set, or a null reference if the result set is empty. Returns a maximum of 2033 characters.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteScalar(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            Uses the specified retry policy when executing the command. Uses a separate specified retry policy when establishing a connection.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="cmdRetryPolicy">The command retry policy defining whether to retry a command if it fails while executing.</param>
            <param name="conRetryPolicy">The connection retry policy defining whether to re-establish a connection if it drops while executing the command.</param>
            <returns> The first column of the first row in the result set, or a null reference if the result set is empty. Returns a maximum of 2033 characters.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteXmlReader(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Sends the specified command to the connection and builds an XmlReader object containing the results.
            Uses the specified retry policy when executing the command.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a command if a connection fails while executing the command.</param>
            <returns>An System.Xml.XmlReader object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandExtensions.ExecuteXmlReader(System.Data.SqlClient.SqlCommand,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Sends the specified command to the connection and builds an XmlReader object containing the results.
            Uses the specified retry policy when executing the command. Uses a separate specified retry policy when establishing a connection.
            </summary>
            <param name="command">The command object which is required as per extension method declaration.</param>
            <param name="cmdRetryPolicy">The command retry policy defining whether to retry a command if it fails while executing.</param>
            <param name="conRetryPolicy">The connection retry policy defining whether to re-establish a connection if it drops while executing the command.</param>
            <returns>An System.Xml.XmlReader object.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandFactory">
            <summary>
            Provides factory methods for instantiating SQL commands.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandFactory.DefaultCommandTimeoutSeconds">
            <summary>
            Returns the default timeout which will be applied to all SQL commands constructed by this factory class.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandFactory.CreateCommand(System.Data.IDbConnection)">
            <summary>
            Creates a generic command of type Stored Procedure and assigns the default command timeout.
            </summary>
            <param name="connection">The database connection object to be associated with the new command.</param>
            <returns>A new SQL command initialized with the respective command type and initial settings.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandFactory.CreateCommand(System.Data.IDbConnection,System.String)">
            <summary>
            Creates a generic command of type Stored Procedure and assigns the specified command text and default command timeout.
            </summary>
            <param name="connection">The database connection object to be associated with the new command.</param>
            <param name="commandText">The text of the command to run against the data source.</param>
            <returns>A new SQL command initialized with the respective command type, text and initial settings.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlCommandFactory.CreateGetContextInfoCommand(System.Data.IDbConnection)">
            <summary>
            Creates a SQL command that is intended to return the connection's context ID which is useful for tracing purposes.
            </summary>
            <param name="connection">The database connection object to be associated with the new command.</param>
            <returns>A new SQL command initialized with the respective command type, text and initial settings.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlConnectionExtensions">
            <summary>
            Provides a set of extension methods adding retry capabilities into the standard <see cref="T:System.Data.SqlClient.SqlConnection"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlConnectionExtensions.Open(System.Data.SqlClient.SqlConnection,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Opens a database connection with the connection settings specified in the ConnectionString property of the connection object.
            Uses the specified retry policy when opening the connection.
            </summary>
            <param name="connection">The connection object which is required as per extension method declaration.</param>
            <param name="retryPolicy">The retry policy defining whether to retry a request if the connection fails to be opened.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions">
            <summary>
            Provides a set of extension methods adding retry capabilities into the standard System.Data.SqlClient.SqlDataAdapter implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Fill(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Adds or refreshes rows in the DataSet (Inherited from DbDataAdapter). Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataSet">A DataSet to fill with records and, if necessary, schema.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a fill if it fails while executing.</param>
            <returns>The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return rows.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Fill(System.Data.SqlClient.SqlDataAdapter,System.Data.DataTable,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Adds or refreshes rows in a specified range in the DataSet to match those in the data source using the DataTable name. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataTable">The name of the DataTable to use for table mapping.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a fill if it fails while executing.</param>
            <returns>The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return rows.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Fill(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Adds or refreshes rows in the DataSet to match those in the data source using the DataSet and DataTable names. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataSet">A DataSet to fill with records and, if necessary, schema.</param>
            <param name="srcTable">The name of the source table to use for table mapping.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a fill if it fails while executing.</param>
            <returns>The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return rows.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Fill(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,System.Int32,System.Int32,System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Adds or refreshes rows in a specified range in the DataSet to match those in the data source using the DataSet and DataTable names. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataSet">A DataSet to fill with records and, if necessary, schema.</param>
            <param name="startRecord">The zero-based record number to start with.</param>
            <param name="maxRecords">The maximum number of records to retrieve.</param>
            <param name="srcTable">The name of the source table to use for table mapping.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a fill if it fails while executing.</param>
            <returns>The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return rows.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Fill(System.Data.SqlClient.SqlDataAdapter,System.Int32,System.Int32,System.Data.DataTable[],Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Adds or refreshes rows in a specified range in the DataSet to match those in the data source using the DataSet and DataTable names. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="startRecord">The zero-based record number to start with.</param>
            <param name="maxRecords">The maximum number of records to retrieve.</param>
            <param name="dataTables">The DataTable objects to fill from the data source.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a fill if it fails while executing.</param>
            <returns>The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return rows.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.FillSchema(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,System.Data.SchemaType,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Adds a DataTable named "Table" to the specified DataSet and configures the schema to match that in the data source based on the specified SchemaType. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataSet">A DataSet to insert the schema in.</param>
            <param name="schemaType">One of the SchemaType values that specify how to insert the schema.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a FillSchema if it fails while executing.</param>
            <returns>A reference to a collection of DataTable objects that were added to the DataSet.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.FillSchema(System.Data.SqlClient.SqlDataAdapter,System.Data.DataTable,System.Data.SchemaType,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Configures the schema of the specified DataTable based on the specified SchemaType. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataTable">The DataTable to be filled with the schema from the data source.</param>
            <param name="schemaType">One of the SchemaType values that specify how to insert the schema.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a FillSchema if it fails while executing.</param>
            <returns>A DataTable that contains schema information returned from the data source.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.FillSchema(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,System.Data.SchemaType,System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Adds a DataTable named "Table" to the specified DataSet and configures the schema to match that in the data source based on the specified SchemaType. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataSet">A DataSet to insert the schema in.</param>
            <param name="schemaType">One of the SchemaType values that specify how to insert the schema.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry a FillSchema if it fails while executing.</param>
            <param name="srcTable">The name of the source table to use for table mapping.</param>
            <returns>A reference to a collection of DataTable objects that were added to the DataSet.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Update(System.Data.SqlClient.SqlDataAdapter,System.Data.DataRow[],Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of DataRow objects. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataRows">An array of DataRow objects used to update the data source.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry an update if it fails while executing.</param>
            <returns>The number of rows successfully updated from the DataSet.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Update(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified DataSet. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataSet">The DataSet used to update the data source.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry an update if it fails while executing.</param>
            <returns>The number of rows successfully updated from the DataSet.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Update(System.Data.SqlClient.SqlDataAdapter,System.Data.DataTable,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified DataTable. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataTable">The DataTable used to update the data source.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry an update if it fails while executing.</param>
            <returns>The number of rows successfully updated from the DataTable.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataAdapterExtensions.Update(System.Data.SqlClient.SqlDataAdapter,System.Data.DataSet,System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Calls the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the DataSet with the specified DataTable name. Uses the specified retry policy when executing the fill.
            </summary>
            <param name="adapter">The adapter object which is required as per extension method declaration.</param>
            <param name="dataSet">The DataSet to use to update the data source.</param>
            <param name="srcTable">The name of the source table to use for table mapping.</param>
            <param name="adapterRetryPolicy">The adapter retry policy defining whether to retry an update if it fails while executing.</param>
            <returns>The number of rows successfully updated from the DataSet.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter">
            <summary>
            Provides a streaming data sink for writing into SQL Azure tables.  Also
            provides dynamic schema creation.
            TODO: dynamic schema creation
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._trace">
            <summary>
            Reference to tracing object
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._destTable">
            <summary>
            Destination table name (optionally schema prefixed)
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._connStr">
            <summary>
            Destination server connection string
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._mapFunc">
            <summary>
            Mapping between property names and table column names
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._policy">
            <summary>
            The retry policy used to handle transient errors
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._recordsWrittenSuccess">
            <summary>
            Stores the number of successfully written records
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._recordsWrittenFail">
            <summary>
            Stores the number of records which could not be written
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._batchesWrittenSuccess">
            <summary>
            Stores the number of batches (tables) that were successfully written
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._batchesWrittenFail">
            <summary>
            Stores the number of batches (tables) which could not be written
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._retryCount">
            <summary>
            The number of retry attempts
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initialize a new data writer
            </summary>
            <param name="sqlConnection"></param>
            <param name="destinationTable"></param>
            <param name="mapFunc"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.#ctor(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initialize a new data writer
            </summary>
            <param name="sqlConnection"></param>
            <param name="destinationTable"></param>
            <param name="mapFunc"></param>
            <param name="retryPolicy"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter._policy_RetryOccurred(System.Int32,System.Exception,System.TimeSpan)">
            <summary>
            Handle policy retry notifications to maintain metrics
            </summary>
            <param name="currentRetryCount"></param>
            <param name="lastException"></param>
            <param name="delay"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.OnCompleted">
            <summary>
            TODO
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.OnError(System.Exception)">
            <summary>
            TODO
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.OnNext(System.Data.DataTable)">
            <summary>
            Attempt to publish the data table contents out to the 
            SQL server.  If it fails, fall over and publish out 
            the context to the next component in the pipeline
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.Subscribe(System.IObserver{Microsoft.Experience.CloudFx.Framework.Data.DataTableResult})">
            <summary>
            Subscribe the downstream listener
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.SuccessfulRecords">
            <summary>
            The number of records which have succesfully been written to the destination SQL store
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.FailedRecords">
            <summary>
            The number of records which could not be written to the destination SQL store
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.SuccessfulBatches">
            <summary>
            The number of batches which have succesfully been written to the destination SQL store
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.FailedBatches">
            <summary>
            The number of batches which could not be written to the destination SQL store
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlDataWriter.RetryCount">
            <summary>
            The number of retry attempts
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.DataTableResult">
            <summary>
            Wrapper class for handling errors writing data into SQL
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.DataTableResult.Destination">
            <summary>
            TODO
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.DataTableResult.Timestamp">
            <summary>
            TODO
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.DataTableResult.FailureException">
            <summary>
            TODO
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.DataTableResult.Data">
            <summary>
            TODO
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.DataTableResult.Source">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions">
            <summary>
            Provides a set of extension methods adding functionality such as decoding of throttling reasons into the standard System.Data.SqlClient.SqlException implementation.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.RegExFormatThrottled">
            <summary>
            The regular expression to get the throttling code.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.RegexMatchGroupName">
            <summary>
            The error code match group name.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ResourceBitMask">
            <summary>
            The bit mask to get the resource that was throttled.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.IsThrottled(System.Data.SqlClient.SqlException)">
            <summary>
            Determines if the SqlException contains an error indicating that SQL Azure Throttled the command that generated the object. 
            </summary>
            <param name="sqlException">The SqlException object which is required as per extension method declaration.</param>
            <returns>True if the exception object contains an error indicating that the reason was due to throttling.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.GetThrottlingDetails(System.Data.SqlClient.SqlException)">
            <summary>
            Decodes the reasons SQL Azure has identified as the cause of throttling.  If there are no elements in the List returned throttling information was not returned.
            </summary>
            <param name="sqlException">The SqlException object which is required as per extension method declaration.</param>
            <returns>A list of throttling details that have been identified as the reason SQL Azure throttled the request.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.AddThrottleDetails(System.Collections.Generic.List{Microsoft.Experience.CloudFx.Framework.Data.SqlAzureThrottlingDetails},System.Data.SqlClient.SqlError)">
            <summary>
            If the current SqlError was a result of throttling it will add an object with the details to the throttlingList.
            </summary>
            <param name="throttlingList">An initialized list that the throttling details should be added to.</param>
            <param name="error">The SqlError that may contain SQL Azure throttling details.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.IsThrottledResourceReason(System.Int32,Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceMask,Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceLevelMask)">
            <summary>
            Helper function used to determine why the resource was throttled.
            </summary>
            <param name="reasonCode">The reason code associated with the throttling.</param>
            <param name="resource">The resource that was throttled.</param>
            <param name="level">The level of the throttling that occurred.</param>
            <returns>True if the reason for throttling matches the parameters.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceMask">
            <summary>
            Used to identify the resources that are causing the throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceMask.Log">
            <summary>
            The log was the reason for throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceMask.Io">
            <summary>
            IO resources are the reason for throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceMask.Cpu">
            <summary>
            The CPU was the reason for throttling.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceLevelMask">
            <summary>
            Used to bask the high or mild throttling reasons.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceLevelMask.Mild">
            <summary>
            Soft throttling is enforced.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlExceptionExtensions.ThrottledResourceLevelMask.High">
            <summary>
            Hard throttling is enforced.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlPublisher">
            <summary>
            Helper methods for bulk loading data into SQL
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.SqlPublisher.DefaultRetryPolicy">
            <summary>
            TODO
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlPublisher.Publish``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            TODO
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="connectionString"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlPublisher.Publish(System.Data.DataTable,System.String,System.String)">
            <summary>
            TODO
            </summary>
            <param name="dt"></param>
            <param name="connectionString"></param>
            <param name="tableName"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlPublisher.Publish``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            TODO
            </summary>
            <typeparam name="T"></typeparam>
            <param name="data"></param>
            <param name="connectionString"></param>
            <param name="tableName"></param>
            <param name="retryPolicy"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlPublisher.Publish(System.Data.DataTable,System.String,System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            TODO
            </summary>
            <param name="dt"></param>
            <param name="connectionString"></param>
            <param name="tableName"></param>
            <param name="retryPolicy"></param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader">
            <summary>
            Provides a disposable wrapper for SQL XML data reader which synchronizes the SQL connection
            disposal with its own lifecycle.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.#ctor(System.Data.SqlClient.SqlCommand)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader"/> object associated with the specified SQL command.
            </summary>
            <param name="command">The associated SQL command providing access to the XML data for the reader.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.#ctor(System.Data.IDbConnection,System.Xml.XmlReader)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader"/> object associated with the specified SQL connection and the original XML reader.
            </summary>
            <param name="connection">The associated SQL connection providing access to the XML data for this reader.</param>
            <param name="innerReader">The original XML reader access to the XML data for this reader.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.Close">
            <summary>
            Closes both the original <see cref="T:System.Xml.XmlReader"/> as well as associated SQL connection.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.GetAttribute(System.Int32)">
            <summary>
            Returns the value of the attribute with the specified index.
            </summary>
            <param name="i">The index of the attribute. The index is zero-based. (The first attribute has index 0.)</param>
            <returns>The value of the specified attribute. This method does not move the reader.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.GetAttribute(System.String,System.String)">
            <summary>
            Returns the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName"/> and <see cref="P:System.Xml.XmlReader.NamespaceURI"/>.
            </summary>
            <param name="name">The local name of the attribute.</param>
            <param name="namespaceUri">The namespace URI of the attribute.</param>
            <returns>The value of the specified attribute. If the attribute is not found or the value is <see cref="F:System.String.Empty"/>, null is returned. This method does not move the reader.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.GetAttribute(System.String)">
            <summary>
            Returns the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name"/>.
            </summary>
            <param name="name">The qualified name of the attribute.</param>
            <returns>The value of the specified attribute. If the attribute is not found or the value is <see cref="F:System.String.Empty"/>, null is returned.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.LookupNamespace(System.String)">
            <summary>
            Resolves a namespace prefix in the current element's scope
            </summary>
            <param name="prefix">The prefix whose namespace URI you want to resolve. To match the default namespace, pass an empty string.</param>
            <returns>The namespace URI to which the prefix maps or null if no matching prefix is found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.MoveToAttribute(System.String,System.String)">
            <summary>
            Moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName"/> and <see cref="P:System.Xml.XmlReader.NamespaceURI"/>.
            </summary>
            <param name="name">The local name of the attribute.</param>
            <param name="ns">The namespace URI of the attribute.</param>
            <returns>True if the attribute is found; otherwise, false. If false, the reader's position does not change.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.MoveToAttribute(System.String)">
            <summary>
            Moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.Name"/>.
            </summary>
            <param name="name">The qualified name of the attribute.</param>
            <returns>True if the attribute is found; otherwise, false. If false, the reader's position does not change.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.MoveToElement">
            <summary>
            Moves to the element that contains the current attribute node.
            </summary>
            <returns>True if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); false if the reader is not positioned on an attribute (the position of the reader does not change).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.MoveToFirstAttribute">
            <summary>
            Moves to the first attribute.
            </summary>
            <returns>True if an attribute exists (the reader moves to the first attribute); otherwise, false (the position of the reader does not change).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.MoveToNextAttribute">
            <summary>
            Moves to the next attribute.
            </summary>
            <returns>True if there is a next attribute; false if there are no more attributes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.Read">
            <summary>
            Reads the next node from the stream.
            </summary>
            <returns>True if the next node was read successfully; false if there are no more nodes to read.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.ReadAttributeValue">
            <summary>
            Parses the attribute value into one or more Text, EntityReference, or EndEntity nodes.
            </summary>
            <returns>True if there are nodes to return, false if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read. An empty attribute, such as, misc="", returns true with a single node with a value of <see cref="F:System.String.Empty"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.ResolveEntity">
            <summary>
            Resolves the entity reference for EntityReference nodes.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.AttributeCount">
            <summary>
            Returns the number of attributes on the current node.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.BaseURI">
            <summary>
            Returns the base URI of the current node.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.Depth">
            <summary>
            Returns the depth of the current node in the XML document.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.EOF">
            <summary>
            Returns a value indicating whether the reader is positioned at the end of the stream.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.HasValue">
            <summary>
            Returns a value indicating whether the current node can have a <see cref="P:System.Xml.XmlReader.Value"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.IsEmptyElement">
            <summary>
            Returns a value indicating whether the current node is an empty element.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.LocalName">
            <summary>
            Returns the local name of the current node.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.NameTable">
            <summary>
            Returns the <see cref="T:System.Xml.XmlNameTable"/> associated with this implementation.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.NamespaceURI">
            <summary>
            Returns the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.NodeType">
            <summary>
            Returns the type of the current node.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.Prefix">
            <summary>
            Returns the namespace prefix associated with the current node
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.ReadState">
            <summary>
            Returns the state of the reader.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.SqlXmlReader.Value">
            <summary>
            Returns the text value of the current node.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition">
            <summary>
            Implements an object holding the decoded reason code returned from SQL Azure when encountering throttling conditions.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.ThrottlingErrorNumber">
            <summary>
            Returns the error number that corresponds to throttling conditions reported by SQL Azure.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.throttledResources">
            <summary>
            Maintains a collection of key-value pairs where a key is resource type and a value is the type of throttling applied to the given resource type.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.sqlErrorCodeRegEx">
            <summary>
            Provides a compiled regular expression used for extracting the reason code from the error message.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.FromException(System.Data.SqlClient.SqlException)">
            <summary>
            Determines throttling conditions from the specified SQL exception.
            </summary>
            <param name="ex">The <see cref="T:System.Data.SqlClient.SqlException"/> object containing information relevant to an error returned by SQL Server when encountering throttling conditions.</param>
            <returns>An instance of the object holding the decoded reason codes returned from SQL Azure upon encountering throttling conditions.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.FromError(System.Data.SqlClient.SqlError)">
            <summary>
            Determines the throttling conditions from the specified SQL error.
            </summary>
            <param name="error">The <see cref="T:System.Data.SqlClient.SqlError"/> object containing information relevant to a warning or error returned by SQL Server.</param>
            <returns>An instance of the object holding the decoded reason codes returned from SQL Azure when encountering throttling conditions.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.FromReasonCode(System.Int32)">
            <summary>
            Determines the throttling conditions from the specified reason code.
            </summary>
            <param name="reasonCode">The reason code returned by SQL Azure which contains the throttling mode and the exceeded resource types.</param>
            <returns>An instance of the object holding the decoded reason codes returned from SQL Azure when encountering throttling conditions.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.ToString">
            <summary>
             Returns a textual representation the current ThrottlingCondition object including the information held with respect to throttled resources.
            </summary>
            <returns>A string that represents the current ThrottlingCondition object.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.ThrottlingMode">
            <summary>
            Returns the value that reflects the throttling mode in SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.ThrottledResources">
            <summary>
            Returns the list of resources in SQL Azure that were subject to throttling conditions.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.Unknown">
            <summary>
            Returns an unknown throttling condition in the event the actual throttling condition cannot be determined.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsThrottledOnDataSpace">
            <summary>
            Returns a flag indicating that physical data file space throttling was reported by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsThrottledOnLogSpace">
            <summary>
            Returns a flag indicating that physical log space throttling was reported by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsThrottledOnLogWrite">
            <summary>
            Returns a flag indicating that transaction activity throttling was reported by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsThrottledOnDataRead">
            <summary>
            Returns a flag indicating that data read activity throttling was reported by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsThrottledOnCpu">
            <summary>
            Returns a flag indicating that CPU throttling was reported by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsThrottledOnDatabaseSize">
            <summary>
            Returns a flag indicating that database size throttling was reported by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsThrottledOnWorkerThreads">
            <summary>
            Returns a flag indicating that concurrent requests throttling was reported by SQL Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition.IsUnknown">
            <summary>
            Returns a flag indicating that throttling conditions were not determined with certainty.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingMode">
            <summary>
            Defines the possible throttling modes in SQL Azure.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingMode.NoThrottling">
            <summary>
            Corresponds to "No Throttling" throttling mode whereby all SQL statements can be processed.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingMode.RejectUpdateInsert">
            <summary>
            Corresponds to "Reject Update / Insert" throttling mode whereby SQL statements such as INSERT, UPDATE, CREATE TABLE and CREATE INDEX are rejected.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingMode.RejectAllWrites">
            <summary>
            Corresponds to "Reject All Writes" throttling mode whereby SQL statements such as INSERT, UPDATE, DELETE, CREATE, DROP are rejected.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingMode.RejectAll">
            <summary>
            Corresponds to "Reject All" throttling mode whereby all SQL statements are rejected.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingMode.Unknown">
            <summary>
            Corresponds to an unknown throttling mode whereby throttling mode cannot be determined with certainty.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingType">
            <summary>
            Defines the possible throttling types in SQL Azure.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingType.None">
            <summary>
            Indicates that no throttling was applied to a given resource.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingType.Soft">
            <summary>
            Corresponds to a Soft throttling type. Soft throttling is applied when machine resources such as, CPU, IO, storage, and worker threads exceed 
            predefined safety thresholds despite the load balancer’s best efforts. 
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingType.Hard">
            <summary>
            Corresponds to a Hard throttling type. Hard throttling is applied when the machine is out of resources, for example storage space.
            With hard throttling, no new connections are allowed to the databases hosted on the machine until resources are freed up.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingType.Unknown">
            <summary>
            Corresponds to an unknown throttling type in the event when the throttling type cannot be determined with certainty.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType">
            <summary>
            Defines the types of resources in SQL Azure which may be subject to throttling conditions.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.PhysicalDatabaseSpace">
            <summary>
            Corresponds to "Physical Database Space" resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.PhysicalLogSpace">
            <summary>
            Corresponds to "Physical Log File Space" resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.LogWriteIODelay">
            <summary>
            Corresponds to "Transaction Log Write IO Delay" resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.DataReadIODelay">
            <summary>
            Corresponds to "Database Read IO Delay" resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.CPU">
            <summary>
            Corresponds to "CPU" resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.DatabaseSize">
            <summary>
            Corresponds to "Database Size" resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.WorkerThreads">
            <summary>
            Corresponds to "SQL Worker Thread Pool" resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.Internal">
            <summary>
            Corresponds to an internal resource which may be subject to throttling.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Data.ThrottledResourceType.Unknown">
            <summary>
            Corresponds to an unknown resource type in the event when the actual resource cannot be determined with certainty.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope">
            <summary>
            Provides support for retry policy-aware transactional scope.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class. 
            Implements no retry policy, it just invokes the unit of work exactly once.
            </summary>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified retry policy.
            </summary>
            <param name="retryPolicy">The retry policy defining whether to retry the execution of the entire scope should a transient fault be encountered.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.TransactionScopeOption,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified requirements.
            Implements no retry policy, it just invokes the unit of work exactly once.
            </summary>
            <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption"/> enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified timeout value and requirements.
            Implements no retry policy, it just invokes the unit of work exactly once.
            </summary>
            <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption"/> enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="scopeTimeout">The TimeSpan after which the transaction scope times out and aborts the transaction.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified timeout value, transaction scope options and retry policy.
            Uses the ReadCommitted isolation level by default.
            </summary>
            <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption"/> enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="scopeTimeout">The TimeSpan after which the transaction scope times out and aborts the transaction.</param>
            <param name="retryPolicy">The retry policy defining whether to retry the execution of the entire scope should a transient fault be encountered.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified requirements.
            Implements no retry policy, it just invokes the unit of work exactly once.
            </summary>
            <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption"/> enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="transactionOptions">A <see cref="T:System.Transactions.TransactionOptions"/> structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified requirements and specified retry policy.
            </summary>
            <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption"/> enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="txOptions">A <see cref="T:System.Transactions.TransactionOptions"/> structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.</param>
            <param name="retryPolicy">The retry policy defining whether to retry the execution of the entire scope should a transient fault be encountered.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.TransactionScopeOption,Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified requirements and retry policy.
            Uses the ReadCommitted isolation level by default.
            </summary>
            <param name="scopeOption">An instance of the <see cref="T:System.Transactions.TransactionScopeOption"/> enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="retryPolicy">The retry policy defining whether to retry the execution of the entire scope should a transient fault be encountered.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.Transaction,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class and sets the specified transaction as the ambient transaction, 
            so that transactional work done inside the scope uses this transaction. Implements no retry policy, it just invokes the unit of work exactly once.
            </summary>
            <param name="tx">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.Transaction,Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified retry policy and sets the specified transaction as the ambient transaction, 
            so that transactional work done inside the scope uses this transaction.
            </summary>
            <param name="tx">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</param>
            <param name="retryPolicy">The retry policy defining whether to retry the execution of the entire scope should a transient fault be encountered.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified timeout value, and sets the specified transaction as the ambient transaction, 
            so that transactional work done inside the scope uses this transaction. Implements no retry policy, it just invokes the unit of work exactly once.
            </summary>
            <param name="tx">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</param>
            <param name="scopeTimeout">The TimeSpan after which the transaction scope times out and aborts the transaction.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.#ctor(System.Transactions.Transaction,System.TimeSpan,Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope"/> class with the specified timeout value, and sets the specified transaction as the ambient transaction, 
            so that transactional work done inside the scope uses this transaction. Uses the with the specified retry policy.
            </summary>
            <param name="tx">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</param>
            <param name="scopeTimeout">The TimeSpan after which the transaction scope times out and aborts the transaction.</param>
            <param name="retryPolicy">The retry policy defining whether to retry the execution of the entire scope should a transient fault be encountered.</param>
            <param name="unitOfWork">A delegate representing the executable unit of work which will be retried if fails.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.InvokeUnitOfWork">
            <summary>
            Executes the underlying unit of work and retries as prescribed by the current retry policy.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.Complete">
            <summary>
            Indicates that all operations within the scope are completed successfully.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.System#IDisposable#Dispose">
            <summary>
            Ends the transaction scope.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Data.TransactionRetryScope.RetryPolicy">
            <summary>
            Returns the policy which defines whether to retry the execution of the entire scope should a transient fault be encountered.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.IRemoteLoggingServiceContract">
            <summary>
            Defines a service contract that must be supported by a service which provides remote logging capabilities.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.IRemoteLoggingServiceContract.TraceEvents(Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent[])">
            <summary>
            Submits the specified trace events to the remote logging service for processing.
            </summary>
            <param name="events">The list of trace events to be processed by the service.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.IRemoteLoggingServiceChannel">
            <summary>
            Defines a client channel contract to communicate with a service that provides remote logging capabilities.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlExceptionObserver">
            <summary>
            Implements an observer for SQL exceptions which also acts as an observable sequence of <see cref="T:System.Data.SqlClient.SqlError"/> objects extracted from the <see cref="T:System.Data.SqlClient.SqlException"/> objects being observed.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlExceptionObserver.Subscribe(System.IObserver{System.Data.SqlClient.SqlError})">
            <summary>
            Subscribes to <see cref="T:System.Data.SqlClient.SqlError"/> objects emitted by the instrumented application.
            </summary>
            <param name="observer">The object that will be receiving notifications carrying the <see cref="T:System.Data.SqlClient.SqlError"/> objects.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlExceptionObserver.OnNext(System.Exception)">
            <summary>
            Gets called by the provider to notify the observer about a new exception.
            </summary>
            <param name="value">The exception that has resulted in raising a notification.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlExceptionObserver.OnCompleted">
            <summary>
            Gets called by the provider to indicate that it has finished sending notifications to this observer.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlExceptionObserver.OnError(System.Exception)">
            <summary>
            Gets called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.
            </summary>
            <param name="error">The exception that resulted in an error condition.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlThrottlingStateObserver">
            <summary>
            Implements an observer for SQL exceptions which also acts as an observable sequence of <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition"/> objects extracted from the <see cref="T:System.Data.SqlClient.SqlException"/> objects being observed.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlThrottlingStateObserver.Subscribe(System.IObserver{Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition})">
            <summary>
            Subscribes to <see cref="T:Microsoft.Experience.CloudFx.Framework.Data.ThrottlingCondition"/> objects extracted from the <see cref="T:System.Data.SqlClient.SqlException"/> objects being observed.
            </summary>
            <param name="observer">The object that will be receiving notifications carrying the <see cref="T:System.Data.SqlClient.SqlError"/> objects.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlThrottlingStateObserver.OnNext(System.Exception)">
            <summary>
            Gets called by the provider to notify the observer about a new exception.
            </summary>
            <param name="value">The exception that has resulted in raising a notification.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlThrottlingStateObserver.OnCompleted">
            <summary>
            Gets called by the provider to indicate that it has finished sending notifications to this observer.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.SqlThrottlingStateObserver.OnError(System.Exception)">
            <summary>
            Gets called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.
            </summary>
            <param name="error">The exception that resulted in an error condition.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions">
            <summary>
            Provides value-add extension methods for <see cref="T:System.Exception"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.Format(System.Exception,System.Boolean)">
            <summary>
            Formats the specified exception into a detailed set of information with optional stack trace intended to facilitate troubleshooting.
            </summary>
            <param name="exception">The exception object for which detailed information will be sought.</param>
            <param name="includeStackTrace">The optional flag indicating whether or not call stack details should be included.</param>
            <returns>The formatted message carrying exception details.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsEntityAlreadyExists(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Entity Already Exists" error code.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents the "Entity Already Exists" error, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsEntityNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Entity Not Found" error code.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents the "Entity Not Found" error, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsTableBeingDeleted(System.Data.Services.Client.DataServiceRequestException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Table Is Being Deleted" error code.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents the "Table Is Being Deleted" error, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsResourceNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Container Not Found" or "Resource Not Found" error codes.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents one of the expected errors outlined above, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsBlobNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Blob Not Found" error code.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents one of the expected errors outlined above, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsQueueNotFound(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Queue Not Found" error code.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents one of the expected errors outlined above, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsResourceAlreadyExists(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Container Already Exists" or "Resource Already Exists" error codes.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents one of the expected errors outlined above, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsBlobAlreadyExists(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Blob Already Exists" error code.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents one of the expected errors outlined above, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsQueueAlreadyExists(Microsoft.WindowsAzure.Storage.StorageException)">
            <summary>
            Extends the <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> class with the value-add method that verifies whether or not a given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance
            represents the "Queue Already Exists" error code.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:Microsoft.WindowsAzure.Storage.StorageException"/> instance represents one of the expected errors outlined above, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionExtensions.IsSqlTimeoutException(System.Data.SqlClient.SqlException)">
            <summary>
            Extends the <see cref="T:System.Data.SqlClient.SqlException"/> class with the value-add method that verifies whether or not a given <see cref="T:System.Data.SqlClient.SqlException"/> instance
            represents the SQL timeout error.
            </summary>
            <param name="ex">The <see cref="T:System.Data.SqlClient.SqlException"/> object instance which this method extends.</param>
            <returns>True if the given <see cref="T:System.Data.SqlClient.SqlException"/> instance represents a SQL timeout, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter">
            <summary>
            Provides exception formatting capability to construct a detailed message about an exception for logging and tracing purposes.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.#ctor">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.#ctor(System.String)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter"/> class with the application name.
            </summary>
            <param name="applicationName">The application name.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.#ctor(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter"/> class with the additional information.
            </summary>
            <param name="additionalInfo">The additional information to log.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.#ctor(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initialize a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter"/> class with the additional information and the application name.
            </summary>
            <param name="applicationName">The application name.</param>
            <param name="additionalInfo">The additional information to log.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.Format(System.Exception,System.Boolean)">
            <summary>
            Returns the detailed information about a given exception with optional stack trace intended to facilitate troubleshooting.
            </summary>
            <param name="exception">The exception object for which detailed information will be sought.</param>
            <param name="includeStackTrace">The optional flag indicating whether or not call stack details should be included.</param>
            <returns>The formatted text carrying rich details about the specified exception.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.FormatException(System.Exception)">
            <summary>
            Returns the detailed information about a given exception.
            </summary>
            <param name="exception">The exception object for which detailed information will be sought.</param>
            <returns>The formatted text carrying rich details about the specified exception.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.FormatException(System.Exception,System.Boolean)">
            <summary>
            Returns the detailed information about a given exception with optional stack trace intended to facilitate troubleshooting.
            </summary>
            <param name="exception">The exception object for which detailed information will be sought.</param>
            <param name="includeStackTrace">The flag indicating whether or not call stack details should be included.</param>
            <returns>The formatted text carrying rich details about the specified exception.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExceptionTextFormatter.CollectAdditionalInfo">
            <devdoc>
            Add additional environmental information. 
            </devdoc>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController">
            <summary>
            Implements a component that is responsible for controlling the extensibility behavior and providing enhanced factory-based object activation.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibilityController">
            <summary>
            Defines an interface that must be implemented by an object supporting factory-based activation in the extensibility model.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Extensibility.IComponentExtension">
            <summary>
            Defines an interface that must be implemented by all components which extend the functionality of their hosting component.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibilityController.AddFactory``1(System.Func{``0},System.Boolean)">
            <summary>
            Registers the specified function as a factory responsible for instantiating and returning the instances of the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of objects returned by the factory.</typeparam>
            <param name="factory">The factory function responsible for instantiating and returning the instances of the specified type.</param>
            <param name="singleton">A flag indicating whether or not the factory will be producing single instance objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibilityController.GetFactory``1">
            <summary>
            Returns a factory object responsible for instantiating and returning the instances of the specified type <typeparamref name="T"/>. 
            </summary>
            <typeparam name="T">The type of objects returned by the factory.</typeparam>
            <returns>The factory object responsible for instantiating and returning the instances of the specified type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController.#ctor(Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController"/> class.
            </summary>
            <param name="owner">The extensible owner object that owns the extensibility controller.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController.AddFactory``1(System.Func{``0},System.Boolean)">
            <summary>
            Registers the specified function as a factory responsible for instantiating and returning the instances of the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of objects returned by the factory.</typeparam>
            <param name="factory">The factory function responsible for instantiating and returning the instances of the specified type.</param>
            <param name="singleton">A flag indicating whether or not the factory will be producing single instance objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController.GetFactory``1">
            <summary>
            Returns a factory object responsible for instantiating and returning the instances of the specified type <typeparamref name="T"/>. 
            </summary>
            <typeparam name="T">The type of objects returned by the factory.</typeparam>
            <returns>The factory object responsible for instantiating and returning the instances of the specified type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController.System#ServiceModel#IExtension{Microsoft#Experience#CloudFx#Framework#Extensibility#IExtensibleComponent}#Attach(Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent)">
            <summary>
            Notifies this extension component that it has been registered in the owner's collection of extensions.
            </summary>
            <param name="owner">The extensible owner object that aggregates this extension.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController.System#ServiceModel#IExtension{Microsoft#Experience#CloudFx#Framework#Extensibility#IExtensibleComponent}#Detach(Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent)">
            <summary>
            Notifies this extension component that it has been unregistered from the owner's collection of extensions.
            </summary>
            <param name="owner">The extensible owner object that aggregates this extension.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibilityController.Extensions">
            <summary>
            Gets a collection of extension objects managed by the controller.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentExtensionMethods">
            <summary>
            Provides extension methods for components that participate in the extension composition model.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentExtensionMethods.EnsureExists``1(System.ServiceModel.IExtensionCollection{Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent})">
            <summary>
            Verifies whether or not the specified extension type exists in the extension collection. If not found, the extension will be
            automatically instantiated using its default parameterless constructor and added into the underlying collection.
            </summary>
            <typeparam name="T">The type of the extension. Must implement <see cref="T:Microsoft.Experience.CloudFx.Framework.Extensibility.IComponentExtension"/> as prescribed by the extensibility model.</typeparam>
            <param name="collection">The instance of the object implementing the <see cref="T:System.ServiceModel.IExtensionCollection`1"/> interface which this method extends.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentExtensionMethods.EnsureExists``1(System.ServiceModel.IExtensionCollection{Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent},System.Func{``0})">
            <summary>
            Verifies whether or not the specified extension type exists in the extension collection. If not found, the extension will be
            automatically instantiated using the specified <paramref name="factory"/> and added into the underlying collection.
            </summary>
            <typeparam name="T">The type of the extension. Must implement <see cref="T:Microsoft.Experience.CloudFx.Framework.Extensibility.IComponentExtension"/> as prescribed by the extensibility model.</typeparam>
            <param name="collection">The instance of the object implementing the <see cref="T:System.ServiceModel.IExtensionCollection`1"/> interface which this method extends.</param>
            <param name="factory">The factory function responsible for instantiating and returning the instance of the specified type <typeparamref name="T"/>.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentExtensionMethods.Demand``1(System.ServiceModel.IExtensionCollection{Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent})">
            <summary>
            Verifies whether or not the specified extension type exists in the extension collection. If not found, an instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudApplicationException"/>
            will be thrown. Otherwise, the first found instance of the specified extension type will be returned.
            </summary>
            <typeparam name="T">The type of the extension. Must implement <see cref="T:Microsoft.Experience.CloudFx.Framework.Extensibility.IComponentExtension"/> as prescribed by the extension model.</typeparam>
            <param name="collection">The instance of the object implementing the <see cref="T:System.ServiceModel.IExtensionCollection`1"/> interface which this method extends.</param>
            <returns>The instance of the specified extension type, if found in the extension collection</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentExtensionMethods.AddFactory``1(System.ServiceModel.IExtensionCollection{Microsoft.Experience.CloudFx.Framework.Extensibility.IExtensibleComponent},System.Func{``0},System.Boolean)">
            <summary>
            Registers the specified function as a factory responsible for instantiating and returning the instances of the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of objects returned by the factory.</typeparam>
            <param name="collection">The instance of the object implementing the <see cref="T:System.ServiceModel.IExtensionCollection`1"/> interface which this method extends.</param>
            <param name="factory">The factory function responsible for instantiating and returning the instances of the specified type.</param>
            <param name="singleton">A flag indicating whether or not the factory will be producing single instance objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentExtensionMethods.GetExtensions(System.Web.UI.Page)">
            <summary>
            Extends the <see cref="T:System.Web.UI.Page"/> class with the ability to retrieve the collection of extensions declared and instantiated in the web application's scope.
            </summary>
            <param name="page">The instance of the <see cref="T:System.Web.UI.Page"/> class which this method extends.</param>
            <returns>The collection of extension objects for the current web application.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1">
            <summary>
            Implements a collection of components intended to extend the functional and behavioral aspects of the applications.
            </summary>
            <typeparam name="T">The type of extensible objects stored in the collection.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1"/> class with a specified owner.
            </summary>
            <param name="owner">The owner of the collection.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.#ctor(`0,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1"/> class with a specified owner and synchronization object.
            </summary>
            <param name="owner">The owner of the collection.</param>
            <param name="syncRoot">The object used to synchronize access the thread-safe collection.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.Find``1">
            <summary>
            Finds the specified extension object in the collection.
            </summary>
            <typeparam name="TExtension">The type of extension object.</typeparam>
            <returns>The instance of the extension object that was found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.FindAll``1">
            <summary>
            Finds all extension object in the collection specified by <typeparamref name="TExtension"/>.
            </summary>
            <typeparam name="TExtension">The type of extension object.</typeparam>
            <returns>A collection of all extension objects in the collection that implement the specified type.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.ClearItems">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.InsertItem(System.Int32,System.ServiceModel.IExtension{`0})">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert. The value can be null for reference types.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.SetItem(System.Int32,System.ServiceModel.IExtension{`0})">
            <summary>
            Replaces the element at the specified index. This method is unsupported by the <see cref="T:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1"/> class.
            </summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Extensibility.ExtensibleComponentCollection`1.System#Collections#Generic#ICollection{System#ServiceModel#IExtension{T}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.FrameworkUtility">
            <summary>
            Provides a set of common methods used by framework components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.random">
            <summary>
            To improve performance, it is recommended to create one Random object to generate many random numbers over time, 
            instead of repeatedly creating a new Random objects to generate one random number.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.GetDeclarativeAttribute``1(System.Object)">
            <summary>
            Returns an instance of the declarative attribute of type <typeparamref name="T"/> which is applied to the .NET type of the specified object.
            </summary>
            <typeparam name="T">The type of the declarative attribute. Must inherit from the <see cref="T:System.Attribute"/> class.</typeparam>
            <param name="obj">The object supplying the declarative attribute.</param>
            <returns>The instance of the declarative attribute of type <typeparamref name="T"/>, or a null reference if no attribute matching the specified type was found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.GetDeclarativeAttribute``1(System.Type)">
            <summary>
            Returns an instance of the declarative attribute of type <typeparamref name="T"/> which is applied to the specified .NET type.
            </summary>
            <typeparam name="T">The type of the declarative attribute. Must inherit from the <see cref="T:System.Attribute"/> class.</typeparam>
            <param name="type">The .NET type supplying the declarative attribute.</param>
            <returns>The instance of the declarative attribute of type <typeparamref name="T"/>, or a null reference if no attribute matching the specified type <typeparamref name="T"/> was found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.GetDeclarativeAttributes``1(System.Type)">
            <summary>
            Returns instances of the declarative attribute of type <typeparamref name="T"/> which is applied to the specified .NET type.
            </summary>
            <typeparam name="T">The type of the declarative attribute. Must inherit from the <see cref="T:System.Attribute"/> class.</typeparam>
            <param name="type">The .NET type supplying the declarative attribute.</param>
            <returns>A list containing declarative attribute of type <typeparamref name="T"/>, or an empty list if no attributes matching the specified type <typeparamref name="T"/> were found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.CreateXmlDocument">
            <summary>
            Creates an empty XML document that only contains the XML processing instruction.
            </summary>
            <returns>An instance of the <see cref="T:System.Xml.XmlDocument"/> class.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.CreateXmlDocument(System.String)">
            <summary>
            Creates an instance of an XML document that contains the XML processing instruction and is initialized with the specified data.
            </summary>
            <param name="data">The XML data to be used when creating a new XML document.</param>
            <returns>An instance of the <see cref="T:System.Xml.XmlDocument"/> class.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.CreateXmlDocument(System.IO.Stream)">
            <summary>
            Creates an instance of an XML document that contains the XML processing instruction and is initialized with the data loaded from the specified stream.
            </summary>
            <param name="data">The data stream supplying data for the new XML document.</param>
            <returns>An instance of the <see cref="T:System.Xml.XmlDocument"/> class.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.ConvertTo``1(System.Object)">
            <summary>
            Performs conversion of the specified value into another type using a type converter.
            </summary>
            <typeparam name="T">The result type into which the specified value will be converted.</typeparam>
            <param name="value">The value to convert.</param>
            <returns>An object of type <typeparamref name="T"/> that represents the converted value, or the default value of type <typeparamref name="T"/> if no type converter was found for the specified type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.ConvertFrom``1(System.Object)">
            <summary>
            Performs conversion of the specified value from another type using a type converter.
            </summary>
            <typeparam name="T">The result type into which the specified value will be converted.</typeparam>
            <param name="value">The value to convert.</param>
            <returns>An object of type <typeparamref name="T"/> that represents the converted value, or the default value of type <typeparamref name="T"/> if no type converter was found for the specified type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.GetHashedValue(System.String[])">
            <summary>
            Converts the specified list of values into a fixed-length hash.
            </summary>
            <param name="values">One or more values to be hashed.</param>
            <returns>An hash value that corresponds to the specified combination of values.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.ComputeExponentialBackoff(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
            <summary>
            Calculates the random exponential back-off interval using the specified minimum, maximum and delta parameters.
            </summary>
            <param name="minBackoff">The minimum back-off time.</param>
            <param name="maxBackoff">The maximum back-off time.</param>
            <param name="delta">The time value which will be used for calculating a random delta in the exponential delay.</param>
            <param name="increment">The increment that defines the progression in the exponential curve.</param>
            <returns>The time value containing the computed random exponential back-off interval.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.GetServiceContractType(System.Type)">
            <summary>
            Finds the type of service contract that the given service type is implementing.
            </summary>
            <param name="serviceType">The service type.</param>
            <returns>The type of service contract implemented by the specified service type</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.GetPortableTypeName(System.Type)">
            <summary>
            Returns a portable name of the specified <paramref name="type"/> that allows publishers and subscribers engaged in the publish/subscribe messaging
            pattern to be able to exchange strongly-typed messages without dependencies on the assembly versions or when different assemblies have congruent
            definitions for the same message type.
            </summary>
            <param name="type">The type to be used to create a portable name from.</param>
            <returns>The portable name computed from the specified <paramref name="type"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.ObfuscateConnectionString(System.String)">
            <summary>
            Removes sensitive security information such as passwords, shared secret keys and storage account keys from the specified connection string.
            Returns a new connection string which includes a canonical placeholder in place of the sensitive information. The obfuscated connection string value
            can then be used for logging purposes, which in turn ensures a level of compliance with the applicable software security standards such as PCI-DSS.
            </summary>
            <param name="connString">The original connection string to be obfuscated.</param>
            <returns>The obfuscated connection string with sensitive security information replaced with a canonical &lt;OBFUSCATED&gt; placeholder.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.FrameworkUtility.CreateExpression``2(System.String)">
            <summary>
            Creates an expression retrieving a value for the <paramref name="propertyName"/> in the specified <typeparamref name="TEntity"/>.
            </summary>
            <typeparam name="TEntity">The type for which the expression will be generated.</typeparam>
            <typeparam name="TResult">The type of the property the expression tree is being created for.</typeparam>
            <param name="propertyName">The name of the property the expression tree is being created for.</param>
            <returns>A function used to retrieve the property specified.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.GlobalConst">
            <summary>
            Provides a set of reusable constants that need to be accessible globally throughout the framework.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.GlobalConst.DataContracts">
            <summary>
            Provides the well-known namespaces used by WCF data contracts.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.DataContracts.General">
            <summary>
            Returns the standard name of the General namespace.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.DataContracts.Infrastructure">
            <summary>
            Returns the standard name of the Infrastructure namespace.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.GlobalConst.ServiceContracts">
            <summary>
            Provides the well-known namespaces used by WCF service contracts.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.ServiceContracts.General">
            <summary>
            Returns the standard name of the General namespace.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.GlobalConst.WellKnownSubscriptionName">
            <summary>
            Provides the well-known subscription names which are recognized and honored by the default implementations of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> such as <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.WellKnownSubscriptionName.PublisherExceptions">
            <summary>
            Returns the standard subscription name used by the messaging clients to gain access to exceptions occurring on the publisher's side.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.WellKnownSubscriptionName.ConsumerExceptions">
            <summary>
            Returns the standard subscription name used by the messaging clients to gain access to exceptions occurring on the consumer's side.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.GlobalConst.WellKnownProtocolScheme">
            <summary>
            Provides the well-known protocol schemes used by application when constructing endpoint addresses.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.WellKnownProtocolScheme.ServiceBus">
            <summary>
            Returns the standard name of the protocol scheme reserved for Service Bus endpoint addresses.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.WellKnownProtocolScheme.Http">
            <summary>
            Returns the standard name of the protocol scheme reserved for HTTP-based endpoint addresses.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.WellKnownProtocolScheme.SecureHttp">
            <summary>
            Returns the standard name of the protocol scheme reserved for HTTPS endpoint addresses.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid">
            <summary>
            Contains the default GUID values for standard trace providers.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.Default">
            <summary>
            Returns the provider GUID value for default tracing provider.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.DataAccessComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to supporting data access components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.ServiceComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to supporting service components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.CloudServiceComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to supporting cloud service components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.CloudStorageComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to supporting cloud storage components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.TransformComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to supporting data transformation components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.WebRoleComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to web role components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.WorkerRoleComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to worker role components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.MessagingComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to messaging component.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.GlobalConst.TracingProviderGuid.MonitorComponent">
            <summary>
            Returns the provider GUID value for a tracing provider dedicated to monitoring component.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Guard">
            <summary>
            Implements the common guard methods.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotNullOrEmptyString(System.String,System.String)">
            <summary>
            Checks a string argument to ensure it isn't null or empty.
            </summary>
            <param name="argumentValue">The argument value to check.</param>
            <param name="argumentName">The name of the argument.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotNull(System.Object,System.String)">
            <summary>
            Checks an argument to ensure it isn't null.
            </summary>
            <param name="argumentValue">The argument value to check.</param>
            <param name="argumentName">The name of the argument.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotDefaultValue``1(``0,System.String)">
            <summary>
            Checks an argument to ensure that its value is not the default value for its type.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="argumentValue">The value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentsSatisfyCondition``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)">
            <summary>
            Checks that all values of the specified argument satisfy a given condition.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="argumentValues">The values of the argument.</param>
            <param name="predicate">The condition to satisfy.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentCollectionNotEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Checks whether or not the specified collection is empty.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="argumentValues">The values of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotZeroOrNegativeValue(System.Int32,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Int32"/> to ensure that its value is not zero or negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Int32"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotNegativeValue(System.Int32,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Int32"/> to ensure that its value is not negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Int32"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotZeroOrNegativeValue(System.Int64,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Int64"/> to ensure that its value is not zero or negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Int64"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotNegativeValue(System.Int64,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Int64"/> to ensure that its value is not negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Int64"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotZeroOrNegativeValue(System.Decimal,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Decimal"/> to ensure that its value is not zero or negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Decimal"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotNegativeValue(System.Decimal,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Decimal"/> to ensure that its value is not negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Decimal"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotZeroOrNegativeValue(System.Double,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Double"/> to ensure that its value is not zero or negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Double"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotNegativeValue(System.Double,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Double"/> to ensure that its value is not negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Double"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotZeroOrNegativeValue(System.Single,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Single"/> to ensure that its value is not zero or negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Single"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotNegativeValue(System.Single,System.String)">
            <summary>
            Checks an argument of type <see cref="T:System.Single"/> to ensure that its value is not negative.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Single"/> value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentInRange``1(``0,``0,``0,System.String)">
            <summary>
            Checks if the supplied argument falls into the given range of values.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="argumentValue">The value of the argument.</param>
            <param name="minValue">The minimum allowed value of the argument.</param>
            <param name="maxValue">The maximum allowed value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.ArgumentNotGreaterThan(System.Double,System.Double,System.String)">
            <summary>
            Checks an argument to ensure that its value doesn't exceed the specified ceiling baseline.
            </summary>
            <param name="argumentValue">The <see cref="T:System.Double"/> value of the argument.</param>
            <param name="ceilingValue">The <see cref="T:System.Double"/> ceiling value of the argument.</param>
            <param name="argumentName">The name of the argument for diagnostic purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.EnumValueIsDefined(System.Type,System.Object,System.String)">
            <summary>
            Checks an enum instance to ensure that its value is defined by the specified enum type.
            </summary>
            <param name="enumType">The enum type the value should correspond to.</param>
            <param name="enumValue">The enum value to check.</param>
            <param name="argumentName">The name of the argument holding the value.</param>
            <remarks>
            Does not currently support Flags enums.
            </remarks>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.EnumValueIsDefined``1(``0,System.String)">
            <summary>
            Checks an enum instance to ensure that its value is defined by the specified enum type.
            </summary>
            <typeparam name="T">The type of the enum.</typeparam>
            <param name="enumValue">The enum value to check.</param>
            <param name="argumentName">The name of the argument holding the value.</param>
            <remarks>
            This method does not currently support Flags enums.
            The constraint on the method should be updated to "enum" once the C# compiler supports it.
            </remarks>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.TypeIsAssignableFromType(System.Type,System.Type,System.String)">
            <summary>
            Verifies that an argument type is assignable from the provided type (meaning
            interfaces are implemented, or classes exist in the base class hierarchy).
            </summary>
            <param name="assignee">The argument type.</param>
            <param name="providedType">The type it must be assignable from.</param>
            <param name="argumentName">The argument name.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Guard.IsDefaultValue``1(``0)">
            <summary>
            Determines whether the specified value is the default value for its type.
            </summary>
            <typeparam name="T">The type of the value to be checked.</typeparam>
            <param name="value">The value to be checked.</param>
            <returns><c>true</c> if the given value is the default value for its type.; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Guard.ValidatedNotNullAttribute">
            <summary>
            This attribute class tells Code Analysis (FxCop) that a method validates that a parameter is not null
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider">
            <summary>
            Implements a tracing component that uses either local ETW tracing infrastructure or Windows Azure diagnostic monitor API to log the application trace events.
            </summary>
            <remarks>
            <para>Depending on the execution environment, this component will adjust its internal functionality to match the most common needs of the developer.</para>
            <para>When running in the context of a cloud application, this class will automatically use the <see cref="T:Microsoft.WindowsAzure.Diagnostics.DiagnosticMonitorTraceListener"/> component
            to route all tracing events to. In addition, it recognizes whether or not the application is running inside the Windows Azure Compute Emulator.
            If so, this class will also engage the Development Fabric trace listener into tracing activities, which will result in trace events being displayed
            directly in the Compute Emulator's console.</para>
            <para>By contrast, when running outside the cloud environment, the <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider"/> class will switch over to use the ETW tracing infrastructure.
            It will use the specified provider GUID to configure the ETW event provider. Once this is set up, the standard ETW tracing tools such as TraceView 
            can be used to get insights into the application's behavior, provided the application is instrumented using the <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager"/> component. In addition, 
            when the developer is running the instrumented application inside the Visual Studio debugger, the <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider"/> class will automatically enable 
            the default diagnostic trace listener. By doing this, the class allows the developer to see the trace events inside the Visual Studio IDE or using the familiar tools 
            such as DebugView, which in turn translates into a better developer experience during troubleshooting or testing.</para>
            <para>The trace level can be controlled by configuring the Windows Azure Diagnostic Monitor for cloud applications or specifying the desired level in the ETW tool 
            for on-premises applications. To control the level of tracing when running inside the debugger, a trace switch called CloudFx.Diagnostics.DefaultTraceSwitch
            can be added to the application's configuration file. For more information about trace switches, refer to http://msdn.microsoft.com/en-us/library/t06xyy08.aspx. </para>
            </remarks>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider">
            <summary>
            Defines an interface which must be supported by custom implementations of tracing event providers.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceInfo(System.String)">
            <summary>
            Writes an information message to the trace.
            </summary>
            <param name="message">A string containing the informational message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceInfo(System.String,System.Object[])">
            <summary>
            Writes a formatted information message to the trace.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceInfo(System.Func{System.String})">
            <summary>
            Writes an information message to the trace. This method is intended to be used when the data that needs to be written to the trace is expensive 
            in terms of the resources required to construct it. The method represented by the Func&lt;string&gt; delegate will only be invoked if tracing is enabled.
            </summary>
            <param name="expensiveDataProvider">A method that has no parameters and returns a value that needs to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceWarning(System.String)">
            <summary>
            Writes a warning message to the trace.
            </summary>
            <param name="message">A string containing the warning message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceWarning(System.String,System.Object[])">
            <summary>
            Writes a formatted warning message to the trace.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceWarning(System.Int32,System.String)">
            <summary>
            Writes a warning message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The identity of the warning message. This serves the purposes of the Event ID value.</param>
            <param name="message">A string containing the warning message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceWarning(System.Int32,System.String,System.Object[])">
            <summary>
            Writes a formatted warning message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The identity of the warning message. This serves the purposes of the Event ID value.</param>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceDetails(System.String,System.Object[])">
            <summary>
            Writes a formatted message to the trace. This method can be used to trace detailed information which is only required in particular cases.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceDetails(System.Func{System.String})">
            <summary>
            Writes a message to the trace. This method can be used to trace detailed information
            which is only required in particular cases. The method represented by the Func(T) 
            delegate will only be invoked if tracing is enabled.
            </summary>
            <param name="expensiveDataProvider">A method that has no parameters and returns a value that needs to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.String)">
            <summary>
            Writes an error message to the trace.
            </summary>
            <param name="message">A string containing the error message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.String,System.Object[])">
            <summary>
            Writes a formatted error message to the trace.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.Int32,System.String)">
            <summary>
            Writes an error message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The ID of the error message.</param>
            <param name="message">A string containing the error message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.Int32,System.String,System.Object[])">
            <summary>
            Writes a formatted error message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The ID of the error message.</param>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.Exception)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.Int32,System.Exception)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="id">The ID of the error event.</param>
            <param name="ex">An exception to be formatted and written to the trace.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.Exception,System.Guid)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceError calls.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.Exception,System.Boolean)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
            <param name="includeStackTrace">A flag indicating whether or not call stack details should be included.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceError(System.Exception,System.Boolean,System.Guid)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
            <param name="includeStackTrace">A flag indicating whether or not call stack details should be included.</param>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceError calls.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceIn">
            <summary>
            Writes an informational event into the trace log indicating that a method is invoked. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceIn method would typically be at the very beginning of an instrumented code.
            </summary>
            <returns>An unique value which can be used as a correlation token to correlate TraceIn and TraceOut calls.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceIn(System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating that a method is invoked. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceIn method would typically be at the very beginning of an instrumented code.
            </summary>
            <param name="parameters">The method parameters which will be included into the traced event (make sure you do not supply any sensitive data).</param>
            <returns>An unique value which can be used as a correlation token to correlate TraceIn and TraceOut calls.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceIn(System.Guid)">
            <summary>
            Writes an informational event into the trace log indicating that a method is invoked. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceIn method would typically be at the very beginning of an instrumented code.
            This overload should be used when correlation token (callToken) is defined by the calling code.
            </summary>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceOut calls.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceOut">
            <summary>
            Writes an informational event into the trace log indicating that a method is about to complete. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceOut method would typically be at the very end of an instrumented code, before the code returns its result (if any).
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceOut(System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating that a method is about to complete. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceOut method would typically be at the very end of an instrumented code, before the code returns its result (if any).
            </summary>
            <param name="outParameters">The method parameters which will be included into the traced event (make sure you do not supply any sensitive data).</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceOut(System.Guid,System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating that a method is about to complete. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceOut method would typically be at the very end of an instrumented code, before the code returns its result (if any).
            </summary>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceOut calls.</param>
            <param name="outParameters">The method parameters which will be included into the traced event (make sure you do not supply any sensitive data).</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceScope(System.String,System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating a start of a scope for which duration will be measured.
            </summary>
            <param name="scope">A textual identity of a scope for which duration will be traced.</param>
            <param name="parameters">A list containing zero or more data items to be included into scope details.</param>
            <returns>The number of ticks that represent the date and time when it was invoked. This date/time will be used later when tracing the end of the scope.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider.TraceScope(System.String,System.Guid)">
            <summary>
            Writes an informational event into the trace log indicating the start of a scope for which duration will be measured.
            This method is provided in order to ensure optimal performance when only 1 parameter of type Guid is available for tracing.
            </summary>
            <param name="scope">A textual identity of a scope for which duration will be traced.</param>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceStartScope and TraceEndScope calls.</param>
            <returns>The number of ticks that represent the date and time when it was invoked. This date/time will be used later when tracing the end of the scope.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider"/> object using the specified provider name and its unique identity.
            </summary>
            <param name="providerName">The name of the tracing provider.</param>
            <param name="providerGuid">The unique ID of the tracing provider.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.IsEnabled">
            <summary>
            Returns a flag indicating whether any session enabled the provider, regardless of the level and keyword values used to enable the provider.
            </summary>
            <returns>True if the provider is enabled to any session; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.IsEnabled(System.Diagnostics.TraceEventType)">
            <summary>
            Returns a flag indicating whether any session is requesting the specified event type from the provider.
            </summary>
            <param name="eventType">The type of event.</param>
            <returns>True if tracing is enabled for a given even type, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceInfo(System.String)">
            <summary>
            Writes an information message to the trace.
            </summary>
            <param name="message">A string containing the informational message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceInfo(System.String,System.Object[])">
            <summary>
            Writes a formatted information message to the trace.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
            <!-- Might be interesting to measure how much time goes into GC, allocation of this array, and boxing of value types. -->
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceInfo(System.Func{System.String})">
            <summary>
            Writes an information message to the trace. This method is intended to be used when the data that needs to be
            written to the trace is expensive to be fetched. The method represented by the <see cref="T:System.Func`1"/> delegate will only be invoked if
            tracing is enabled.
            </summary>
            <param name="expensiveDataProvider">A method that has no parameters and returns a value that needs to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceDetails(System.String,System.Object[])">
            <summary>
            Writes a formatted message to the trace. This method can be used to trace detailed information which is only required in particular cases.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceDetails(System.Func{System.String})">
            <summary>
            Writes a message to the trace. This method can be used to trace detailed information
            which is only required in particular cases. The method represented by the <see cref="T:System.Func`1"/> 
            delegate will only be invoked if tracing is enabled.
            </summary>
            <param name="expensiveDataProvider">A method that has no parameters and returns a value that needs to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceWarning(System.String)">
            <summary>
            Writes a warning message to the trace.
            </summary>
            <param name="message">A string containing the warning message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceWarning(System.String,System.Object[])">
            <summary>
            Writes a formatted warning message to the trace.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceWarning(System.Int32,System.String)">
            <summary>
            Writes a warning message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The identity of the warning message. This serves the purposes of the Event ID value.</param>
            <param name="message">A string containing the warning message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceWarning(System.Int32,System.String,System.Object[])">
            <summary>
            Writes a formatted warning message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The identity of the warning message. This serves the purposes of the Event ID value.</param>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.String)">
            <summary>
            Writes an error message to the trace.
            </summary>
            <param name="message">A string containing the error message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.String,System.Object[])">
            <summary>
            Writes a formatted error message to the trace.
            </summary>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.Int32,System.String)">
            <summary>
            Writes an error message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The ID of the error message.</param>
            <param name="message">A string containing the error message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.Int32,System.String,System.Object[])">
            <summary>
            Writes a formatted error message that is identified by the specified <paramref name="id"/> to the trace.
            </summary>
            <param name="id">The ID of the error message.</param>
            <param name="format">A string containing zero or more format items.</param>
            <param name="parameters">A list containing zero or more data items to format.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.Exception)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.Int32,System.Exception)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="id">The ID of the error event.</param>
            <param name="ex">An exception to be formatted and written to the trace.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.Exception,System.Guid)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceError calls.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.Exception,System.Boolean)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
            <param name="includeStackTrace">A flag indicating whether or not call stack details should be included.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceError(System.Exception,System.Boolean,System.Guid)">
            <summary>
            Writes the exception details to the trace.
            </summary>
            <param name="ex">An exception to be formatted and written to the trace.</param>
            <param name="includeStackTrace">A flag indicating whether or not call stack details should be included.</param>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceError calls.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceIn">
            <summary>
            Writes an informational event into the trace log indicating that a method is invoked. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceIn method would typically be at the very beginning of an instrumented code.
            </summary>
            <returns>An unique value which can be used as a correlation token to correlate TraceIn and TraceOut calls.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceIn(System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating that a method is invoked. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceIn method would typically be at the very beginning of an instrumented code.
            </summary>
            <param name="parameters">The method parameters which will be included into the traced event (make sure you do not supply any sensitive data).</param>
            <returns>An unique value which can be used as a correlation token to correlate TraceIn and TraceOut calls.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceIn(System.Guid)">
            <summary>
            Writes an informational event into the trace log indicating that a method is invoked. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceIn method would typically be at the very beginning of an instrumented code.
            This overload should be used when correlation token (callToken) is defined by the calling code.
            </summary>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceOut calls.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceOut">
            <summary>
            Writes an informational event into the trace log indicating that a method is about to complete. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceOut method would typically be at the very end of an instrumented code, before the code returns its result (if any).
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceOut(System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating that a method is about to complete. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceOut method would typically be at the very end of an instrumented code, before the code returns its result (if any).
            </summary>
            <param name="outParameters">The method parameters which will be included into the traced event (make sure you do not supply any sensitive data).</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceOut(System.Guid,System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating that a method is about to complete. This can be useful for tracing method calls to help analyze the 
            code execution flow. A call to the TraceOut method would typically be at the very end of an instrumented code, before the code returns its result (if any).
            </summary>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceIn and TraceOut calls.</param>
            <param name="outParameters">The method parameters which will be included into the traced event (make sure you do not supply any sensitive data).</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceScope(System.String,System.Object[])">
            <summary>
            Writes an informational event into the trace log indicating a start of a scope for which duration will be measured.
            </summary>
            <param name="scope">A textual identity of a scope for which duration will be traced.</param>
            <param name="parameters">A list containing zero or more data items to be included into scope details.</param>
            <returns>The number of ticks that represent the date and time when it was invoked. This date/time will be used later when tracing the end of the scope.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceScope(System.String,System.Guid)">
            <summary>
            Writes an informational event into the trace log indicating the start of a scope for which duration will be measured.
            This method is provided in order to ensure optimal performance when only 1 parameter of type Guid is available for tracing.
            </summary>
            <param name="scope">A textual identity of a scope for which duration will be traced.</param>
            <param name="callToken">An unique value which is used as a correlation token to correlate TraceStartScope and TraceEndScope calls.</param>
            <returns>The number of ticks that represent the date and time when it was invoked. This date/time will be used later when tracing the end of the scope.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.Subscribe(System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to all trace events emitted by the instrumented application through this trace event provider component.
            </summary>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.Subscribe(System.IObserver{System.Exception})">
            <summary>
            Subscribes to exceptions emitted by the instrumented application through this trace event provider component.
            </summary>
            <param name="observer">The object that will be receiving notifications about exceptions emitted by the instrumented application.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.TraceEvent(System.Diagnostics.TraceEventType,System.String,System.Int32,System.String)">
            <summary>
            Writes a trace log entry of the specified type, category and event ID.
            </summary>
            <param name="eventType">The type of event.</param>
            <param name="eventLabel">The event label.</param>
            <param name="eventId">The ID of the trace event.</param>
            <param name="message">The message to be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HybridTraceEventProvider.OnError(System.Exception)">
            <summary>
            Notifies the active subscribers about a given exception allowing the interested subscriber to perform custom actions.
            </summary>
            <param name="error">The exception that needs to be relayed to its interested subscribers.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.ExtensionMethods">
            <summary>
            Provides extension methods which supplement the tracing provider with additional enhancements.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ExtensionMethods.TraceCommand(Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider,System.Data.IDbCommand)">
            <summary>
            Writes detailed information about the specified database command including command statement, its parameters and their values.
            </summary>
            <param name="traceProvider">The type which is extended by this extension method.</param>
            <param name="command">The database command which will be traced.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.ExtensionMethods.TraceError(Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider,System.Exception,System.String,System.Object[])">
            <summary>
            Writes an error message to the trace which consists of the details of the specified <paramref name="exception"/> along with arbitrary context supplied 
            in a <paramref name="message"/> with optional <paramref name="parameters"/>. The context may be useful for troubleshooting as it will be included into the top exception 
            which then wraps the specified <paramref name="exception"/> as an inner exception.
            </summary>
            <param name="traceProvider">The type which is extended by this extension method.</param>
            <param name="exception">The exception accompanying the error message, which will be logged and published to its subscribers.</param>
            <param name="message">A string containing the error message to be logged, which may also include zero or more format items specified in the <paramref name="parameters"/> list.</param>
            <param name="parameters">The optional list containing zero or more data items to be included into the formatted message.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.HighResolutionTimer">
            <summary>
            Provides the implementation of a high-resolution timer.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HighResolutionTimer.GetElapsedMilliseconds(System.Int64)">
            <summary>
            Gets the total elapsed time (in milliseconds) measured by taking into account the specified start timer value. 
            </summary>
            <param name="startTicks">The start timer value.</param>
            <returns>The total elapsed time in milliseconds.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HighResolutionTimer.GetElapsedMilliseconds(System.Int64,System.Int64)">
            <summary>
            Gets the total elapsed time (in milliseconds) measured between the two specified timer values. 
            </summary>
            <param name="startTicks">The start timer value.</param>
            <param name="finishTicks">The finish timer value.</param>
            <returns>The calculated the number of ticks.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.HighResolutionTimer.GetElapsedDateTimeTicks(System.Int64,System.Int64)">
            <summary>
            Gets the number of ticks that represent the date and time measured by taking into account the specified start timer value.
            </summary>
            <param name="startTicks">The start timer value.</param>
            <param name="finishTicks">The finish timer value.</param>
            <returns>The calculated the number of ticks.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.HighResolutionTimer.Frequency">
            <summary>
            Returns the frequency of the high-resolution timer, if one exists.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.HighResolutionTimer.IsHighResolution">
            <summary>
            Indicates whether the timer is based on a high-resolution performance counter.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.HighResolutionTimer.CurrentTickCount">
            <summary>
            Returns the current value of the high-resolution timer. 
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility">
            <summary>
            Providers helper methods for other classes that implement instrumentation logic.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.IsTracingMethod(System.Reflection.MethodBase)">
            <summary>
            Determines if the specified method is part of the tracing library.
            </summary>
            <param name="methodToCheck">MethodBase describing the method to check.</param>
            <returns>True if the method is a member of the tracing library, false if not.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.GetCallingMethod">
            <summary>
            Walks the call stack to find the name of the method which invoked this class.
            </summary>
            <returns>MethodBase representing the most recent method in the stack which is not a member of this class.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.GetFullMethodName(System.Reflection.MethodBase)">
            <summary>
            Returns a fully qualified method name including the containing type name.
            </summary>
            <param name="callingMethod">The instance of <see cref="T:System.Reflection.MethodBase"/> reflection object containing method metadata.</param>
            <returns>A string containing the full method name.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.GetParameterList(System.Object[])">
            <summary>
            Returns a string representing a list of parameters to be written into trace log.
            </summary>
            <param name="parameters">Parameters to be included in the trace log entry.</param>
            <returns>A comma-separated list of formatted parameters.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources">
            <summary>
            Provides the standard format strings and resources utilized by tracing components.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.NoReturnValue">
            <summary>
            Returns the standard text that appear in the trace log when a method doesn't have a return value.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceMessage">
            <summary>
            Returns the standard format string that applies to all messages written into the trace log.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceIn">
            <summary>
            Returns the standard text that appear in the trace log when writing a method entry event.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceOut">
            <summary>
            Returns the standard text that appear in the trace log when writing a method exit event.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceOutNoToken">
            <summary>
            Returns the standard text that appear in the trace log when writing a method exit event that doesn't contain a call token.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceOutNoTokenAndParams">
            <summary>
            Returns the standard text that appear in the trace log when writing a method exit event that doesn't contain a call token or output parameters.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceError">
            <summary>
            Returns the standard text that appear in the trace log when writing an error event.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceScopeStart">
            <summary>
            Returns the standard text that appear in the trace log when writing a scope entry event.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceScopeEnd">
            <summary>
            Returns the standard text that appear in the trace log when writing a scope exit event.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceLogResources.FormatStringTraceScopeEndNoParams">
            <summary>
            Returns the standard text that appear in the trace log when writing a scope exit event that doesn't contain any context parameters. 
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId">
            <summary>
            Provides the standard event ID values.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.Info">
            <summary>
            Returns the information event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.DetailedInfo">
            <summary>
            Returns the detailed information event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.Warning">
            <summary>
            Returns the warning event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.Error">
            <summary>
            Returns the error event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.MethodEntry">
            <summary>
            Returns the method entry event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.MethodExit">
            <summary>
            Returns the method exit event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.StartScope">
            <summary>
            Returns the start scope event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.EndScope">
            <summary>
            Returns the end scope event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.Heartbeat">
            <summary>
            Returns the heartbeat event ID.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.SystemEventId.TransientFault">
            <summary>
            Returns the transient fault event ID.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel">
            <summary>
            Provides the standard names of well-known trace event labels for reusability purposes.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceInfo">
            <summary>
            Returns the standard name of the TraceInfo trace event category.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceDetails">
            <summary>
            Returns the standard name of the TraceDetails trace event category.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceWarning">
            <summary>
            Returns the standard name of the TraceWarning trace event category.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceError">
            <summary>
            Returns the standard name of the TraceError trace event category.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceIn">
            <summary>
            Returns the standard name of the TraceIn trace event category.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceOut">
            <summary>
            Returns the standard name of the TraceOut trace event category.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceStartScope">
            <summary>
            Returns the standard name of the TraceStartScope trace event category.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.TraceEndScope">
            <summary>
            Returns the standard name of the TraceEndScope trace event category.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.InstrumentationUtility.TraceEventLabel.CreateFrom(Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent)">
            <summary>
            Returns the name of the trace event category which corresponds to the type of the specified trace event.
            </summary>
            <param name="eventData">The trace event providing the data.</param>
            <returns>The name of the trace event category if event type has been recognized, otherwise the name of the default trace event category.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent">
            <summary>
            Describes a single record in the trace log and provides factory classes for instantiating the trace records from different sources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Create(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Returns an instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object initialized with the given parameters.
            </summary>
            <param name="eventCache">Provides trace event data specific to a thread and a process.</param>
            <param name="eventSource">The name of the source generated the event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="eventId">The ID of the trace event.</param>
            <param name="message">The text of the trace message.</param>
            <returns>The initialized instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object containing trace event details.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Create(System.Diagnostics.TraceEventCache,System.String,System.Guid,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Returns an instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object initialized with the given parameters.
            </summary>
            <param name="eventCache">Provides trace event data specific to a thread and a process.</param>
            <param name="eventSource">The name of the source generated the event.</param>
            <param name="eventSourceId">The unique identifier of the source generated this event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="eventId">The ID of the trace event.</param>
            <param name="message">The text of the trace message.</param>
            <returns>The initialized instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object containing trace event details.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Create(System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Returns an instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object initialized with the given parameters.
            </summary>
            <param name="eventSource">The name of the source generated the event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="eventId">The ID of the trace event.</param>
            <param name="message">The text of the trace message.</param>
            <returns>The initialized instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object containing trace event details.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Create(System.String,System.Guid,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Returns an instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object initialized with the given parameters.
            </summary>
            <param name="eventSource">The name of the source generated the event.</param>
            <param name="eventSourceId">The unique identifier of the source generated this event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="eventId">The ID of the trace event.</param>
            <param name="message">The text of the trace message.</param>
            <returns>The initialized instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object containing trace event details.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Create(System.String,System.Guid,System.Diagnostics.TraceEventType,System.String,System.Int32,System.String)">
            <summary>
            Returns an instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object initialized with the given parameters.
            </summary>
            <param name="eventSource">The name of the source generated the event.</param>
            <param name="eventSourceId">The unique identifier of the source generated this event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="eventCategory">The category of event.</param>
            <param name="eventId">The ID of the trace event.</param>
            <param name="message">The text of the trace message.</param>
            <returns>The initialized instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object containing trace event details.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Create(System.Xml.XmlReader)">
            <summary>
            Reconstructs an instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object from its XML representation generated by <see cref="T:System.Runtime.Serialization.DataContractSerializer"/>.
            </summary>
            <param name="reader">The XML reader supplying the serialized representation of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object.</param>
            <returns>The initialized instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent"/> object containing trace event details.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.DateTime">
            <summary>
            Gets the date and time at which the event trace occurred.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.ProcessId">
            <summary>
            Gets the unique identifier of the current process.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.ProcessName">
            <summary>
            Gets the name of the current process.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.ThreadId">
            <summary>
            Gets a unique identifier for the current managed thread.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.MachineName">
            <summary>
            Gets the machine name originating this event.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.EventId">
            <summary>
            Gets the ID of the trace event.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Timestamp">
            <summary>
            Gets the current number of ticks in the timer mechanism.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.EventSource">
            <summary>
            Gets the name of the source generated this event.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.EventSourceId">
            <summary>
            Gets the unique identifier of the source generated this event.
            Depending on usage scenario, this identifier could represent an ETW provider's GUID.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.EventCategory">
            <summary>
            Gets the name of the event category that describes this event.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.EventType">
            <summary>
            One of the System.Diagnostics.TraceEventType values specifying the type of event that has caused the trace.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent.Message">
            <summary>
            Gets the text of the trace message.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager">
            <summary>
            Implements the entry points into tracing components which are intended to be invoked from user code.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Register(System.String,System.Guid)">
            <summary>
            Registers a trace provider under the specified name and unique GUID value.
            </summary>
            <param name="providerName">The name of the trace provider.</param>
            <param name="providerGuid">The value uniquely identifying the trace provider.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Create(System.String,System.Guid)">
            <summary>
            Returns an instance of a trace provider initialized with the specified name and provider GUID.
            </summary>
            <param name="providerName">The name of the trace provider.</param>
            <param name="providerGuid">The value uniquely identifying the trace provider.</param>
            <returns>An instance of the trace provider implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider"/> interface.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Create(System.Type)">
            <summary>
            Returns an instance of a trace provider for the specified type. This requires that the type supplies its GUID which will be used
            for registering it with the ETW infrastructure.
            </summary>
            <param name="componentType">The type which must be decorated with a <see cref="T:System.Runtime.InteropServices.GuidAttribute"/>.</param>
            <returns>A lazy instance of the trace provider implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider"/> interface.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to all trace events emitted by the instrumented application.
            </summary>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Diagnostics.TraceEventType,System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to a specific type of trace events emitted by the instrumented application.
            </summary>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Diagnostics.TraceEventType,System.IObserver{System.Collections.Generic.IList{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent}},System.Int32,System.TimeSpan)">
            <summary>
            Subscribes to a specific type of trace events emitted by the instrumented application. The events are buffered and are sent out to the specified 
            observer when either the buffer is full or a given amount of time has elapsed.
            </summary>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <param name="bufferSize">The maximum element count in the buffer.</param>
            <param name="bufferWindow">The maximum time length of the buffering window.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Func{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent,System.Boolean},System.IObserver{System.Collections.Generic.IList{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent}},System.Int32,System.TimeSpan)">
            <summary>
            Subscribes to trace events based upon a custom predicate which will be used to select a subset of events emitted by the instrumented application.
            The events are buffered and are sent out to the specified observer when either the buffer is full or a given amount of time has elapsed.
            </summary>
            <param name="predicate">The condition to satisfy.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <param name="bufferSize">The maximum element count in the buffer.</param>
            <param name="bufferWindow">The maximum time length of the buffering window.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Int32,System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to a specific ID of trace events emitted by the instrumented application.
            </summary>
            <param name="eventId">The ID of the trace event.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Func{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent,System.Boolean},System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to trace events based upon a custom predicate which will be used to select a subset of events emitted by the instrumented application.
            </summary>
            <param name="predicate">The condition to satisfy.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Guid,System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to all trace events emitted by a trace provider that is identified by the specified <see cref="T:System.Guid"/> value.
            </summary>
            <param name="providerGuid">The value uniquely identifying the trace provider.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Guid,System.Diagnostics.TraceEventType,System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to a specific type of trace events emitted by a trace provider that is identified by the specified <see cref="T:System.Guid"/> value.
            </summary>
            <param name="providerGuid">The value uniquely identifying the trace provider.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Guid,System.Int32,System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to a specific ID of trace events emitted by a trace provider that is identified by the specified <see cref="T:System.Guid"/> value.
            </summary>
            <param name="providerGuid">The value uniquely identifying the trace provider.</param>
            <param name="eventId">The ID of the trace event.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.Guid,System.Func{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent,System.Boolean},System.IObserver{Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceEvent})">
            <summary>
            Subscribes to trace events based upon a custom predicate which will be used to select a subset of events emitted by a trace provider that is identified by the specified <see cref="T:System.Guid"/> value.
            </summary>
            <param name="providerGuid">The value uniquely identifying the trace provider.</param>
            <param name="predicate">The condition to satisfy.</param>
            <param name="observer">The object that will be receiving notifications about trace events.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe(System.IObserver{System.Exception})">
            <summary>
            Subscribes to all exceptions emitted by the instrumented application.
            </summary>
            <param name="observer">The object that will be receiving notifications about application exceptions.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.Subscribe``1(System.IObserver{``0})">
            <summary>
            Subscribes to exceptions of the specified type <typeparamref name="T"/> emitted by the instrumented application.
            </summary>
            <typeparam name="T">The specific type of exceptions that the observer wants to be notified about.</typeparam>
            <param name="observer">The object that will be receiving notifications about application exceptions of type <typeparamref name="T"/>.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.DataAccessComponent">
            <summary>
            The trace provider for user code in the custom components responsible for data access operations.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.TransformComponent">
            <summary>
            The trace provider for user code in the data transformation components.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.ServiceComponent">
            <summary>
            The trace provider for user code in the on-premises service components (such as Windows Service hosts, Web services, WCF services).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.CloudStorageComponent">
            <summary>
            The trace provider reserved for the Windows Azure components responsible for storage-related operations.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.CloudServiceComponent">
            <summary>
            The trace provider for user code in the Windows Azure worker roles and their components.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.CustomComponent">
            <summary>
            The trace provider for user code in any other custom components which don't fall into any of the standard categories.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.WebRoleComponent">
            <summary>
            The trace provider for user code in the Windows Azure web roles and their components.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.WorkerRoleComponent">
            <summary>
            The trace provider for user code in the Windows Azure worker roles and their components.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.MessagingComponent">
            <summary>
            The trace provider for messaging components such as components that use Windows Azure Service Bus.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Diagnostics.TraceManager.MonitorComponent">
            <summary>
            The trace provider for monitoring components 
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage">
            <summary>
            Represents a base class for a composite message that is comprised of an untyped body along with its properties.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage.#ctor(System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage"/> object with the specified body and optional properties.
            </summary>
            <param name="body">The message body.</param>
            <param name="properties">The optional message properties to be associated with the message.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage.#ctor(System.IO.Stream,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage"/> object with the specified body stream, a <paramref name="serializer"/> that can read the stream 
            and materialize its content into an instance of the message body, as well as and optional properties.
            </summary>
            <param name="bodyStream">The stream holding message body data.</param>
            <param name="serializer">The serialization component that will be used for materializing the <paramref name="bodyStream"/> into an instance of the message body.</param>
            <param name="properties">The optional message properties to be associated with the message.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage.OfType``1">
            <summary>
            Returns the message body as an instance of the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the message body.</typeparam>
            <returns>The instance of type <typeparamref name="T"/> if message body can be cast to the specified type, otherwise a deserialization or invalid cast exception may be thrown.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage.Properties">
            <summary>
            Returns the message properties.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage.Body">
            <summary>
            Returns the message body.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage.BodyType">
            <summary>
            Returns the type of the message body.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1">
            <summary>
            Represents a strongly-typed message of the specified type <typeparamref name="T"/> composed along with its properties.
            </summary>
            <typeparam name="T">The type of the message body.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1"/> object with the specified body and optional properties.
            </summary>
            <param name="body">The message body.</param>
            <param name="properties">The optional message properties to be associated with the message.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1.Body">
            <summary>
            Returns the message body.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1.BodyType">
            <summary>
            Returns the type of the message body.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition">
            <summary>
            Provides a base class from which any custom discovery conditions must be derived.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition.Evaluate(System.Object)">
            <summary>
            Evaluates the given input against specific criteria and returns a flag indicating whether or not the criteria has been met.
            </summary>
            <param name="input">The input to be evaluated against specific criteria.</param>
            <returns>The flag indicating whether or not the criteria has been met.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition`1">
            <summary>
            Extends the base implementation of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition"/> class with support for strongly-typed input.
            </summary>
            <typeparam name="T">The type of the input which this instance of <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition"/> will be handling.</typeparam>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition`1.ConditionEvaluate">
            <summary>
            Occurs when the base class is performing criteria evaluation against the specified input.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition`1.Evaluate(System.Object)">
            <summary>
            Evaluates the given input against specific criteria and returns a flag indicating whether or not the criteria has been met.
            </summary>
            <param name="input">The input to be evaluated against specific criteria.</param>
            <returns>The flag indicating whether or not the criteria has been met.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition`1.EvaluateDelegate">
            <summary>
            Defines an event delegate for the event raised by this object when it is performing criteria evaluation against the specified input.
            </summary>
            <param name="input">The input to be evaluated against specific criteria.</param>
            <returns>The flag indicating whether or not the criteria has been met.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions">
            <summary>
            Provides commonly used filter expressions used by the Windows Azure Service Bus brokered messaging service.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.MatchAll">
            <summary>
            Returns a filter expression matching all messages. This filter can be used to receive all messages arriving on a particular subscription.
            </summary>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.MatchMessageType(System.String)">
            <summary>
            Returns a filter expression matching the specified message type value against the <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.MessageType"/> property from the system context.
            </summary>
            <param name="messageType">The value of the property to be matched.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.MatchMessageTypeHash(System.String)">
            <summary>
            Returns a filter expression matching a hashed version of the specified message type value against the <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.MessageTypeHash"/> property from the system context.
            </summary>
            <param name="messageType">The value of the property to be matched.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.MatchMessageType(System.Type)">
            <summary>
            Returns a filter expression matching the specified .NET type against the <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.MessageType"/> property from the system context.
            </summary>
            <param name="messageType">The value of the property to be matched.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.MatchMessageTypeHash(System.Type)">
            <summary>
            Returns a filter expression matching a hashed version of the specified .NET type against the <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.MessageTypeHash"/> property from the system context.
            </summary>
            <param name="messageType">The value of the property to be matched.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.MatchRoleInstanceId(System.String)">
            <summary>
            Returns a filter expression matching the specified role instance ID value against the <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.ToRoleInstanceId"/> property from the routing context.
            </summary>
            <param name="roleInstanceId">The value of the property to be matched.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.MatchTo(System.String)">
            <summary>
            Returns a filter expression matching the specified value against the <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.To"/> property from the routing context.
            </summary>
            <param name="destination">The value of the property to be matched.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.GroupAnd(System.String[])">
            <summary>
            Returns a filter expression that is a logical AND grouping of all of the specified expressions.
            </summary>
            <param name="expressions">The expressions to be included into grouping.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.GroupOr(System.String[])">
            <summary>
            Returns a filter expression that is a logical OR grouping of all of the specified expressions.
            </summary>
            <param name="expressions">The expressions to be included into grouping.</param>
            <returns>The filter expression that conforms to the standard format expected by the Windows Azure Service Bus brokered messaging service.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.FilterExpressions.Group(System.String)">
            <summary>
            Returns a filter expression that is the result of enclosing the specified <paramref name="expression"/> in parentheses.
            </summary>
            <param name="expression">The expression to be enclosed in parentheses.</param>
            <returns>The filter expression that represents the result of enclosing the specified <paramref name="expression"/> in parentheses.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel">
            <summary>
            Defines a generic contract for messaging components that support publish-subscribe capability.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel.Publish``1(System.IObservable{``0})">
            <summary>
            Publishes one or more messages returned by the specified provider into the underlying publish-subscribe messaging infrastructure.
            </summary>
            <typeparam name="T">The type of the message to be published.</typeparam>
            <param name="provider">The provider supplying messages for publication.</param>
            <returns>The object which enables the consumer to track the progress of the publishing operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel.Subscribe``1(System.String,System.String,System.Boolean)">
            <summary>
            Creates a subscription to receive messages of the specified type <typeparamref name="T"/> that match the optionally specified filter.
            </summary>
            <typeparam name="T">The type of messages that the observers will be able to subscribed to.</typeparam>
            <param name="name">The name of the subscription.</param>
            <param name="filter">The filter expression defined in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel">
            <summary>
            Defines a contract for a messaging component that supports request-response message exchange pattern.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel.Subscribe``1(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates an observable sequence receiving requests of the specified type <typeparamref name="TRequest"/> that match the specified filter.
            </summary>
            <typeparam name="TRequest">The type of request messages that the observers will be able to subscribed to.</typeparam>
            <param name="name">The name of the subscription that will be created in the underlying messaging infrastructure.</param>
            <param name="filter">The filter expression instructing the underlying messaging infrastructure how to match incoming messages to the observable sequence.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying messaging infrastructure even it does not have active subscribers.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="TRequest"/> in a competing manner.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="TRequest"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel.Subscribe``2(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates an observable sequence receiving requests of the specified type <typeparamref name="TRequest"/> that match the specified filter.
            The sequence also provides a feedback loop to enable a response of type <typeparamref name="TResponse"/> to be sent back to the requestor.
            </summary>
            <typeparam name="TRequest">The type of request messages that the observers will be able to subscribed to.</typeparam>
            <typeparam name="TResponse">The type of response the observers will be able to reply back with.</typeparam>
            <param name="name">The name of the subscription that will be created in the underlying messaging infrastructure.</param>
            <param name="filter">The filter expression instructing the underlying messaging infrastructure how to match incoming messages to the observable sequence.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying messaging infrastructure even it does not have active subscribers.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="TRequest"/> in a competing manner.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="TRequest"/> and reply back with responses of type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel.Publish``1(``0)">
            <summary>
            Publishes the specified <paramref name="request"/> message in a "fire and forget" manner expecting no response from the connected party.
            </summary>
            <typeparam name="TRequest">The type of request message.</typeparam>
            <param name="request">The request message to be published.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel.Publish``2(``0)">
            <summary>
            Publishes the specified <paramref name="request"/> message and starts waiting for a response until the timeout defined in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings"/> object is expired.
            </summary>
            <typeparam name="TRequest">The type of request message.</typeparam>
            <typeparam name="TResponse">The type of response message</typeparam>
            <param name="request">The request message to be published.</param>
            <returns>The response message received from the connected party, or the default value of <typeparamref name="TResponse"/> if no response was received within the defined timeout.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase">
            <summary>
            Represents an abstract class providing base functionality that is intended to support the message context implementation.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.Add(System.String,System.Object)">
            <summary>
            Adds a new property to the message context.
            </summary>
            <param name="name">The name of the message context property.</param>
            <param name="value">The value of the message context property.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.ContainsKey(System.String)">
            <summary>
            Determines whether the specified property exists in the message context.
            </summary>
            <param name="name">The name of the message context property.</param>
            <returns>True if the message context contains a property with the specified name; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.Remove(System.String)">
            <summary>
            Removes the specified property from the message context.
            </summary>
            <param name="name">The name of the message context property.</param>
            <returns>True if property was successfully removed from the message context; otherwise, false. This method also returns false if property is not found in the message context.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the dictionary.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IDictionary{System#String@System#Object}#ContainsKey(System.String)">
            <summary>
            Determines whether the dictionary contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the dictionary.</param>
            <returns>True if the dictionary contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
            <summary>
            Removes the element with the specified key from the dictionary.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>True if the element is successfully removed; otherwise, false. This method also returns false if key was not found in the original dictionary.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>True if the dictionary contains an element with the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds the specified key and value to the dictionary
            </summary>
            <param name="item">The key and value pair of the element to add.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
            <summary>
            Removes all keys and values from the dictionary.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the dictionary contains a specific item.
            </summary>
            <param name="item">The item to locate in the dictionary.</param>
            <returns>True if the dictionary contains the specified item; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the dictionary to an array, starting at a particular array index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from dictionary. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific item from the dictionary.
            </summary>
            <param name="item">The item to remove from the dictionary.</param>
            <returns>True if item was successfully removed from the dictionary; otherwise, false. This method also returns false if item is not found in the dictionary.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An enumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.Properties">
            <summary>
            Returns the collection of context properties managed by this object.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
            <summary>
            Gets a collection containing the keys of the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
            <summary>
            Gets an collection containing the values in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
            <summary>
            Gets or sets the element with the specified key.
            </summary>
            <param name="key">The key of the element to get or set.</param>
            <returns>The element with the specified key.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>
            Gets the number of elements contained in the dictionary.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageContextBase.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the dictionary is read-only.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException">
            <summary>
            Implements a special type of application exception that allows raising an error when the application fails to process a message.
            Using this special exception, the failed messages can be returned back to the message store or put into an isolated message store such as a dead letter queue.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException"/> class with the specified reason and error description.
            </summary>
            <param name="reason">The reason for the failure.</param>
            <param name="errorDescription">The detailed description for the failure.</param>
            <param name="unrecoverable">The optional flag indicating whether or not the failed message is subject to the recovery.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException.#ctor(System.String,System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException"/> class with the specified reason and error that resulted in a failure.
            </summary>
            <param name="reason">The reason for the failure.</param>
            <param name="error">The exception that led to the failure.</param>
            <param name="unrecoverable">The optional flag indicating whether or not the failed message is subject to the recovery.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The SerializationInfo that holds the serialized object data about the exception being thrown. 
            </param>
            <param name="context">The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException.Reason">
            <summary>
            Returns the custom information about the error. The content of this collection will be included into the error details.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.MessageFailedException.IsUnrecoverable">
            <summary>
            Returns the flag indicating whether or not the failed message is subject to the recovery such that it can or cannot be reliably reprocessed it was resubmitted to its consumers.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue">
            <summary>
            Provides reliable generics-aware access to the Windows Azure Service Bus Queue.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage">
            <summary>
            Defines a generics-aware abstraction layer for Windows Azure Queue storage.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage.CreateQueue(System.String)">
            <summary>
            Creates a new queue.
            </summary>
            <param name="queueName">The name of a new queue.</param>
            <returns>A flag indicating whether or the queue did not exist and was therefore created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage.DeleteQueue(System.String)">
            <summary>
            Deletes the specified queue.
            </summary>
            <param name="queueName">The name of the queue to be deleted.</param>
            <returns>True if the queue name has been actually deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage.GetCount(System.String)">
            <summary>
            Gets the approximate number of items in the specified queue.
            </summary>
            <param name="queueName">The name of the queue to be queried.</param>
            <returns>The approximate number of items in the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage.Clear(System.String)">
            <summary>
            Clears all messages from the specified queue.
            </summary>
            <param name="queueName">The name of the queue that will be emptied.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage.Put``1(System.String,System.IObservable{``0})">
            <summary>
            Puts one or more messages returned by the specified provider on a queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="provider">The provider supplying messages for publication on a queue.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage.Get``1(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Gets an observable sequence of messages from the specified queue. The size of the sequence will be limited to the number of messages specified in the <paramref name="messageCount"/> parameter.
            All messages retrieved from the queue will be assigned the specified <paramref name="visibilityTimeout"/> value and remain invisible on the queue until the specified timeout is elapsed.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="queueName">The name of the source queue.</param>
            <param name="messageCount">The maximum number of messages to retrieve from the queue.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage.Delete``1(``0)">
            <summary>
            Deletes a single message from a queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>A flag indicating whether or not the specified message has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue"/> class using the specified Service Bus endpoint definition.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint definition containing queue information.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue"/> class using the specified Service Bus endpoint definition and retry policy.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint definition containing queue information.</param>
            <param name="retryPolicy">The specific retry policy that will ensure reliable access to the underlying storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue"/> class using the specified Service Bus endpoint definition, custom retry policy
            and custom implementation of the large message overflow store.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint definition containing queue information.</param>
            <param name="retryPolicy">The specific retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue"/> class using the specified Service Bus endpoint definition and custom implementation 
            of the large message overflow store.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint definition containing queue information.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue"/> class using the specified Service Bus endpoint definition and 
            custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/>.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint definition containing queue information.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue"/> class using the specified Service Bus endpoint definition, custom retry policy,
            custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface and custom implementation of the large message overflow store.
            </summary>
            <param name="endpointInfo">The Service Bus endpoint definition containing queue information.</param>
            <param name="retryPolicy">The specific retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.CreateQueue(System.String)">
            <summary>
            Creates a new queue.
            </summary>
            <param name="queueName">The name of a new queue.</param>
            <returns>A flag indicating whether or the queue did not exist and was therefore created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.DeleteQueue(System.String)">
            <summary>
            Deletes the specified queue.
            </summary>
            <param name="queueName">The name of the queue to be deleted.</param>
            <returns>True if the queue name has been actually deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.GetCount(System.String)">
            <summary>
            Gets the approximate number of items in the specified queue.
            </summary>
            <param name="queueName">The name of the queue to be queried.</param>
            <returns>The approximate number of items in the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.Clear(System.String)">
            <summary>
            Clears all messages from the specified queue.
            </summary>
            <param name="queueName">The name of the queue that will be emptied.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.Put``1(System.String,System.IObservable{``0})">
            <summary>
            Puts one or more messages returned by the specified provider on a queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="provider">The provider supplying messages for publication on a queue.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.Get``1(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Gets an observable sequence of messages from the specified queue. The size of the sequence will be limited to the number of messages specified in the <paramref name="messageCount"/> parameter.
            All messages retrieved from the queue will be assigned the specified <paramref name="visibilityTimeout"/> value and remain invisible on the queue until the specified timeout is elapsed.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="queueName">The name of the source queue.</param>
            <param name="messageCount">The maximum number of messages to retrieve from the queue.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.Delete``1(``0)">
            <summary>
            Deletes a single message from a queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>A flag indicating whether or not the specified message has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext">
            <summary>
            Provides access to the commonly used routing properties in the message context.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext"/> object using an empty collection of message context properties.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext"/> object using the specified collection of message context properties.
            </summary>
            <param name="parentContext">The parent context which this object will extend.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.CorrelationId">
            <summary>
            Gets or sets the value of the CorrelationId context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.SessionId">
            <summary>
            Gets or sets the value of the SessionId context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.ReplyToSessionId">
            <summary>
            Gets or sets the value of the ReplyToSessionId context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.ReplyTo">
            <summary>
            Gets or sets the value of the ReplyTo context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.To">
            <summary>
            Gets or sets the value of the To context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.ToEndpoint">
            <summary>
            Gets or sets the value of the ToEndpoint context property.
            </summary>
            <remarks>
            <para>The <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.ToEndpoint"/> property can be used for routing messages to a particular endpoint defined in the application configuration. For instance, the default implementation of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel"/>
            component uses this property to send messages to a specific Windows Azure Service Bus topic, which is described in the application configuration under a given endpoint name.</para>
            <para>The value specified in the <see cref="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.ToEndpoint"/> property can also be a regular expression. This will allow routing messages to multiple endpoints that match the specified expression.</para>
            </remarks>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.ToRoleInstanceId">
            <summary>
            Gets or sets the value of the ToRoleInstanceId context property.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName">
            <summary>
            Combines all property names that are used to define in the routing context. Consider using this constant values when composing subscription filters, 
            as opposed to maintaining your own set of property names.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.CorrelationId">
            <summary>
            Gets the name of the CorrelationId context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.SessionId">
            <summary>
            Gets the name of the SessionId context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.ReplyToSessionId">
            <summary>
            Gets the name of the ReplyToSessionId context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.ReplyTo">
            <summary>
            Gets the name of the ReplyTo context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.To">
            <summary>
            Gets the name of the To context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.ToRoleInstanceId">
            <summary>
            Gets the name of the ToRoleInstanceId context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.ToEndpoint">
            <summary>
            Gets the name of the ToEndpoint context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.RoutingMessageContext.PropertyName.ReservedNames">
            <summary>
            Gets the array of property names reserved for internal use.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel">
            <summary>
            Implements a messaging component that supports publish-subscribe capability using Windows Azure Service Bus and is capable of scaling out across
            multiple topics to support a very large number of publishers and subscribers.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel.#ctor(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo},Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel"/> object using a collection of the specified Service Bus topic endpoints and optional settings.
            </summary>
            <param name="clientId">The value identifying a given client of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel"/> messaging component. This value determines which topic a particular client is assigned to.</param>
            <param name="endpoints">The Service Bus endpoint collection using which the messaging component will be leveraging to provide scalable publish-subscribe capability.</param>
            <param name="settings">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel"/> object containing behavioral and runtime settings for the messaging component.</param>
            <param name="retryPolicy">The optional retry policy that will ensure reliable access to the underlying messaging infrastructure.</param>
            <remarks>
            The <paramref name="clientId"/> parameter is very important in the context of scale-out across multiple topics. This value needs to uniquely identify the instance of the messaging client,
            which can be a deterministic, durable number (such as that it survives machine reboots or failovers) or a random number (such as that it is assigned at runtime from a pool of random values). 
            <para>The former use case is better suited for messaging scenarios where a client can either persist or reliably determine its ID at runtime and it never changes between restarts. 
            A good example of such a value could be the role instance's index assigned by the Windows Azure Fabric Controller upon provisioning. See <see cref="M:Microsoft.Experience.CloudFx.Framework.CloudUtility.GetRoleInstanceIndex(System.String)"/> for more details on how to
            obtain the index value from a given role instance ID. By using the deterministic ID value, the clients can be guaranteed to be assigned to the same topic which they were connected to prior to reboot.</para>
            <para>The later use case is mostly suited the scenarios where messaging clients are volatile in nature and don't have to receive messages while they are offline. Every time a client uses the
            <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel"/> component with a different ID, the client will be assigned to a different topic depending on the ID value.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel.Publish``1(System.IObservable{``0})">
            <summary>
            Publishes one or more messages returned by the specified provider into the underlying publish-subscribe messaging infrastructure.
            </summary>
            <typeparam name="T">The type of the message to be published.</typeparam>
            <param name="provider">The provider supplying messages for publication.</param>
            <returns>The object which enables the consumer to track the progress of the publishing operation, be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel.Subscribe``1(System.String,System.String,System.Boolean)">
            <summary>
            Creates a subscription to receive messages of the specified type <typeparamref name="T"/> that match the specified filter.
            </summary>
            <typeparam name="T">The type of messages that the observers will be able to subscribed to.</typeparam>
            <param name="name">The name of the subscription.</param>
            <param name="filter">The filter expression defined in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ScalableServiceBusPublishSubscribeChannel.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusBrokeredMessageSerializer">
            <summary>
            Provides a custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> which performs serialization and deserialization of objects
            using the same mechanism as implemented by <see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage"/>. The use of this class enables to support full interoperability between 
            the Service Bus queuing component offered by CloudFx (such as <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusQueue"/>) and classic Service Bus queue clients.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer">
            <summary>
            Defines a contract that must be supported by a component which performs serialization and 
            deserialization of storage objects such as queue items, blobs and table entries.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serializes the object to the specified stream.
            </summary>
            <param name="instance">The object instance to be serialized.</param>
            <param name="target">The destination stream into which the serialized object will be written.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deserializes the object from specified data stream.
            </summary>
            <param name="source">The source stream from which serialized object will be consumed.</param>
            <param name="type">The type of the object that will be deserialized.</param>
            <returns>The deserialized object instance.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusBrokeredMessageSerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serializes the object to the specified stream.
            </summary>
            <param name="instance">The object instance to be serialized.</param>
            <param name="target">The destination stream into which the serialized object will be written.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusBrokeredMessageSerializer.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deserializes the object from specified data stream.
            </summary>
            <param name="source">The source stream from which serialized object will be consumed.</param>
            <param name="type">The type of the object that will be deserialized.</param>
            <returns>The deserialized object instance.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1">
            <summary>
            Implements a channel factory capable of load balancing between endpoint addresses registered in the Service Bus service endpoint registry.
            </summary>
            <typeparam name="T">The type of channel produced by the channel factory.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class using the specified binding.
            </summary>
            <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding"/> specified for the channel produced by the factory.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class using the specified service endpoint.
            </summary>
            <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> for the channel produced by the factory.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class using the specified endpoint configuration name.
            </summary>
            <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class using the specified channel type.
            </summary>
            <param name="channelType">The type of channel produced by the factory.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class using the specified binding and endpoint address.
            </summary>
            <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding"/> used to configure the endpoint.</param>
            <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress"/> that provides the location of the service.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class using the specified binding and remote address.
            </summary>
            <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding"/> used to configure the endpoint.</param>
            <param name="remoteAddress">The address that provides the location of the service.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1"/> class using the specified name for the endpoint configuration and remote address.
            </summary>
            <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
            <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress"/> that provides the location of the service.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
            <summary>
            Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.
            </summary>
            <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress"/> that provides the location of the service.</param>
            <param name="via">The System.Uri that contains the transport address to which the channel sends messages.</param>
            <returns>The channel of type <typeparamref name="T"/> created by the factory.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.RegistryExpiration">
            <summary>
            Gets or sets the time duration during which service registry feeds are cached in memory.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusLoadBalancingChannelFactory`1.TimeoutErrorDetectionStrategy">
            <summary>
            Implements a strategy that detects timeout errors when invoking web requests.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1">
            <summary>
            Implements the reliability layer between the Windows Azure Service Bus and client code to ensure that all major operations 
            against WCF infrastructure such as creating and opening a client communication channel will respect potential transient 
            conditions that may manifest themselves in a highly multi-tenant hosting environment such as Windows Azure.
            </summary>
            <typeparam name="T">The type of client channel contract. Must inherit from service contract as well as <see cref="T:System.ServiceModel.IClientChannel"/>.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Initializes a new instance of the reliable Windows Azure Service Bus client component to communicate with the specified Service Bus endpoint.
            No retry policy will be enforced when using this constructor overload.
            </summary>
            <param name="sbEndpointInfo">The endpoint details.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the reliable Windows Azure Service Bus client component to communicate with the specified Service Bus endpoint
            using a custom retry policy.
            </summary>
            <param name="sbEndpointInfo">The endpoint details.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying WCF infrastructure.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Abort">
            <summary>
            Causes a communication object to transition immediately from its current state into the closed state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to close a communication object with a specified timeout.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous close operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.BeginClose(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to close a communication object.
            </summary>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous close operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a communication object within a specified interval of time.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous open operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.BeginOpen(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a communication object.
            </summary>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous open operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Close(System.TimeSpan)">
            <summary>
            Causes a communication object to transition from its current state into the closed state.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Close">
            <summary>
            Causes a communication object to transition from its current state into the closed state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.EndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to close a communication object.
            </summary>
            <param name="result">The System.IAsyncResult that is returned by a call to the System.ServiceModel.ICommunicationObject.BeginClose method.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.EndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to open a communication object.
            </summary>
            <param name="result">The System.IAsyncResult that is returned by a call to the System.ServiceModel.ICommunicationObject.BeginOpen method.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Open(System.TimeSpan)">
            <summary>
            Causes a communication object to transition from the created state into the opened state within a specified interval of time.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Open">
            <summary>
            Causes a communication object to transition from the created state into the opened state.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Client">
            <summary>
            Returns an instance of the client communication channel that can be used for invoking the service operations.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.RetryPolicy">
            <summary>
            Returns the retry policy that is being used for ensuring reliable access to the underlying WCF infrastructure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.State">
            <summary>
            Gets the current state of the communication-oriented object.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Opened">
            <summary>
            Occurs when the communication object completes its transition from the opening state into the opened state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Opening">
            <summary>
            Occurs when the communication object first enters the opening state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Faulted">
            <summary>
            Occurs when the communication object first enters the faulted state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Closed">
            <summary>
            Occurs when the communication object completes its transition from the closing state into the closed state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusClient`1.Closing">
            <summary>
            Occurs when the communication object first enters the closing state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1">
            <summary>
            Implements the reliability layer between the Windows Azure Service Bus and client code to ensure that all major operations 
            against WCF infrastructure such as opening a service host will respect potential transient conditions that may manifest 
            themselves in a highly multi-tenant hosting environment such as Windows Azure.
            </summary>
            <typeparam name="T">The type of service contract hosted by the Windows Azure Service Bus.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Initializes a new instance of the reliable Windows Azure Service Bus service host that will listen on the specified Service Bus endpoint.
            No retry policy will be enforced when using this constructor overload.
            </summary>
            <param name="sbEndpointInfo">The endpoint details.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the reliable Windows Azure Service Bus service host that will listen on the specified Service Bus endpoint
            and utilize the specified custom retry policy.
            </summary>
            <param name="sbEndpointInfo">The endpoint details.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying WCF infrastructure.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.#ctor(System.ServiceModel.ServiceHost,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the reliable Windows Azure Service Bus service host from the specified generic WCF service host.
            Utilizes the specified custom retry policy.
            </summary>
            <param name="serviceHost">The initialized WCF service host that will be wrapped by this instance of <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1"/>.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying WCF infrastructure.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Abort">
            <summary>
            Causes a communication object to transition immediately from its current state into the closed state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to close a communication object with a specified timeout.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous close operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.BeginClose(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to close a communication object.
            </summary>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous close operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous close operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a communication object within a specified interval of time.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous open operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.BeginOpen(System.AsyncCallback,System.Object)">
            <summary>
            Begins an asynchronous operation to open a communication object.
            </summary>
            <param name="callback">The System.AsyncCallback delegate that receives notification of the completion of the asynchronous open operation.</param>
            <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
            <returns>The System.IAsyncResult that references the asynchronous open operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Close(System.TimeSpan)">
            <summary>
            Causes a communication object to transition from its current state into the closed state.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Close">
            <summary>
            Causes a communication object to transition from its current state into the closed state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.EndClose(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to close a communication object.
            </summary>
            <param name="result">The System.IAsyncResult that is returned by a call to the System.ServiceModel.ICommunicationObject.BeginClose method.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.EndOpen(System.IAsyncResult)">
            <summary>
            Completes an asynchronous operation to open a communication object.
            </summary>
            <param name="result">The System.IAsyncResult that is returned by a call to the System.ServiceModel.ICommunicationObject.BeginOpen method.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Open(System.TimeSpan)">
            <summary>
            Causes a communication object to transition from the created state into the opened state within a specified interval of time.
            </summary>
            <param name="timeout">The System.Timespan that specifies how long the send operation has to complete before timing out.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Open">
            <summary>
            Causes a communication object to transition from the created state into the opened state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.ServiceInstance">
            <summary>
            Returns a singleton instance of the hosted service or a null reference if the service host has not been explicitly initialized to host the singleton instance.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.RetryPolicy">
            <summary>
            Returns the retry policy that is being used for ensuring reliable access to the underlying WCF infrastructure.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.State">
            <summary>
            Gets the current state of the communication-oriented object.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Opened">
            <summary>
            Occurs when the communication object completes its transition from the opening state into the opened state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Opening">
            <summary>
            Occurs when the communication object first enters the opening state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Faulted">
            <summary>
            Occurs when the communication object first enters the faulted state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Closed">
            <summary>
            Occurs when the communication object completes its transition from the closing state into the closed state.
            </summary>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Messaging.ReliableServiceBusHost`1.Closing">
            <summary>
            Occurs when the communication object first enters the closing state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusClientFactory">
            <summary>
            Provides a set of factory methods for creating instances of the Service Bus client communication channel.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusClientFactory.CreateServiceBusRelayClient``1(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Returns a client communication channel of type <typeparamref name="T"/> for communication with the specified Service Bus relay endpoint.
            </summary>
            <typeparam name="T">The type of the client communication channel. Must inherit from service contract as well as <see cref="T:System.ServiceModel.IClientChannel"/>.</typeparam>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <returns>An instance of the communication channel of a specified type that is bound to the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusClientFactory.CreateServiceBusRelayClient``1(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns a client communication channel of type <typeparamref name="T"/> for communication with the specified Service Bus relay endpoint.
            </summary>
            <typeparam name="T">The type of the client communication channel. Must inherit from service contract as well as <see cref="T:System.ServiceModel.IClientChannel"/>.</typeparam>
            <param name="serviceNamespace">The service namespace name used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="loadBalanced">The flag indicating whether the endpoint is enabled for load balancing.</param>
            <returns>An instance of the communication channel of a specified type that is bound to the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusClientFactory.CreateServiceBusEventRelayClient``1(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Returns a client communication channel of type <typeparamref name="T"/> for communication with the specified Service Bus one-way event relay endpoint.
            </summary>
            <typeparam name="T">The type of the client communication channel. Must inherit from service contract as well as <see cref="T:System.ServiceModel.IClientChannel"/>.</typeparam>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <returns>An instance of the communication channel of a specified type that is bound to the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusClientFactory.CreateServiceBusEventRelayClient``1(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a client communication channel of type <typeparamref name="T"/> for communication with the specified Service Bus one-way event relay endpoint.
            </summary>
            <typeparam name="T">The type of the client communication channel. Must inherit from service contract as well as <see cref="T:System.ServiceModel.IClientChannel"/>.</typeparam>
            <param name="serviceNamespace">The service namespace name used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>An instance of the communication channel of a specified type that is bound to the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusClientFactory.CreateServiceBusClient``1(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Returns a client communication channel of type <typeparamref name="T"/> for communication with the specified Service Bus endpoint.
            The type of endpoint is determined from the endpoint details supplied in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> instance.
            </summary>
            <typeparam name="T">The type of the client communication channel. Must inherit from service contract as well as <see cref="T:System.ServiceModel.IClientChannel"/>.</typeparam>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <returns>An instance of the communication channel of a specified type that is bound to the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusClientFactory.CreateServiceBusClientChannelFactory``1(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Returns a client channel factory for type <typeparamref name="T"/> to be used for communication with the specified Service Bus endpoint.
            The type of endpoint is determined from the endpoint details supplied in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> instance.
            </summary>
            <typeparam name="T">The type of the client communication channel. Must inherit from service contract as well as <see cref="T:System.ServiceModel.IClientChannel"/>.</typeparam>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <returns>An instance of the communication channel factory that will be used for creating a communication channel of specified type <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods">
            <summary>
            Provides value-add extension methods for Windows Azure Service Bus entities such as topics, queues and subscriptions.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Publish``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,``0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Synchronously publishes the specified message along with its optional properties into the underlying publish-subscribe messaging infrastructure.
            </summary>
            <remarks>
            This extension method provides a simplified interface to the publish-subscribe messaging infrastructure. It allows publishing a single message
            with optional properties. If publication fails, the method will reflect this by throwing an <see cref="T:System.OperationCanceledException"/> with the 
            original exception that caused the publication to fail.
            </remarks>
            <typeparam name="T">The type of the message to be published.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="message">The message to be published.</param>
            <param name="properties">The optional message properties to be published along with the message.</param>
            <returns>True if the message was successfully published, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.PublishAsync``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,``0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Action{System.Exception},System.Action)">
            <summary>
            Asynchronously publishes the specified message along with its optional properties into the underlying publish-subscribe messaging infrastructure.
            </summary>
            <typeparam name="T">The type of the message to be published.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="message">The message to be published.</param>
            <param name="properties">The optional message properties to be published along with the message.</param>
            <param name="errorAction">The optional action that gets invoked if the underlying asynchronous operation completes with an error.</param>
            <param name="successAction">The optional action that gets invoked if the underlying asynchronous operation completes successfully.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Publish``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Synchronously publishes the specified list of messages into the underlying publish-subscribe messaging infrastructure optionally enforcing transactional atomicity of the operation.
            </summary>
            <remarks>
            <para>This extension method provides a simplified interface to the publish-subscribe messaging infrastructure. It allows publishing the specified collection of messages synchronously.
            If any message in the collection fails to be published, the method will reflect this by throwing an <see cref="T:System.OperationCanceledException"/> with the original exception that 
            caused the publication to fail. The <paramref name="atomic"/> parameter defines how the publish-subscribe infrastructure treats the messages being published. If it is set to True, 
            all messages will be published in a single transaction. In this case, if publication fails, none of the messages will be retained in the messaging infrastructure.</para>
            <para>The maximum allowed size of the atomic batch is 100 messages. This limitation may change in the future.</para>
            </remarks>
            <typeparam name="T">The type of the message to be published.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="messages">The list of messages to be published.</param>
            <param name="atomic">The optional flag indicating whether or not the publishing operation must be performed atomically.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.PublishAsync``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Asynchronously publishes the specified list of messages into the underlying publish-subscribe messaging infrastructure optionally enforcing transactional atomicity of the operation.
            </summary>
            <typeparam name="T">The type of the message to be published.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="messages">The list of messages to be published.</param>
            <param name="atomic">The optional flag indicating whether or not the publishing operation must be performed atomically.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.String,System.String,System.Boolean)">
            <summary>
            Creates a subscription to receive messages of the specified type <typeparamref name="T"/> that match the optionally specified filter.
            </summary>
            <typeparam name="T">The type of messages that the observers will be able to subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="name">The name of the subscription.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.IObserver{``0},System.String,System.Boolean)">
            <summary>
            Subscribes the specified observer to receive messages of the specified type <typeparamref name="T"/> that match the specified filter. The subscription name will be assigned automatically by computing a hashed value
            which combines the assembly-qualified name of the <typeparamref name="T"/> type and the specified filter.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the observer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.String,System.IObserver{``0},System.String,System.Boolean)">
            <summary>
            Subscribes the specified observer to receive messages of the specified type <typeparamref name="T"/> that match the specified filter.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="name">The name of the subscription.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the observer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.IObserver{``0},System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Subscribes the observer to receive messages of the specified type <typeparamref name="T"/> that match the specified optional filter. Allows customization in the number of concurrent listeners that will be receiving messages 
            either as competing or non-competing consumers. The subscription name will be assigned automatically by computing a hashed value which combines the assembly-qualified name of the <typeparamref name="T"/> type and the specified filter.
            In addition, if non-competing consumers are being requested, the computed subscription name will include a special placeholder {0} which is required in order to customize the subscription name for each individual consumer.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <param name="competing">The optional flag enabling or disabling the listeners to act as competing consumers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the consumer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.String,System.IObserver{``0},System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Subscribes the observer to receive messages of the specified type <typeparamref name="T"/> that match the specified optional filter. Allows customization in the number of concurrent listeners that will be receiving messages 
            either as competing or non-competing consumers.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="name">The name of the subscription.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <param name="competing">The optional flag enabling or disabling the listeners to act as competing consumers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the consumer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.IObserver{Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage{``0}},System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Subscribes the observer to receive messages of a special composite type of <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1"/> which combines the specified type <typeparamref name="T"/> as body type and the property bag.
            Allows customization in the number of concurrent listeners that will be receiving messages either as competing or non-competing consumers.
            The subscription name will be assigned automatically by computing a hashed value which combines the assembly-qualified name of the <typeparamref name="T"/> type and the internally computed filter expression.
            In addition, if non-competing consumers are being requested, the computed subscription name will include a special placeholder {0} which is required in order to customize the subscription name for each individual consumer.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <param name="competing">The optional flag enabling or disabling the listeners to act as competing consumers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the consumer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.IObserver{Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage{``0}},System.String,System.Boolean)">
            <summary>
            Subscribes the observer to receive messages of a special composite type of <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1"/> which combines the specified type <typeparamref name="T"/> as body type and the property bag.
            The subscription name will be assigned automatically by computing a hashed value which combines the assembly-qualified name of the <typeparamref name="T"/> type and the specified filter.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the observer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.String,System.IObserver{Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage{``0}},System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>
            Subscribes the observer to receive messages of a special composite type of <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1"/> which combines the specified type <typeparamref name="T"/> as body type and the property bag.
            Allows customization in the number of concurrent listeners that will be receiving messages either as competing or non-competing consumers.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="name">The name of the subscription.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <param name="competing">The optional flag enabling or disabling the listeners to act as competing consumers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the consumer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.String,System.IObserver{Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage{``0}},System.String,System.Boolean)">
            <summary>
            Subscribes the observer to receive messages of a special composite type of <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.CompositeMessage`1"/> which combines the specified type <typeparamref name="T"/> as body type and the property bag.
            </summary>
            <typeparam name="T">The type of messages that the observer will be subscribed to.</typeparam>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="name">The name of the subscription.</param>
            <param name="observer">The observer for messages of the specified type <typeparamref name="T"/>.</param>
            <param name="filter">The optional filter expressed in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The instance of an object that enables cancelling a subscription by the consumer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe(Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,System.IObserver{System.Exception})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to all exceptions occurring while publishing or receiving messages through this instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> component.
            </summary>
            <param name="pubSubChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> for which the extension method will be invoked.</param>
            <param name="observer">The object that will be receiving notifications about exceptions occurring while publishing or receiving messages through this instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel"/> component.</param>
            <returns>The instance of an object that enables cancelling a subscription by the consumer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``1(Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates an observable sequence receiving requests of the specified type <typeparamref name="TRequest"/> that match the optionally specified filter.
            </summary>
            <typeparam name="TRequest">The type of request messages that the observers will be able to subscribed to.</typeparam>
            <param name="reqRespChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel"/> for which the extension method will be invoked.</param>
            <param name="name">The optional name of the subscription.</param>
            <param name="filter">The optional filter expression instructing the underlying messaging infrastructure how to match incoming messages to the observable sequence.</param>
            <param name="persistent">The optional flag indicating whether or not the created subscription will be retained in the underlying messaging infrastructure even it does not have active subscribers.</param>
            <param name="listenerCount">The optional number of concurrent listeners receiving messages of the given type<typeparamref name="TRequest"/> in a competing manner.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="TRequest"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe``2(Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates an observable sequence receiving requests of the specified type <typeparamref name="TRequest"/> that match the specified filter.
            The sequence also provides a feedback loop to enable a response of type <typeparamref name="TResponse"/> to be sent back to the requestor.
            </summary>
            <typeparam name="TRequest">The type of request messages that the observers will be able to subscribed to.</typeparam>
            <typeparam name="TResponse">The type of response the observers will be able to reply back with.</typeparam>
            <param name="reqRespChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel"/> for which the extension method will be invoked.</param>
            <param name="name">The name of the subscription that will be created in the underlying messaging infrastructure.</param>
            <param name="filter">The filter expression instructing the underlying messaging infrastructure how to match incoming messages to the observable sequence.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying messaging infrastructure even it does not have active subscribers.</param>
            <param name="listenerCount">The optional number of concurrent listeners receiving messages of the given type<typeparamref name="TRequest"/> in a competing manner.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="TRequest"/> and reply back with responses of type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Publish``1(Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel,``0,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Publishes the specified <paramref name="request"/> message that is intended to be received by the specified <paramref name="partyName"/> only.
            The message will be published in the "fire and forget" manner expecting no response from the other party.
            </summary>
            <typeparam name="TRequest">The type of request message.</typeparam>
            <param name="reqRespChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel"/> for which the extension method will be invoked.</param>
            <param name="request">The request message to be published.</param>
            <param name="partyName">The name of the party intended to receive the request.</param>
            <param name="properties">The optional message properties to be published along with the request.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Publish``2(Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel,``0,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Publishes the specified <paramref name="request"/> message that is intended to be received by the specified <paramref name="partyName"/> only.
            After publishing the request, waits for a response until the timeout defined in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings"/> object is expired.
            </summary>
            <typeparam name="TRequest">The type of request message.</typeparam>
            <typeparam name="TResponse">The type of response message</typeparam>
            <param name="reqRespChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel"/> for which the extension method will be invoked.</param>
            <param name="request">The request message to be published.</param>
            <param name="partyName">The name of the party intended to receive the request.</param>
            <param name="properties">The optional message properties to be published along with the request.</param>
            <returns>The response message received from the connected party, or the default value of <typeparamref name="TResponse"/> if no response was received within the defined timeout.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.Subscribe(Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel,System.IObserver{System.Exception})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to all exceptions occurring while sending or receiving messages through this instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel"/> component.
            </summary>
            <param name="reqRespChannel">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel"/> for which the extension method will be invoked.</param>
            <param name="observer">The object that will be receiving notifications about exceptions occurring while sending or receiving messages through this instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.IRequestResponseChannel"/> component.</param>
            <returns>The instance of an object that enables cancelling a subscription by the consumer.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.SafeComplete(Microsoft.ServiceBus.Messaging.BrokeredMessage,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Synchronously notifies the Windows Azure Service Bus messaging infrastructure that a given message should be marked as processed and deleted or archived.
            Uses the optional retry policy when communicating with the Service Bus in order to shield from transient exceptions.
            </summary>
            <param name="msg">The brokered message instance for which the extension method will be invoked.</param>
            <param name="retryPolicy">The optional policy governing retry-aware behavior should a transient exception occur.</param>
            <returns>True if the action was successful, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveComplete(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Asynchronously notifies the Windows Azure Service Bus messaging infrastructure that a given message should be marked as processed and deleted or archived.
            </summary>
            <param name="msg">The brokered message instance for which the extension method will be invoked.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveComplete(Microsoft.ServiceBus.Messaging.MessageReceiver,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Asynchronously notifies the Windows Azure Service Bus messaging infrastructure that a given message should be marked as processed and deleted or archived.
            </summary>
            <param name="receiver">The <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver"/> instance for which the extension method will be invoked.</param>
            <param name="msg">The brokered message to be marked as completed.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveCompleteBatch(Microsoft.ServiceBus.Messaging.MessageReceiver,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>
            Asynchronously notifies the Windows Azure Service Bus messaging infrastructure that the specified message batch should be marked as processed and deleted or archived.
            </summary>
            <param name="receiver">The <see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver"/> instance for which the extension method will be invoked.</param>
            <param name="messages">The messages composing a batch.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveSendBatch(Microsoft.ServiceBus.Messaging.MessageSender,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
            <summary>
            Asynchronously sends the specified batch of brokered messages.
            </summary>
            <param name="sender">The <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender"/> instance for which the extension method will be invoked.</param>
            <param name="messages">The messages to be sent.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveAbandon(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Asynchronously informs the Windows Azure Service Bus messaging infrastructure that the receiver wants to relinquish the message lock ownership and return the message back to where it came from.
            </summary>
            <param name="msg">The brokered message instance for which the extension method will be invoked.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveDefer(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Asynchronously informs the Windows Azure Service Bus messaging infrastructure that the receiver wants to defer the processing for this message to a later time.
            </summary>
            <param name="msg">The brokered message instance for which the extension method will be invoked.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveDeadLetter(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.String,System.String)">
            <summary>
            Asynchronously informs the Windows Azure Service Bus messaging infrastructure that a given message needs to be moved to the dead letter queue ($DeadLetterQueue).
            </summary>
            <param name="msg">The brokered message instance for which the extension method will be invoked.</param>
            <param name="reason">The reason for dead-lettering the message.</param>
            <param name="description">The error description information providing additional details as to the reason for dead-lettering the message.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.SafeClose(Microsoft.ServiceBus.Messaging.MessageClientEntity)">
            <summary>
            Performs a safe close of the current communication object instance.
            </summary>
            <param name="commObj">The instance of the <see cref="T:Microsoft.ServiceBus.Messaging.MessageClientEntity"/> object.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.CreateTopicIfNotExist(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.TopicDescription)">
            <summary>
            Creates a new topic if it doesn't already exist.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <param name="description">The metadata object describing a Service Bus topic including topic path, behavioral settings (such as duplicate detection) and informational data points (such as current size and maximum topic size).</param>
            <returns>An instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription"/> object holding the topic metadata.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.CreateSubscriptionIfNotExist(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
            <summary>
            Creates a new subscription for the specified topic provided it doesn't already exist.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <param name="description">The metadata object describing a Service Bus subscription.</param>
            <param name="filter">The filter that will be used to match messages arriving through this subscription.</param>
            <returns>An instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription"/> object holding the subscription metadata.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveGetSubscription(Microsoft.ServiceBus.NamespaceManager,System.String,System.String)">
            <summary>
            Asynchronously retrieves the Service Bus subscription metadata by its topic path and subscription name.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <param name="topicPath">The path of the topic holding the subscription.</param>
            <param name="name">The name of the subscription.</param>
            <returns>An instance of the <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription"/> object holding the subscription metadata.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveGetSubscriptions(Microsoft.ServiceBus.NamespaceManager,System.String)">
            <summary>
            Asynchronously retrieves the Service Bus subscription metadata for all subscriptions in the given namespace.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <param name="topicPath">The path of the topic holding the subscription.</param>
            <returns>The collection of <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription"/> objects holding the metadata for each subscription found in the namespace.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveGetQueue(Microsoft.ServiceBus.NamespaceManager,System.String)">
            <summary>
            Asynchronously retrieves the Service Bus queue metadata by a given queue path.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <param name="queuePath">The path defining the location of the queue.</param>
            <returns>An instance of the <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription"/> object holding the queue metadata.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveGetQueues(Microsoft.ServiceBus.NamespaceManager)">
            <summary>
            Asynchronously retrieves the Service Bus queue metadata for all queues in the given namespace.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <returns>The collection of <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription"/> objects holding the metadata for each queue found in the namespace.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveGetTopic(Microsoft.ServiceBus.NamespaceManager,System.String)">
            <summary>
            Asynchronously retrieves the Service Bus topic metadata by a given topic path.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <param name="topicPath">The path defining the location of the topic.</param>
            <returns>An instance of the <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription"/> object holding the topic metadata.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveGetTopics(Microsoft.ServiceBus.NamespaceManager)">
            <summary>
            Asynchronously retrieves the Service Bus topic metadata for all topics in the given namespace.
            </summary>
            <param name="nsManager">The <see cref="T:Microsoft.ServiceBus.NamespaceManager"/> type which this method extends.</param>
            <returns>The collection of <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription"/> objects holding the metadata for each topic found in the namespace.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveReceive(Microsoft.ServiceBus.Messaging.QueueClient,System.TimeSpan)">
            <summary>
            Returns an observable sequence of messages from the specified queue.
            </summary>
            <param name="queueClient">The <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient"/> object this method extends.</param>
            <param name="waitTimeout">The timeout during which the messaging API will be waiting for a new message.</param>
            <returns>The observable sequence of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveReceive(Microsoft.ServiceBus.Messaging.QueueClient,System.TimeSpan,System.Int32)">
            <summary>
            Returns an observable sequence of messages from the specified queue.
            </summary>
            <param name="queueClient">The <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient"/> object this method extends.</param>
            <param name="waitTimeout">The timeout during which the messaging API will be waiting for a new message.</param>
            <param name="messageCount">The maximum number of messages to be received in a batch.</param>
            <returns>The observable sequence of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ExtensionMethods.ObserveDeadLetter(Microsoft.ServiceBus.Messaging.QueueClient,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
            <summary>
            Returns an observable object representing an asynchronous operation that puts the specified message on a Dead Letter queue.
            </summary>
            <param name="queueClient">The <see cref="T:Microsoft.ServiceBus.Messaging.QueueClient"/> object this method extends.</param>
            <param name="message">The message to be put into a Dead Letter queue.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory">
            <summary>
            Provides a set of factory methods for creating instances of the Service Bus hosts.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusRelayHost``1(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Returns a service host for the service contract of type <typeparamref name="T"/> listening on the specified relay endpoint.
            </summary>
            <typeparam name="T">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</typeparam>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusRelayHost(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,System.Type)">
            <summary>
            Returns a service host for the service contract of type <paramref name="serviceType"/> listening on the specified relay endpoint.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <param name="serviceType">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusRelayHost``1(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns a service host for the service contract of type <typeparamref name="T"/> listening on the specified relay endpoint.
            </summary>
            <typeparam name="T">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</typeparam>
            <param name="serviceNamespace">The service namespace name used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="loadBalanced">The flag indicating whether the endpoint is enabled for load balancing.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusRelayHost(System.String,System.String,System.String,System.String,System.Type,System.Boolean)">
            <summary>
            Returns a service host for the service contract of type <paramref name="serviceType"/> listening on the specified relay endpoint.
            </summary>
            <param name="serviceNamespace">The service namespace name used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="serviceType">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</param>
            <param name="loadBalanced">The flag indicating whether the endpoint is enabled for load balancing.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusEventRelayHost``1(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Returns a service host for the service contract of type <typeparamref name="T"/> listening on the specified one-way event relay endpoint.
            </summary>
            <typeparam name="T">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</typeparam>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusEventRelayHost(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,System.Type)">
            <summary>
            Returns a service host for the service contract of type <paramref name="serviceType"/> listening on the specified one-way event relay endpoint.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <param name="serviceType">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusEventRelayHost``1(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a service host for the service contract of type <typeparamref name="T"/> listening on the specified one-way event relay endpoint.
            </summary>
            <typeparam name="T">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</typeparam>
            <param name="serviceNamespace">The service namespace name used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusEventRelayHost(System.String,System.String,System.String,System.String,System.Type)">
            <summary>
            Returns a service host for the service contract of type <paramref name="serviceType"/> listening on the specified one-way event relay endpoint.
            </summary>
            <param name="serviceNamespace">The service namespace name used by the application.</param>
            <param name="servicePath">The service path that follows the host name section of the URI.</param>
            <param name="issuerName">The issuer name.</param>
            <param name="issuerSecret">The issuer secret.</param>
            <param name="serviceType">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusHost``1(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo)">
            <summary>
            Returns a service host for the service contract of type <typeparamref name="T"/> listening on the specified Service Bus endpoint.
            The type of endpoint is determined from the endpoint details supplied in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> instance.
            </summary>
            <typeparam name="T">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</typeparam>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusHostFactory.CreateServiceBusHost(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,System.Type)">
            <summary>
            Returns a service host for the service contract of type <paramref name="serviceType"/> listening on the specified Service Bus endpoint.
            The type of endpoint is determined from the endpoint details supplied in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo"/> instance.
            </summary>
            <param name="sbEndpointInfo">The Service Bus endpoint details.</param>
            <param name="serviceType">The type of the service contract. Must be decorated with <see cref="T:System.ServiceModel.ServiceContractAttribute"/>.</param>
            <returns>A service host in the Created state that is initialized to listen on the specified endpoint.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver">
            <summary>
            Projects the Windows Azure Service Bus namespace as an observable sequence of objects carrying telemetry information about the namespace and its messaging entities, such 
            as topic size, subscription queue depth, etc. This class can act as a data source for monitoring purposes.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.#ctor(System.String,System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> object using the specified Windows Azure Service Bus namespace details. By using this constructor,
            subscribers can observer all topics, queues and subscriptions in the given namespace
            </summary>
            <param name="serviceNamespace">The service namespace which will be observed.</param>
            <param name="issuerName">The issuer name which will be used for connecting to the namespace.</param>
            <param name="issuerSecret">The issuer secret which will be used for connecting to the namespace.</param>
            <param name="interval">The time interval which defines how often the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> component will be collecting telemetry from Windows Azure Service Bus and dispatching notifications to the active subscribers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,System.TimeSpan)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> object using the specified Service Bus endpoint. The endpoint can describe either a
            particular queue or topic to be observed. If no specific endpoint type is defined in the <see cref="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.EndpointType"/> property, the entire
            namespace will be observed, which will include all queues and topics found in the Windows Azure Service Bus namespace that is described in the specified <paramref name="endpoint"/>.
            </summary>
            <param name="endpoint">The Service Bus endpoint using which the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> component will be observing.</param>
            <param name="interval">The time interval which defines how often the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> component will be collecting telemetry from Windows Azure Service Bus and dispatching notifications to the active subscribers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo},System.TimeSpan)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> object using the specified list of the Service Bus endpoints. The specified collection
            can include the endpoints that describe either a particular queue or topic to be observed. If no specific endpoint type is defined in the 
            <see cref="P:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo.EndpointType"/> property, the entire namespace will be observed, which will include all queues and topics found in each
            Windows Azure Service Bus namespace that is provided in the <paramref name="endpoints"/> collection.
            </summary>
            <param name="endpoints">The collection of Service Bus endpoint using which the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> component will be observing.</param>
            <param name="interval">The time interval which defines how often the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> component will be collecting telemetry from Windows Azure Service Bus and dispatching notifications to the active subscribers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.Subscribe(System.IObserver{Microsoft.ServiceBus.Messaging.TopicDescription})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to receive notifications that carry a <see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription"/> object describing the current state of
            a Windows Azure Service Bus topic.
            </summary>
            <param name="observer">The observer that will be receiving notifications.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.Subscribe(System.IObserver{Microsoft.ServiceBus.Messaging.QueueDescription})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to receive notifications that carry a <see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription"/> object describing the current state of
            a Windows Azure Service Bus queue.
            </summary>
            <param name="observer">The observer that will be receiving notifications.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.Subscribe(System.IObserver{Microsoft.ServiceBus.Messaging.SubscriptionDescription})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to receive notifications that carry a <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription"/> object describing the current state of
            a Windows Azure Service Bus subscription.
            </summary>
            <param name="observer">The observer that will be receiving notifications.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver.Interval">
            <summary>
            Gets a time interval which defines how often the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusNamespaceObserver"/> component will be collecting telemetry from 
            Windows Azure Service Bus and dispatching notifications to the active subscribers.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel">
            <summary>
            Implements a messaging component that supports publish-subscribe capability using Windows Azure Service Bus.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel"/> object using the specified Service Bus topic endpoint and custom settings.
            </summary>
            <param name="endpoint">The Service Bus endpoint using which the messaging component will be leveraging to provide publish-subscribe capability.</param>
            <param name="settings">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings"/> object containing behavioral and runtime settings for the messaging component.</param>
            <param name="retryPolicy">The optional retry policy that will ensure reliable access to the underlying messaging infrastructure.</param>
            <param name="serializer">The optional serializer that will define how requests and response messages are represented on the wire.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo},Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel"/> object using the specified Service Bus topic endpoints and custom settings.
            </summary>
            <param name="endpoints">The Service Bus endpoint collection using which the messaging component will be leveraging to provide publish-subscribe capability.</param>
            <param name="settings">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusPublishSubscribeChannelSettings"/> object containing behavioral and runtime settings for the messaging component.</param>
            <param name="retryPolicy">The optional retry policy that will ensure reliable access to the underlying messaging infrastructure.</param>
            <param name="serializer">The optional serializer that will define how requests and response messages are represented on the wire.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.Publish``1(System.IObservable{``0})">
            <summary>
            Publishes one or more messages returned by the specified provider into the underlying publish-subscribe messaging infrastructure.
            </summary>
            <typeparam name="T">The type of the message to be published.</typeparam>
            <param name="provider">The provider supplying messages for publication.</param>
            <returns>The object which enables the consumer to track the progress of the publishing operation, be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.Subscribe``1(System.String,System.String,System.Boolean)">
            <summary>
            Creates a subscription to receive messages of the specified type <typeparamref name="T"/> that match the optionally specified filter.
            </summary>
            <typeparam name="T">The type of messages that the observers will be able to subscribed to.</typeparam>
            <param name="name">The name of the subscription.</param>
            <param name="filter">The filter expression defined in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying publish-subscribe messaging infrastructure even it does not have active subscribers.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="T"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.Settings">
            <summary>
            Returns runtime settings for the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel"/> component.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.AsyncMessagePublisher`1.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.AsyncMessagePublisher`1.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.AsyncMessageReceiver`1.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusPublishSubscribeChannel.AsyncMessageReceiver`1.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel">
            <summary>
            Implements a component that supports request/response message exchange pattern using a pair of one-way publish/subscribe messaging channels.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusEndpointInfo,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel"/> object using the specified pair of request and response endpoints.
            These endpoints will be utilized for creating underlying messaging channels to send requests and receive responses respectively.
            </summary>
            <param name="partyName">The user-defined name that uniquely identifies a party involved in the request-response message exchange.</param>
            <param name="requestEndpoint">The Service Bus messaging endpoint that will be used for receiving requests.</param>
            <param name="responseEndpoint">The Service Bus messaging endpoint that will be used for sending responses.</param>
            <param name="settings">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings"/> object containing behavioral and runtime settings for this messaging component.</param>
            <param name="retryPolicy">The optional retry policy that will ensure reliable access to the underlying messaging infrastructure.</param>
            <param name="serializer">The optional serializer that will define how requests and response messages are represented on the wire.</param>
            <para>The <paramref name="partyName"/> parameter specifies the name of the connected party that communicates with other parties using the request-response message exchange pattern.
            In most cases, this parameter would uniquely identify both a requestor (sending requests) and a replier (responding with replies) so that responses will reach the right clients.</para>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,Microsoft.Experience.CloudFx.Framework.Messaging.IPublishSubscribeChannel,Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel"/> object using the specified pair of request and response channel.
            These channels will be utilized for sending requests and receiving responses respectively.
            </summary>
            <param name="partyName">The user-defined name that uniquely identifies a party involved in the request-response message exchange.</param>
            <param name="requestChannel">The messaging channel that will be used for receiving requests.</param>
            <param name="responseChannel">The messaging channel that will be used for sending responses.</param>
            <param name="settings">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings"/> object containing behavioral and runtime settings for the messaging component.</param>
            <param name="serializer">The optional serializer that will define how requests and response messages are represented on the wire.</param>
            <para>The <paramref name="partyName"/> parameter specifies the name of the connected party that communicates with other parties using the request-response message exchange pattern.
            In most cases, this parameter would uniquely identify both a requestor (sending requests) and a replier (responding with replies) so that responses will reach the right clients.</para>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.Subscribe``1(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates an observable sequence receiving requests of the specified type <typeparamref name="TRequest"/> that match the specified filter.
            </summary>
            <typeparam name="TRequest">The type of request messages that the observers will be able to subscribed to.</typeparam>
            <param name="name">The name of the subscription.</param>
            <param name="filter">The filter expression defined in the specific syntax that can be understood by the underlying publish-subscribe messaging infrastructure.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying messaging infrastructure even it does not have active subscribers.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="TRequest"/> in a competing manner.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="TRequest"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.Subscribe``2(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates an observable sequence receiving requests of the specified type <typeparamref name="TRequest"/> that match the specified filter.
            The sequence also provides a feedback loop to enable a response of type <typeparamref name="TResponse"/> to be sent back to the requestor.
            </summary>
            <typeparam name="TRequest">The type of request messages that the observers will be able to subscribed to.</typeparam>
            <typeparam name="TResponse">The type of response the observers will be able to reply back with.</typeparam>
            <param name="name">The name of the subscription that will be created in the underlying messaging infrastructure.</param>
            <param name="filter">The filter expression instructing the underlying messaging infrastructure how to match incoming messages to the observable sequence.</param>
            <param name="persistent">The flag indicating whether or not the created subscription will be retained in the underlying messaging infrastructure even it does not have active subscribers.</param>
            <param name="listenerCount">The number of concurrent listeners receiving messages of the given type<typeparamref name="TRequest"/> in a competing manner.</param>
            <returns>The observable sequence that can be used by subscribers to express an intent in receiving messages of the given type <typeparamref name="TRequest"/> and reply back with responses of type <typeparamref name="TResponse"/>.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.Publish``1(``0)">
            <summary>
            Publishes the specified <paramref name="request"/> message in a "fire and forget" manner expecting no response from the connected party.
            </summary>
            <typeparam name="TRequest">The type of request message.</typeparam>
            <param name="request">The request message to be published.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.Publish``2(``0)">
            <summary>
            Publishes the specified <paramref name="request"/> message and starts waiting for a response until the timeout defined in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Configuration.ServiceBusRequestResponseChannelSettings"/> object is expired.
            </summary>
            <typeparam name="TRequest">The type of request message.</typeparam>
            <typeparam name="TResponse">The type of response message</typeparam>
            <param name="request">The request message to be published.</param>
            <returns>The response message received from the connected party, or the default value of <typeparamref name="TResponse"/> if no response was received within the defined timeout.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusRequestResponseChannel.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusTransientErrorDetectionStrategy">
            <summary>
            Provides the transient error detection logic that can recognize transient faults when dealing with Windows Azure Service Bus.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusTransientErrorDetectionStrategy.acsErrorCodeRegEx">
            <summary>
            Provides a compiled regular expression used for extracting the error code from the message.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceBusTransientErrorDetectionStrategy.IsTransient(System.Exception)">
            <summary>
            Determines whether the specified exception represents a transient failure that can be compensated by a retry.
            </summary>
            <param name="ex">The exception object to be verified.</param>
            <returns>True if the specified exception is considered as transient, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceEndpointDiscoveryCondition">
            <summary>
            Implements a discovery condition that evaluates the <see cref="T:System.ServiceModel.Description.ServiceEndpoint"/> instances against a set of
            criteria when performing service endpoint configuration discovery.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceEndpointDiscoveryCondition.EndpointNameExactMatch(System.String)">
            <summary>
            Returns a discovery condition which evaluates a service endpoint name to check if it fully matches the specified name.
            </summary>
            <param name="name">The name of the service endpoint participating in the evaluation.</param>
            <returns>The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition"/> object containing the evaluation condition.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceEndpointDiscoveryCondition.EndpointNamePartialMatch(System.String)">
            <summary>
            Returns a discovery condition which evaluates a service endpoint name to check if it partially matches the specified name.
            </summary>
            <param name="name">The name of the service endpoint participating in the evaluation.</param>
            <returns>The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition"/> object containing the evaluation condition.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceEndpointDiscoveryCondition.BindingTypeExactMatch(System.Type)">
            <summary>
            Returns a discovery condition which evaluates a transport binding to check if it matches the specified type.
            </summary>
            <param name="bindingType">The WCF binding type participating in the evaluation.</param>
            <returns>The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition"/> object containing the evaluation condition.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceEndpointDiscoveryCondition.ContractTypeExactMatch(System.Type)">
            <summary>
            Returns a discovery condition which evaluates a service contract to check if it matches the specified type.
            </summary>
            <param name="contractType">The service contract type participating in the evaluation.</param>
            <returns>The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.DiscoveryCondition"/> object containing the evaluation condition.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext">
            <summary>
            Provides access to the commonly used system properties in the message context. Consider using this constant values when composing subscription filters, 
            as opposed to maintaining your own set of property names.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext"/> object using an empty collection of message context properties.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext"/> object using the specified collection of message context properties.
            </summary>
            <param name="parentContext">The parent context which this object will extend.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.MessageType">
            <summary>
            Gets or sets the value of the MessageType system context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.MessageTypeHash">
            <summary>
            Gets or sets the value of the MessageTypeHash system context property. This context property is used for message routing as the real message type can exceed the
            length restrictions imposed on expressions in subscription filters.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.MessageId">
            <summary>
            Gets or sets the value of the MessageID system context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.ContentType">
            <summary>
            Gets or sets the value of the ContentType system context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.Label">
            <summary>
            Gets or sets the value of the Label system context property.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.TimeToLive">
            <summary>
            Allows specifying a custom time-to-live (TTL) value for messages published into the publish-subscribe messaging channel.
            Messages older than their TTL will be removed before they can reach their subscribers.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.ScheduledEnqueueTime">
            <summary>
            Gets or sets the value of the ScheduledEnqueueTime system context property.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName">
            <summary>
            Combines all property names that are used to define in the system context.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.MessageType">
            <summary>
            Gets the name of the MessageType context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.MessageTypeHash">
            <summary>
            Gets the name of the MessageTypeHash context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.MessageId">
            <summary>
            Gets the name of the MessageID context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.ContentType">
            <summary>
            Gets the name of the ContentType context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.Label">
            <summary>
            Gets the name of the Label context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.TimeToLive">
            <summary>
            Gets the name of the TimeToLive context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.ScheduledEnqueueTime">
            <summary>
            Gets the name of the ScheduledEnqueueTime context property.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Messaging.SystemMessageContext.PropertyName.ReservedNames">
            <summary>
            Gets the array of property names reserved for internal use.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute">
            <summary>
            Provides a declarative mechanism for turning a worker role into a service host.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute"/> class with the specified type of service.
            </summary>
            <param name="serviceType">The type of the service.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute"/> class with the specified type of service.
            </summary>
            <param name="serviceType">The type of the service.</param>
            <param name="contractType">The type of the contract.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute"/> class with the specified type of service and name of the endpoint defined in the configuration file.
            </summary>
            <param name="serviceType">The type of the service.</param>
            <param name="endpointName">The service endpoint name defined in the application configuration.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.#ctor(System.Type,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute"/> class with the specified type of service and name of the endpoint defined in the configuration file.
            </summary>
            <param name="serviceType">The type of the service.</param>
            <param name="contractType">The type of the contract.</param>
            <param name="endpointName">The service endpoint name defined in the application configuration.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.ContractType">
            <summary>
            Gets the type of the contract.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.ServiceType">
            <summary>
            Gets the type of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.EndpointName">
            <summary>
            Gets the name of the Service endpoint definition in the application configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Messaging.ServiceHostWorkerRoleAttribute.AutoStart">
            <summary>
            Gets or sets a value indicating whether the service host is to be started automatically when the hosting worker role is starting.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.AppDomainUnhandledException">
            <summary>
              Looks up a localized string similar to An unhandled exception has been detected in the current application domain {0}. See below for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.AppDomainUnhandledExceptionNoDetails">
            <summary>
              Looks up a localized string similar to An unhandled exception has been detected in the current application domain {0}. There was no exception object available for detailed information..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ArgumentCannotBeDefault">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be initialized with its default value..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ArgumentCannotBeGreaterThanBaseline">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be greater than its ceiling value of {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ArgumentCannotBeNegative">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be initialized with a negative value..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ArgumentCannotBeOutOfRange">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be out of range ({1} - {2})..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ArgumentCannotBeZeroOrNegative">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be initialized with a zero or negative value..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ArgumentCollectionCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The specified argument {0} cannot be a null or empty collection..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ArgumentsConditionNotSatisfied">
            <summary>
              Looks up a localized string similar to The values of the specified argument {0} do not satisfy the required condition..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.BlobDataCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The data in the specified blob of type {0} cannot be null..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.BlobDownloadCannotBeRetried">
            <summary>
              Looks up a localized string similar to A failure has occurred while downloading blob {0} from the container {1}. The download operation cannot be retried as data consistency cannot be guaranteed. This could be due to the blob’s data stream being non-rewindable (non-seekable) or other conditions that cannot be compensated by a retry. Please refer to the inner exception for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.BlobPutAsyncOperationFailure">
            <summary>
              Looks up a localized string similar to Unable to upload the blob(s). The asynchronous operation has been terminated with an unexpected error. Please refer to the inner exception for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.BlobUploadCannotBeRetried">
            <summary>
              Looks up a localized string similar to A failure has occurred while uploading blob {0} in the container {1}. The upload operation cannot be retried as data consistency cannot be guaranteed. This could be due to the blob’s data stream being non-rewindable (non-seekable) or other conditions that cannot be compensated by a retry. Please refer to the inner exception for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.CannotCreateInstanceFromXmlReader">
            <summary>
              Looks up a localized string similar to An instance of {0} object cannot be created from the specified instance of XML reader. The reader is expected to be positioned on element {0} from namespace {1}. Encountered element {2} in namespace {3}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.CannotHandleLargeMessageWithoutOverflowStore">
            <summary>
              Looks up a localized string similar to Transferring large messages requires an overflow message store. Please make sure that the overflow store was specified..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.CannotParseServiceBusConnectionString">
            <summary>
              Looks up a localized string similar to Unable to parse the specified Service Bus endpoint connection string {0}. The value appears to be in the wrong format. Please refer to the documentation for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.CannotParseStorageConnectionString">
            <summary>
              Looks up a localized string similar to Unable to parse the specified storage account connection string {0}. The value appears to be in the wrong format. Please refer to the documentation for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ClientIdValueCannotBeUsedForComputingPartitionId">
            <summary>
              Looks up a localized string similar to The specified client ID value cannot be used for computation. The provided number results in an out-of-bound value..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.CloudWebAppBaseUnhandledException">
            <summary>
              Looks up a localized string similar to An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ConfigSectionNotFound">
            <summary>
              Looks up a localized string similar to The application&apos;s configuration file (such as ServiceConfiguration.cscfg, app.config or web.config) doesn&apos;t contain a section {0}. This section is compulsory for the application in order to function properly. Please add this section into the configuration file..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ConfigSectionTypeCannotBeDetermined">
            <summary>
              Looks up a localized string similar to The type of the configuration section {0} cannot be reliably determined. Instead of specifying the type {1}, use a more specific type or make sure that the configuration data possesses the type information. For more details, please refer to the relevant sectionsin the API documentation..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ConnectionStringNotDefined">
            <summary>
              Looks up a localized string similar to A connection string for the {0} database has not been found in the application configuration. Please verify the current configuration and make sure that the ConnectionStrings section contains a valid definition of the connection string for {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ContainerNameContainsInvalidCharacters">
            <summary>
              Looks up a localized string similar to Container names must start with a letter or number, and can contain only letters, numbers, and the dash (-) character..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ContainerNameInvalidDashSequence">
            <summary>
              Looks up a localized string similar to Every dash (-) character must be immediately preceded and followed by a letter or number..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ContainerNameTooLong">
            <summary>
              Looks up a localized string similar to Container names must be from 3 through 63 characters long. Please refer to the &quot;Naming Containers, Blobs, and Metadata&quot; section in the MSDN library for more information..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ContainerNameTooShort">
            <summary>
              Looks up a localized string similar to Container names must be at least 3 characters long. Please refer to the &quot;Naming Containers, Blobs, and Metadata&quot; section in the MSDN library for more information..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.DuplicatePrefixFoundInNamespaceCollection">
            <summary>
              Looks up a localized string similar to The configured XML namespace prefix has already been assigned to a different namespace. Please verify the XPath Query Library and make sure that all prefixes are unique..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.EndpointCollectionIsEmpty">
            <summary>
              Looks up a localized string similar to The specified collection of endpoint definitions doesn&apos;t not contain any items. The collection must not be empty..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.EtwWriteEventFailure">
            <summary>
              Looks up a localized string similar to Unable to write an event into the ETW stack. Error code: {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ExtensionObjectNotFound">
            <summary>
              Looks up a localized string similar to An instance of type {0} has not been found in the collection of registered extensions. Please make sure that an extension of this type is correctly and timely registered to enable its consumers to locate the instance at runtime..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ExtensionObjectNotFoundInAspNetState">
            <summary>
              Looks up a localized string similar to The current ASP.NET application does not appear to have been correctly configured to work with the CloudFx extensibility model. The required state variable is missing from the application’s state. Please make sure that the ASP.NET application’s entry point (which is usually the Global.asax.cs file) inherits from the {0} type. By inheriting from this type, the ASP.NET application will be automatically enabled for extensibility with no further user actions required..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.IncomingMessageCannotBeDeserialized">
            <summary>
              Looks up a localized string similar to The incoming message cannot be deserialized successfully into an instance of type {0}. Please ensure that the sender correctly serialized the outbound messages and that both the sender and receiver share the same serialization component..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.IncomingMessageMissingRequiredProperty">
            <summary>
              Looks up a localized string similar to The incoming message cannot be processed. The required property {0} is missing from the message context. Please ensure that the sender correctly stamped the outbound messages with the above property..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.InsufficientNumberOfEndpoints">
            <summary>
              Looks up a localized string similar to The specified number of Service Bus endpoints ({0}) is insufficient for scale-out purposes. The recommended number of endpoints should be a percentage of the total number of publishers and subscribers, or at least greater than 2..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.InvalidCloudTableName">
            <summary>
              Looks up a localized string similar to The specified value {0} is not a valid Windows Azure table name..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.InvalidEnumValue">
            <summary>
              Looks up a localized string similar to The value of the argument {0} provided for the enumeration {1} is invalid..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.InvalidServiceBusEndpointType">
            <summary>
              Looks up a localized string similar to The specified Service Bus endpoint definition {0} is of a wrong type {1}. The expected type is {2}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.InvalidUseOfRoleConfigurationSettingCollection">
            <summary>
              Looks up a localized string similar to The requested action against the collection of Windows Azure role settings cannot be performed due to API restrictions. The settings cannot be modified, removed or retrieved by their index..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.PublishAsyncOperationFailure">
            <summary>
              Looks up a localized string similar to Unable to publish the message(s). The asynchronous operation has been terminated with an unexpected error. Please refer to the inner exception for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.PublishFailureEndpointNotFound">
            <summary>
              Looks up a localized string similar to Unable to publish the message. The definition for the endpoint {0} cannot be found. Please ensure that the specified endpoint definition has been registered in the endpoint collection..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.PublishFailureNoMatchingEndpointsFound">
            <summary>
              Looks up a localized string similar to Unable to publish the message. There were no endpoints found that match the specified name or pattern..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.QueueNameTemplateNameMustIncludePlaceholder">
            <summary>
              Looks up a localized string similar to The specified queue name template {0} must include a placeholder “{1}” which will be used for customizing the queue names to be able to create multiple queues for scaling purposes..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.QueuePutAsyncOperationFailure">
            <summary>
              Looks up a localized string similar to Unable to enqueue the message(s). The asynchronous operation has been terminated with an unexpected error. Please refer to the inner exception for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.RetryLimitExceeded">
            <summary>
              Looks up a localized string similar to The action has exceeded its defined retry limit..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.ServiceRegistryEndpointNotFound">
            <summary>
              Looks up a localized string similar to The specified endpoint address {0} has not been found in the Service Registry..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.SpecifiedServiceBusEndpointIsOfWrongType">
            <summary>
              Looks up a localized string similar to The definition for the Service Bus endpoint {0} is expected to have been of type {1}. The actual type of the endpoint is {2}. Please ensure that the endpoint type is set to the correct type..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.SpecifiedServiceBusEndpointTopicPathEmpty">
            <summary>
              Looks up a localized string similar to The definition for the Service Bus endpoint {0} has an empty topic path. The path must be set to the correct value..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.StorageAccountCollectionIsEmpty">
            <summary>
              Looks up a localized string similar to The specified collection of storage accounts doesn&apos;t not contain any items. The collection must not be empty..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.StringCannotBeEmpty">
            <summary>
              Looks up a localized string similar to The specified string argument {0} must not be empty..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.StringMustBeAValidTableName">
            <summary>
              Looks up a localized string similar to The specified string argument {0} must be a valid table name..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.SubscribeOperationFailure">
            <summary>
              Looks up a localized string similar to Unable to subscribe to messages from the publish/subscribe channel of type {0}. The operation has been terminated with an unexpected error. Please refer to the inner exception for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.SubscriptionCannotBeCreatedOrFound">
            <summary>
              Looks up a localized string similar to The specified subscription name {0} cannot be found or cannot be created on topic {1}. Please check if the name is valid. The maximum supported length of subscription names is 290 characters. The name should only contain alphanumeric characters..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.SubscriptionNameMustIncludePlaceholder">
            <summary>
              Looks up a localized string similar to The specified subscription name {0} must include a placeholder “{1}” which will be used for customizing the subscription name for each individual non-competing subscriber..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TableEntityCollectionPartitionKeyMismatch">
            <summary>
              Looks up a localized string similar to All entities must share the same PartitionKey property..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TableEntityInvalidPartitionKey">
            <summary>
              Looks up a localized string similar to The specified table entity does not contain a partition key, or its value is null. Please make sure that the table entity inherits from one of the following types: {0} or has a public property called {1}. Please also make sure that the partition key value conforms to the requirements set out by the Table Storage service..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TableEntityInvalidRowKey">
            <summary>
              Looks up a localized string similar to The specified table entity does not contain a row key, or its value is null. Please make sure that the table entity inherits from one of the following types: {0} or has a public property called {1}. Please also make sure that the row key value conforms to the requirements set out by the Table Storage service..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TableEntityUnsupportedType">
            <summary>
              Looks up a localized string similar to The specified table entity type {0} cannot be used with this component. The supported entity types are: {1} or any type containing public properties called {2} and {3}. Please make sure you either use any of the supported types or both the Partition and Row key properties are defined as public properties..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TableNameContainsInvalidCharacters">
            <summary>
              Looks up a localized string similar to Table names must be from 3 to 63 characters long, they may contain only alphanumeric characters and cannot begin with a numeric character..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TableStorageOperationFailed">
            <summary>
              Looks up a localized string similar to Unable to complete the requested table storage operation. See inner exception(s) for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TableStorageOperationFailedWithResponseCode">
            <summary>
              Looks up a localized string similar to Unable to complete the requested table storage operation. The Table Storage Service returned the following response code(s): {0}. See inner exception(s) for details..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TopicCannotBeCreatedOrFound">
            <summary>
              Looks up a localized string similar to The specified topic name {0} cannot be found or cannot be created. Please check if the name is valid. The maximum supported length of topic path is 290 characters. The name should only contain alphanumeric characters..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TraceProviderGuidCannotBeFound">
            <summary>
              Looks up a localized string similar to The specified trace provider GUID {0} cannot be found. Please make sure that a trace event provider with a matching GUID value has been registered with Trace Manager..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TypeMissingRequiredAttribute">
            <summary>
              Looks up a localized string similar to The specified type {0} is missing the required attribute {1}. Please make sure that the type has been decorated with the above attribute..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.TypeNotCompatible">
            <summary>
              Looks up a localized string similar to The specified type {0} is not compatible with {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.ExceptionMessages.XPathQueryNotDefined">
            <summary>
              Looks up a localized string similar to A definition for the {0} XPath query has not been found in the XPath Query Library. Please make sure that the corresponding configuration file contains a valid definition for this query..
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.AdditionalInformationPropertyName">
            <summary>
              Looks up a localized string similar to AdditionalInformation.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ApplicationComponentTraceProviderName">
            <summary>
              Looks up a localized string similar to ApplicationComponent.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudApplicationInfoHttpStatusCode">
            <summary>
              Looks up a localized string similar to HTTP Status Code.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudApplicationInfoHttpStatusMessage">
            <summary>
              Looks up a localized string similar to HTTP Status Message.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudApplicationInfoRoleInstanceIdProperty">
            <summary>
              Looks up a localized string similar to Role Instance ID.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudApplicationInfoRoleNameProperty">
            <summary>
              Looks up a localized string similar to Role Name.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudApplicationInfoServiceRequestID">
            <summary>
              Looks up a localized string similar to Service Request ID.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudApplicationInfoStorageErrorCode">
            <summary>
              Looks up a localized string similar to Storage Error Code.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudApplicationInfoStorageErrorMessage">
            <summary>
              Looks up a localized string similar to Storage Error Message.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudBlobEntityMetadataFieldBlobData">
            <summary>
              Looks up a localized string similar to BlobData.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudBlobEntityMetadataFieldBlobName">
            <summary>
              Looks up a localized string similar to BlobName.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudBlobEntityMetadataFieldContainerName">
            <summary>
              Looks up a localized string similar to ContainerName.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.CloudBlobEntityMetadataFieldLeaseId">
            <summary>
              Looks up a localized string similar to LeaseId.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ConnectionStringsConfigurationSectionName">
            <summary>
              Looks up a localized string similar to connectionStrings.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ContainerNameCheckRegEx">
            <summary>
              Looks up a localized string similar to ^[a-z,0-9][a-z,0-9,-]*$.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ContainerNameCleanupRegEx">
            <summary>
              Looks up a localized string similar to [^a-z,0-9,-].
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ContainerNameDashRuleCheckRegEx">
            <summary>
              Looks up a localized string similar to ^([a-z]|\d)((-([a-z]|\d)|([a-z]|\d))+)$.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DataPropertyName">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DebugTraceEventMessageFormatString">
            <summary>
              Looks up a localized string similar to {0} (Event Type: {1}, Event ID: {2}, Source: {3}).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DefaultDatabaseProviderName">
            <summary>
              Looks up a localized string similar to System.Data.SqlClient.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DefaultEndpointsProtocolSettingName">
            <summary>
              Looks up a localized string similar to DefaultEndpointsProtocol.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DefaultEventLogTraceListenerLogName">
            <summary>
              Looks up a localized string similar to Application.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DefaultLoggingCategory">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DefaultTraceSwitchName">
            <summary>
              Looks up a localized string similar to CloudFx.Diagnostics.DefaultTraceSwitch.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DevelopmentFabricTraceListenerName">
            <summary>
              Looks up a localized string similar to DevelopmentFabricTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DevelopmentStorageAccountSetting">
            <summary>
              Looks up a localized string similar to UseDevelopmentStorage.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DiagnosticMonitorConfigFolderName">
            <summary>
              Looks up a localized string similar to Configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DiagnosticMonitorFolderName">
            <summary>
              Looks up a localized string similar to Monitor.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DiagnosticMonitorGuidFileName">
            <summary>
              Looks up a localized string similar to guid.txt.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.DiagnosticStoreResourceName">
            <summary>
              Looks up a localized string similar to DiagnosticStore.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.EmailTraceListenerName">
            <summary>
              Looks up a localized string similar to EmailTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ErrorsPropertyName">
            <summary>
              Looks up a localized string similar to Errors.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.EventLogTextFormatterName">
            <summary>
              Looks up a localized string similar to EventLogTextFormatter.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.EventLogTextFormatterTemplate">
            <summary>
              Looks up a localized string similar to {message}{newline}Category: {category}{newline}Priority: {priority}{newline}EventId: {eventid}{newline}Severity: {severity}{newline}Title: {title}{newline}Machine: {machine}{newline}App Domain: {appDomain}{newline}Process ID: {processId}{newline}Process Name: {processName}{newline}Thread Name: {threadName}{newline}Win32 Thread ID: {win32ThreadId}{newline}Extended Properties: {dictionary({key} - {value}{newline})}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.EventLogTraceListenerName">
            <summary>
              Looks up a localized string similar to EventLogTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionCanonicalNullValue">
            <summary>
              Looks up a localized string similar to &lt;NULL&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionDetails">
            <summary>
              Looks up a localized string similar to Exception Information Details:.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionEventTimestampFormatString">
            <summary>
              Looks up a localized string similar to dd/MM/yyyy HH:mm:ss.fff.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionFormatterHeader">
            <summary>
              Looks up a localized string similar to HEADER.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionLineSeparator">
            <summary>
              Looks up a localized string similar to ======================================.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionOriginalExceptionIntro">
            <summary>
              Looks up a localized string similar to The unformatted exception is included below for reference..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionPropValueCouldNotBeRetrieved">
            <summary>
              Looks up a localized string similar to Could not retrieve the property value. Reason: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionsPropertyName">
            <summary>
              Looks up a localized string similar to Exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionStackTraceDetails">
            <summary>
              Looks up a localized string similar to Stack Trace Information Details:.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionSummary">
            <summary>
              Looks up a localized string similar to Exception Summary.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionType">
            <summary>
              Looks up a localized string similar to Exception Type.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ExceptionUnableToFormat">
            <summary>
              Looks up a localized string similar to Unable to format the specified exception. Reason: {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.FormattedDatabaseTraceListenerName">
            <summary>
              Looks up a localized string similar to FormattedDatabaseTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.FormattedDebugTraceListenerName">
            <summary>
              Looks up a localized string similar to FormattedDebugTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.FullyQualifiedNodeNameGroupName">
            <summary>
              Looks up a localized string similar to fqnn.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.InnerExceptionDetails">
            <summary>
              Looks up a localized string similar to Inner Exception Details:.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.InnerExceptionPropertyName">
            <summary>
              Looks up a localized string similar to InnerException.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.MessagePropertyName">
            <summary>
              Looks up a localized string similar to Message.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.NamespaceGroupName">
            <summary>
              Looks up a localized string similar to namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.NodeNameGroupName">
            <summary>
              Looks up a localized string similar to nodename.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.QueryGetContextInfo">
            <summary>
              Looks up a localized string similar to SELECT CONVERT(UNIQUEIDENTIFIER, CONVERT(NVARCHAR(36), CONTEXT_INFO())).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.QueryOptionFilter">
            <summary>
              Looks up a localized string similar to $filter.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ResponseMethodSuffix">
            <summary>
              Looks up a localized string similar to Response.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ResultMethodSuffix">
            <summary>
              Looks up a localized string similar to Result.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.RoleInstanceIdExtractorRegEx">
            <summary>
              Looks up a localized string similar to (\d+)$.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.RollingFlatFileTraceListenerName">
            <summary>
              Looks up a localized string similar to RollingFlatFileTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.RollingFlatFileTraceListenerTimeStampPattern">
            <summary>
              Looks up a localized string similar to yyyyMMdd.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ScopeServiceBusPublishSubscribeChannelCreateSubscription">
            <summary>
              Looks up a localized string similar to Create Subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ScopeServiceBusPublishSubscribeChannelDisposeSubscription">
            <summary>
              Looks up a localized string similar to Dispose Subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ServiceClientChannelStateResetWarning">
            <summary>
              Looks up a localized string similar to The WCF Service client channel will be aborted and re-instantiated..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.ServiceClientChannelStateWarning">
            <summary>
              Looks up a localized string similar to The WCF Service client channel state detected as {0}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.StackTracePropertyName">
            <summary>
              Looks up a localized string similar to StackTrace.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.SubscriptionNamePlaceholder">
            <summary>
              Looks up a localized string similar to {0}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TableEntityQueryByPartitionKey">
            <summary>
              Looks up a localized string similar to (PartitionKey eq &apos;{0}&apos;).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TableEntityQueryByPartitionKeyAndRowKey">
            <summary>
              Looks up a localized string similar to (PartitionKey eq &apos;{0}&apos;) and (RowKey eq &apos;{1}&apos;).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TableEntityQueryByRowKey">
            <summary>
              Looks up a localized string similar to (RowKey eq &apos;{0}&apos;).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TableNameCheckRegEx">
            <summary>
              Looks up a localized string similar to ^[A-Za-z][A-Za-z0-9]{2,62}$.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TableNameCleanupRegEx">
            <summary>
              Looks up a localized string similar to [^a-z,0-9].
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TextWriterTraceListenerName">
            <summary>
              Looks up a localized string similar to TextWriterTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgRcvLoopCancelledDueToMessagingEntityNotFound">
            <summary>
              Looks up a localized string similar to The receive loop has been terminated unexpectedly as the non-persistent subscription {0} was removed from the Service Bus messaging infrastructure..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgRcvLoopCancelledDueToOperationCanceledException">
            <summary>
              Looks up a localized string similar to The receive loop has been terminated unexpectedly as message receive operation on subscription {0} was cancelled. This may have occurred due to the pending message receiver being closed..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgReliableServiceBusClientRetryConditions">
            <summary>
              Looks up a localized string similar to Unable to establish a connection with or invoke an operation against the Service Bus endpoint {0} (reason: {1}). The operation will retry. This will be attempt #{2}. The action will continue retrying as prescribed by the retry policy..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgSetMetadataFailureBecauseBlobDoesNotExist">
            <summary>
              Looks up a localized string similar to Did not set metadata for blob {0}\{1} because blob was not found.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgTargetBlobAlreadyExists">
            <summary>
              Looks up a localized string similar to Another blob named {0} already exists in the target container {1}. Since the overwrite behavior was requested, the existing blob will be deleted and initial upload operation will now be retried..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgTargetBlobContainerNotFound">
            <summary>
              Looks up a localized string similar to The target blob container {1} does not exist and will be created automatically. The initial upload operation for blob {0} will now be retried..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgTransientConditionDetected">
            <summary>
              Looks up a localized string similar to A transient condition of type {0} was detected, and an attempt will be made to retry the failed operation. Retry attempt #: {1}. Details: {2}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgTransientConditionDetectedInBlobDownload">
            <summary>
              Looks up a localized string similar to A transient condition of type {2} was detected while downloading blob {0} from the container {1}. An attempt will be made to retry the failed operation. Retry attempt #{3}. Details: {4}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgTransientConditionDetectedInBlobUpload">
            <summary>
              Looks up a localized string similar to A transient condition of type {2} was detected while uploading blob {0} in the container {1}. An attempt will be made to retry the failed operation. Retry attempt #{3}. Details: {4}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogMsgTransientConditionDetectedInTableStorage">
            <summary>
              Looks up a localized string similar to A transient condition of type {0} was detected while performing &quot;{1}&quot; operation in table {2}. An attempt will be made to retry the failed operation. Retry attempt #{3}. Details: {4}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogTextFormatterName">
            <summary>
              Looks up a localized string similar to TraceLogLineTextFormatter.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogTextFormatterTemplate">
            <summary>
              Looks up a localized string similar to {message} (PID: {processId}, TID: {win32ThreadId}, AppDomain: {appDomain}, Process: {processName}).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.TraceLogTraceListenerName">
            <summary>
              Looks up a localized string similar to TraceLogTraceListener.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.UnknownRoleName">
            <summary>
              Looks up a localized string similar to &lt;Unknown Role Name&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.WorkerRoleHeartBeatInfo">
            <summary>
              Looks up a localized string similar to Worker role instance {0} is running. Elapsed time since start: {1}..
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.XPathQueryMacroRegEx">
            <summary>
              Looks up a localized string similar to {[$](\w+)}.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.XPathQueryParsingRegEx">
            <summary>
              Looks up a localized string similar to (?&lt;fqnn&gt;(?&lt;namespace&gt;(?&lt;=::)?\w+):(?&lt;nodename&gt;[\w-]+)).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Properties.Resources.XPathQueryTargetElementRef">
            <summary>
              Looks up a localized string similar to *[local-name()=&apos;{0}&apos; and namespace-uri()=&apos;{1}&apos;].
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CloudWebRoleBase">
            <summary>
            Provides a base class for custom implementations of Windows Azure web roles.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase">
            <summary>
            Provides a base class for Windows Azure worker roles that share common functional and non-functional elements 
            such as heartbeats, extension model, unhandled exception reporting.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase"/> object initialized with default global settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnStart">
            <summary>
            Called by Windows Azure to initialize the role instance.
            </summary>
            <returns>True if initialization succeeds, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.Run">
            <summary>
            Called by Windows Azure after the role instance has been initialized. 
            This method serves as the main thread of execution for your role.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnStop">
            <summary>
            Called by Windows Azure when the role instance is to be stopped.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnRoleStart">
            <summary>
            Enables the user code to extend the OnStart phase that is called by Windows Azure runtime to initialize the role instance.
            </summary>
            <returns>True if initialization succeeds, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnRoleRun">
            <summary>
            Enables the user code to extend the Run phase that is called by Windows Azure runtime after the role instance has been initialized.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnRoleStop">
            <summary>
            Enables the user code to extend the OnStop phase that is called by Windows Azure runtime when the role instance is to be stopped.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnRoleEnvironmentChanging(System.Object,Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironmentChangingEventArgs)">
            <summary>
            Enables the user code to provide a handler for the <see cref="E:Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironment.Changing"/> event that occurs before a change to the service 
            configuration is applied to the running instances of the role.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnRoleEnvironmentChanged(System.Object,Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironmentChangedEventArgs)">
            <summary>
            Enables the user code to provide a handler for the <see cref="E:Microsoft.WindowsAzure.ServiceRuntime.RoleEnvironment.Changed"/> event that occurs after a change to the service 
            configuration is applied to the running instances of the role.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.OnUnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Logs the exception and requests the faulted role instance to be recycled, provided the <see cref="P:System.UnhandledExceptionEventArgs.IsTerminating"/>
            parameter is set to True. When overridden, enables the user code to perform other custom actions with unhandled exceptions.
            </summary>
            <param name="sender">The source of the unhandled exception event.</param>
            <param name="e">An <see cref="T:System.UnhandledExceptionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.ConfigureDefaultExtensions">
            <summary>
            Configures the collection of default extensions that will be shared across all implementations of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase"/> abstract class.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.InstanceId">
            <summary>
            Returns an unique <see cref="T:System.Guid"/> value for the worker role instance. This ID is being used by the base class for tracing purposes.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.Extensions">
            <summary>
            Gets a collection of extension objects for this extensible object.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.HeartbeatInterval">
            <summary>
            Gets or sets the time interval for heartbeats.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase.ConnectionLimit">
            <summary>
            Gets or sets the maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint"/> object.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.RetryingEventArgs">
            <summary>
            Contains information required for the <see cref="E:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Retrying"/> event.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryingEventArgs.#ctor(System.Int32,System.TimeSpan,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.RetryingEventArgs"/> class.
            </summary>
            <param name="currentRetryCount">The current retry attempt count.</param>
            <param name="delay">The delay indicating how long the current thread will be suspended for before the next iteration will be invoked.</param>
            <param name="lastException">The exception which caused the retry conditions to occur.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.RetryingEventArgs.CurrentRetryCount">
            <summary>
            Gets the current retry count.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.RetryingEventArgs.Delay">
            <summary>
            Gets the delay indicating how long the current thread will be suspended for before the next iteration will be invoked.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.RetryingEventArgs.LastException">
            <summary>
            Gets the exception which caused the retry conditions to occur.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.RetryLimitExceededException">
            <summary>
            The special type of exception that provides managed exit from a retry loop. The user code can use this
            exception to notify the retry policy that no further retry attempts are required.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryLimitExceededException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.RetryLimitExceededException"/> class with a default error message.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryLimitExceededException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.RetryLimitExceededException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryLimitExceededException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.RetryLimitExceededException"/> class with a reference to the inner exception
            that is the cause of this exception.
            </summary>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.ShouldRetryDelegate">
            <summary>
            Defines a callback delegate that will be invoked whenever a retry condition is encountered.
            </summary>
            <param name="retryCount">The current retry attempt count.</param>
            <param name="exception">The exception which caused the retry conditions to occur.</param>
            <param name="delay">The delay indicating how long the current thread will be suspended for before the next iteration will be invoked.</param>
            <returns>True if the specified last retry count and exception permit the action to be retried, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.RetryPolicy">
            <summary>
            Provides the base implementation of the retry mechanism for unreliable actions and transient conditions.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultClientRetryCount">
            <summary>
            The default number of retry attempts.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultClientBackoff">
            <summary>
            The default amount of time used when calculating a random delta in the exponential delay between retries.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultMaxBackoff">
            <summary>
            The default maximum amount of time used when calculating the exponential delay between retries.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultMinBackoff">
            <summary>
            The default minimum amount of time used when calculating the exponential delay between retries.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultRetryInterval">
            <summary>
            The default amount of time defining an interval between retries.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultRetryIncrement">
            <summary>
            The default amount of time defining a time increment between retry attempts in the progressive delay policy.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.NoRetry">
            <summary>
            Returns a default policy that does no retries, it just invokes action exactly once.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultFixed">
            <summary>
            Returns a default policy that implements a fixed retry interval configured with <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultClientRetryCount"/> and <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultRetryInterval"/> parameters.
            The default retry policy treats all caught exceptions as transient errors.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultProgressive">
            <summary>
            Returns a default policy that implements a progressive retry interval configured with <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultClientRetryCount"/>, <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultRetryInterval"/> and <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultRetryIncrement"/> parameters.
            The default retry policy treats all caught exceptions as transient errors.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential">
            <summary>
            Returns a default policy that implements a random exponential retry interval configured with <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultClientRetryCount"/>, <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultMinBackoff"/>, <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultMaxBackoff"/> and <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultClientBackoff"/> parameters.
            The default retry policy treats all caught exceptions as transient errors.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.#ctor(Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy)">
            <summary>
            Initializes a new instance of the RetryPolicy class with default settings.
            </summary>
            <param name="errorDetectionStrategy">The <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> that is responsible for detecting transient conditions.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Create``1(System.Int32)">
            <summary>
            Returns a new instance of the RetryPolicy class with the specified number of retry attempts and default fixed time interval between retries.
            </summary>
            <typeparam name="T">The type implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> interface which is responsible for detecting transient conditions.</typeparam>
            <param name="retryCount">The number of retry attempts.</param>
            <returns>The instance of the retry policy initialized with the requested retry behavior.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Create``1(System.Int32,System.TimeSpan)">
            <summary>
            Returns a new instance of the RetryPolicy class with the specified number of retry attempts and fixed time interval between retries.
            </summary>
            <typeparam name="T">The type implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> interface which is responsible for detecting transient conditions.</typeparam>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="retryInterval">The interval between retries.</param>
            <returns>The instance of the retry policy initialized with the requested retry behavior.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Create``1(System.Int32,System.TimeSpan,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the RetryPolicy class with the specified number of retry attempts and back-off parameters for calculating the exponential delay between retries.
            </summary>
            <typeparam name="T">The type implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> interface which is responsible for detecting transient conditions.</typeparam>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="minBackoff">The minimum back-off time.</param>
            <param name="maxBackoff">The maximum back-off time.</param>
            <param name="deltaBackoff">The time value which will be used for calculating a random delta in the exponential delay between retries.</param>
            <returns>The instance of the retry policy initialized with the requested retry behavior.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Create``1(System.Int32,System.TimeSpan,System.TimeSpan)">
            <summary>
            Initializes a new instance of the RetryPolicy class with the specified number of retry attempts and parameters defining the progressive delay between retries.
            </summary>
            <typeparam name="T">The type implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> interface which is responsible for detecting transient conditions.</typeparam>
            <param name="retryCount">The number of retry attempts.</param>
            <param name="initialInterval">The initial interval which will apply for the first retry.</param>
            <param name="increment">The incremental time value which will be used for calculating the progressive delay between retries.</param>
            <returns>The instance of the retry policy initialized with the requested retry behavior.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.ExecuteAction(System.Action,System.Action{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Repetitively executes the specified <paramref name="action"/> while it satisfies the current retry policy. When all retry attempts 
            are exhausted, this method will re-throw the original exception that was thrown by the executable <paramref name="action"/> 
            during the last retry attempt.
            </summary>
            <param name="action">A delegate representing the executable action which doesn't return any results.</param>
            <param name="retryingAction">The optional action that gets invoked whenever a transient condition is encountered.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.ExecuteAction(System.Action,System.Action{System.Exception},System.Action{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Repetitively executes the specified <paramref name="action"/> while it satisfies the current retry policy. When all retry attempts 
            are exhausted, this method will invoke the specified <paramref name="faultHandler"/> delegate. If no fault handler was provided, this 
            method will re-throw the original exception that was thrown by the executable <paramref name="action"/> during the last retry attempt.
            </summary>
            <param name="action">A delegate representing the executable action which doesn't return any results.</param>
            <param name="faultHandler">The fault handler delegate that will be invoked if the action cannot be successfully completed despite retry attempts.</param>
            <param name="retryingAction">The optional action that gets invoked whenever a transient condition is encountered.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.ExecuteAction``1(System.Func{``0},System.Action{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Repetitively executes the specified <paramref name="action"/> while it satisfies the current retry policy and returns a result if the action
            completed successfully. If the action was continuously failing and all retry attempts were finally exhausted, this method will re-throw the 
            original exception that was thrown by the executable <paramref name="action"/> during the last retry attempt.
            </summary>
            <typeparam name="TResult">The type of result expected from the executable action.</typeparam>
            <param name="action">A delegate representing the executable action which returns the result of type <typeparamref name="TResult"/>.</param>
            <param name="retryingAction">The optional action that gets invoked whenever a transient condition is encountered.</param>
            <returns>The result from the action if it was executed successfully.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.ExecuteAction``1(System.Func{``0},System.Action{System.Exception},System.Action{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Repetitively executes the specified <paramref name="action"/> while it satisfies the current retry policy  and returns a result if the action
            completed successfully. If the action was continuously failing and all retry attempts were finally exhausted, this method will invoke the 
            specified <paramref name="faultHandler"/> delegate. If no fault handler was provided, this method will re-throw the original exception that 
            was thrown by the executable <paramref name="action"/> during the last retry attempt.
            </summary>
            <typeparam name="TResult">The type of result expected from the executable action.</typeparam>
            <param name="action">A delegate representing the executable action which returns the result of type <typeparamref name="TResult"/>.</param>
            <param name="faultHandler">The fault handler delegate that will be invoked if the action cannot be successfully invoked despite retry attempts.</param>
            <param name="retryingAction">The optional action that gets invoked whenever a transient condition is encountered.</param>
            <returns>The result from the action if it was executed successfully.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.ExecuteAction(System.Action{System.AsyncCallback},System.Action{System.IAsyncResult},System.Action{System.Exception},System.Action{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Repetitively executes the specified asynchronous <paramref name="action"/> while it satisfies the current retry policy.
            </summary>
            <param name="action">A delegate representing the executable action that must invoke an asynchronous operation and return its <see cref="T:System.IAsyncResult"/>.</param>
            <param name="callback">The callback delegate that will be triggered when the main asynchronous operation completes.</param>
            <param name="faultHandler">The fault handler delegate that will be invoked if the operation cannot be successfully completed despite retry attempts.</param>
            <param name="retryingAction">The optional action that gets invoked whenever a transient condition is encountered.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Subscribe(System.IObserver{System.Exception})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to all transient faults detected by the error detection strategy used by this retry policy.
            The observer will only be notified upon encountering a transient condition. If a fault has not been detected as transient, the retry policy will
            relay the corresponding exception to the caller and will not notify the observer.
            </summary>
            <param name="observer">The object that will be receiving notifications about transient faults.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Subscribe(System.IObserver{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to all transient faults detected by the error detection strategy used by this retry policy.
            The observer will only be notified upon encountering a transient condition. If a fault has not been detected as transient, the retry policy will
            relay the corresponding exception to the caller and will not notify the observer.
            </summary>
            <param name="observer">The object that will be receiving notifications about transient faults.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
            <remarks>
            <para>This overload is useful when a consumer is interested in receiving some extra information about transient faults such as the number of retry
            attempts occurred thus far, as well as the time delay during which the policy will wait before retrying the failed operation.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicy.OnRetrying(System.Int32,System.Exception,System.TimeSpan,System.Action{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Notifies the subscribers whenever a retry condition is encountered.
            </summary>
            <param name="retryCount">The current retry attempt count.</param>
            <param name="exception">The exception which caused the retry conditions to occur.</param>
            <param name="delay">The delay indicating how long the current thread will be suspended for before the next iteration will be invoked.</param>
            <param name="retryingAction">The user-defined action that gets invoked whenever a retry condition is encountered.</param>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.RetryPolicy.Retrying">
            <summary>
            An instance of a callback delegate that will be invoked whenever a retry condition is encountered.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.RetryPolicy.FastFirstRetry">
            <summary>
            Gets or sets a flag indicating whether or not the very first retry attempt will be made immediately
            whereas the subsequent retries will remain subject to retry interval.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.RetryPolicy.ErrorDetectionStrategy">
            <summary>
            Gets the instance of the error detection strategy.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.RetryPolicy.ShouldRetry">
            <summary>
            Gets the implementation of the callback delegate used by the retry policy to determine the application's behavior whenever an exception is encountered.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.RetryPolicy.TransientErrorIgnoreStrategy">
            <summary>
            Implements a strategy that ignores any transient errors.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.RetryPolicy.TransientErrorCatchAllStrategy">
            <summary>
            Implements a strategy that treats all exceptions as transient errors.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.ExtensionMethods">
            <summary>
            Provides a set of extension methods that supplement various .NET Framework classes with value-add functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.ReadBuffered(System.IO.BinaryReader,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads the specified number of bytes from the stream, starting from a specified point in the byte array. Ensures that the number of bytes 
            read from the stream will match the specified count unless the stream is empty or doesn't contain the expected amount of data.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> instance providing access to the data stream.</param>
            <param name="buffer">The buffer to read data into.</param>
            <param name="index">The starting point in the buffer at which to begin reading into the buffer.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>The number of bytes read into buffer. This might be less than the number of bytes requested if that many bytes are not available, or it might be zero if the end of the stream is reached.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.FindInnerException``1(System.Exception)">
            <summary>
            Verifies whether the specified exception object contains an inner exception of the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the inner exception to look for.</typeparam>
            <param name="ex">The exception object to be inspected.</param>
            <returns>The instance of the inner exception of the specified type <typeparamref name="T"/> if found, otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.Retry``1(System.IObservable{``0},Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Repeats the source observable sequence as per the specified retry policy.
            </summary>
            <typeparam name="TSource">The type of the source this sequence observes.</typeparam>
            <param name="source">Observable sequence to repeat until it successfully terminates.</param>
            <param name="retryPolicy">The retry policy defining how the observable sequence will be repeated.</param>
            <returns>A new observable sequence producing the elements of the given sequence.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.Retry``1(System.IObservable{``0},Microsoft.Experience.CloudFx.Framework.RetryPolicy,System.Action{Microsoft.Experience.CloudFx.Framework.RetryingEventArgs})">
            <summary>
            Repeats the source observable sequence as per the specified retry policy. Allows specifying a custom action which will be invoked whenever a retry condition is encountered.
            </summary>
            <typeparam name="TSource">The type of the source this sequence observes.</typeparam>
            <param name="source">Observable sequence to repeat until it successfully terminates.</param>
            <param name="retryPolicy">The retry policy defining how the observable sequence will be repeated.</param>
            <param name="retryingAction">The custom action that gets invoked whenever a retry condition is encountered.</param>
            <returns>A new observable sequence producing the elements of the given sequence.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.OnError``1(System.IObservable{``0},System.Action{System.Exception})">
            <summary>
            Enriches the original observable sequence with custom error handling capabilities provided by the specified <paramref name="handler"/> catching all exceptions.
            </summary>
            <typeparam name="TSource">The type of the source this sequence observes.</typeparam>
            <param name="source">Observable sequence which the error handling behavior provided by this extension method will apply to.</param>
            <param name="handler">The action receiving notifications about all exceptions occurring while processing the observable sequence.</param>
            <returns>A new observable sequence enriched with additional error handling capabilities provided by this extension method.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.OnError``2(System.IObservable{``0},System.Action{``1})">
            <summary>
            Enriches the original observable sequence with custom error handling capabilities provided by the specified <paramref name="handler"/> catching specific exceptions
            of type <typeparamref name="TException"/>.
            </summary>
            <typeparam name="TSource">The type of the source this sequence observes.</typeparam>
            <typeparam name="TException">The type of exception the specified <paramref name="handler"/> will be catching.</typeparam>
            <param name="source">Observable sequence which the error handling behavior provided by this extension method will apply to.</param>
            <param name="handler">The action receiving notifications about exceptions of type <typeparamref name="TException"/> occurring while processing the observable sequence.</param>
            <returns>A new observable sequence enriched with additional error handling capabilities provided by this extension method.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.OnError``2(System.IObservable{``0},System.Action{System.Reactive.Notification{``0},``1})">
            <summary>
            Enriches the original observable sequence with custom error handling capabilities provided by the specified <paramref name="handler"/> catching specific exceptions
            of type <typeparamref name="TException"/>.
            </summary>
            <typeparam name="TSource">The type of the source this sequence observes.</typeparam>
            <typeparam name="TException">The type of exception the specified <paramref name="handler"/> will be catching.</typeparam>
            <param name="source">Observable sequence which the error handling behavior provided by this extension method will apply to.</param>
            <param name="handler">The action receiving notifications about exceptions of type <typeparamref name="TException"/> occurring while processing the observable sequence.</param>
            <returns>A new observable sequence enriched with additional error handling capabilities provided by this extension method.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ExtensionMethods.EmptyAsNull(System.String)">
            <summary>
            Normalizes the specified <paramref name="value"/> into either a null reference or a non-empty string depending on the value provided.
            </summary>
            <param name="value">The string value to be normalized. An empty string will result in this method returning a null object reference.</param>
            <returns>Either a null reference if the specified string is null, empty or consists only of whitespaces; otherwise the original value.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.ReaderWriterLockSlimExtensions">
            <summary>
            Provides a set of extension methods that supplement the <see cref="T:System.Threading.ReaderWriterLockSlim"/> class with value-add functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ReaderWriterLockSlimExtensions.PerformUsingReadLock(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            Executes the specified action inside a read lock which is guaranteed to be reliably released upon completing the action.
            </summary>
            <param name="rwLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> instance which this method extends.</param>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ReaderWriterLockSlimExtensions.PerformUsingReadLock``1(System.Threading.ReaderWriterLockSlim,System.Func{``0})">
            <summary>
            Executes the specified function inside a read lock which is guaranteed to be reliably released upon completing the execution.
            </summary>
            <typeparam name="T">The type of the result returned by the executable function.</typeparam>
            <param name="rwLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> instance which this method extends.</param>
            <param name="action">The function to execute.</param>
            <returns>The result returned by the executable function.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ReaderWriterLockSlimExtensions.PerformUsingWriteLock(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            Executes the specified action inside a write lock which is guaranteed to be reliably released upon completing the action.
            </summary>
            <param name="rwLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> instance which this method extends.</param>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ReaderWriterLockSlimExtensions.PerformUsingWriteLock``1(System.Threading.ReaderWriterLockSlim,System.Func{``0})">
            <summary>
            Executes the specified function inside a write lock which is guaranteed to be reliably released upon completing the execution.
            </summary>
            <typeparam name="T">The type of the result returned by the executable function.</typeparam>
            <param name="rwLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> instance which this method extends.</param>
            <param name="action">The function to execute.</param>
            <returns>The result returned by the executable function.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ReaderWriterLockSlimExtensions.PerformUsingUpgradeableReadLock(System.Threading.ReaderWriterLockSlim,System.Action)">
            <summary>
            Executes the specified action inside an upgradeable read lock which is guaranteed to be reliably released upon completing the action.
            </summary>
            <param name="rwLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> instance which this method extends.</param>
            <param name="action">The action to execute.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.ReaderWriterLockSlimExtensions.PerformUsingUpgradeableReadLock``1(System.Threading.ReaderWriterLockSlim,System.Func{``0})">
            <summary>
            Executes the specified function inside an upgradeable read lock which is guaranteed to be reliably released upon completing the execution.
            </summary>
            <typeparam name="T">The type of the result returned by the executable function.</typeparam>
            <param name="rwLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> instance which this method extends.</param>
            <param name="action">The function to execute.</param>
            <returns>The result returned by the executable function.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.XmlWriterExtensionMethods">
            <summary>
            Provides a set of extension methods that supplement the <see cref="T:System.Xml.XmlWriter"/> class with value-add functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.XmlWriterExtensionMethods.WriteResponseStartElement(System.Xml.XmlWriter,System.String,System.String,System.String)">
            <summary>
            Writes the specified start tag for a response message and associates it with the given namespace and prefix.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> instance which this method extends.</param>
            <param name="prefix">The namespace prefix of the element.</param>
            <param name="localName">The local name of the element.</param>
            <param name="ns">The namespace URI to associate with the element.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.XmlWriterExtensionMethods.WriteResultStartElement(System.Xml.XmlWriter,System.String,System.String,System.String)">
            <summary>
            Writes the specified start tag for a result message and associates it with the given namespace and prefix.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> instance which this method extends.</param>
            <param name="prefix">The namespace prefix of the element.</param>
            <param name="localName">The local name of the element.</param>
            <param name="ns">The namespace URI to associate with the element.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.TimeSpanExtensionMethods">
            <summary>
            Provides a set of extension methods that supplement the <see cref="T:System.TimeSpan"/> class with value-add functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.TimeSpanExtensionMethods.Coalesce(System.TimeSpan,System.TimeSpan)">
            <summary>
            Returns the first non-default non-zero <see cref="T:System.TimeSpan"/> value from the given set of two arguments.
            </summary>
            <param name="first">The first <see cref="T:System.TimeSpan"/> value.</param>
            <param name="second">The second <see cref="T:System.TimeSpan"/> value.</param>
            <returns>The first <see cref="T:System.TimeSpan"/> value out of the two arguments that doesn't represent either a default, zero or minimum value for the given type.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.CollectionExtensionMethods">
            <summary>
            Provides a set of extension methods that supplement various collection-aware classes with value-add functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.CollectionExtensionMethods.Clear``1(System.Collections.Concurrent.ConcurrentBag{``0})">
            <summary>
            Clears the current collection.
            </summary>
            <typeparam name="T">The type of the elements to be stored in the collection.</typeparam>
            <param name="collection">The collection this method extends.</param>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.RetryPolicyFactory">
            <summary>
            Provides a factory class for instantiating application-specific retry policies described in the application configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicyFactory.GetDefaultSqlConnectionRetryPolicy">
            <summary>
            Returns the default retry policy dedicated to handling transient conditions with SQL connections.
            </summary>
            <returns>The retry policy for SQL connections, or the default <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.NoRetry"/> policy if no retry policy definition assigned to SQL connections was found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicyFactory.GetDefaultSqlCommandRetryPolicy">
            <summary>
            Returns the default retry policy dedicated to handling transient conditions with SQL commands.
            </summary>
            <returns>The retry policy for SQL commands, or the default <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.NoRetry"/> policy if no retry policy definition for SQL commands was found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.RetryPolicyFactory.GetRetryPolicy``1(System.String)">
            <summary>
            Returns an instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.RetryPolicy"/> object initialized for a given policy name.
            </summary>
            <typeparam name="T">The type implementing the <see cref="T:Microsoft.Experience.CloudFx.Framework.ITransientErrorDetectionStrategy"/> interface which is responsible for detecting transient conditions.</typeparam>
            <param name="policyName">The name under which a retry policy definition is registered in the application configuration.</param>
            <returns>The retry policy initialized from the specified policy definition, or the default <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.NoRetry"/> policy if the specified policy definition was found.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.BlobRequestOption">
            <summary>
            Represents a set of behavior options for a specific request related to Windows Azure storage blobs.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.BlobRequestOption.NamePrefix">
            <summary>
            Gets or sets a prefix that will be used when looking for blob whose names begin with the specified prefix.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle">
            <summary>
            This class is used to synchronize activities across multiple machines.  
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.leaseRenewInterval">
            <summary>
            The duration to wait between attempts to renew the lease for long running events.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.defaultPollInterval">
            <summary>
            How many ms to delay between each time the lease is polled.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.blob">
            <summary>
            The Windows Azure storage blob that will be used as the target of leasing.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.leasePollInterval">
            <summary>
            The interval to wait between checks of the lease status.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.currentLeaseId">
            <summary>
            The id of the lease currently held by the process.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.isDisposed">
            <summary>
            True if the object has already been disposed.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.leaseTimer">
            <summary>
            The timer that is used to request a lease on the blob.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.controlLock">
            <summary>
            This object is used to synchronize access to the control methods.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String)">
            <summary>
            Initializes a new instance of the BlobWaitHandle class.  Initializes the wait handle with the container and default lease information.  Retries will be used with the default poll interval of
            100 milliseconds.
            </summary>
            <param name="storageAccount">The storage account that contains the blob used for synchronization control.</param>
            <param name="containerName">The container that the blob is stored in.</param>
            <param name="blobName">The name of the blob that is used for locking.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the BlobWaitHandle class.  Initializes the wait handle with the container and default lease information.
            </summary>
            <param name="storageAccount">The storage account that contains the blob used for synchronization control.</param>
            <param name="containerName">The container that the blob is stored in.</param>
            <param name="blobName">The name of the blob that is used for locking.</param>
            <param name="leasePollInterval">The interval to wait between checking the lease status of the synchronization object.  This must be a positive value less than or equal to 2,147,483,647 milliseconds.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,System.TimeSpan,System.Boolean)">
            <summary>
            Initializes a new instance of the BlobWaitHandle class.  Initializes the wait handle with the container and default lease information.
            </summary>
            <param name="storageAccount">The storage account that contains the blob used for synchronization control.</param>
            <param name="containerName">The container that the blob is stored in.</param>
            <param name="blobName">The name of the blob that is used for locking.</param>
            <param name="leasePollInterval">The interval to wait between checking the lease status of the synchronization object.  This must be a positive value less than or equal to 2,147,483,647 milliseconds.</param>
            <param name="useRetries">True if retries on the cloud blob should be used.  The retry mechanism is 3 attempts with a 3 second exponential back off policy.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the BlobWaitHandle class.  Initializes the wait handle with the container and default lease information.
            </summary>
            <param name="storageAccount">The storage account that contains the blob used for synchronization control.</param>
            <param name="containerName">The container that the blob is stored in.</param>
            <param name="blobName">The name of the blob that is used for locking.</param>
            <param name="leasePollInterval">The interval to wait between checking the lease status of the synchronization object.  This must be a positive value less than or equal to 2,147,483,647 milliseconds.</param>
            <param name="useRetries">True if retries on the cloud blob should be used.  The retry mechanism is 3 attempts with a 3 second exponential back off policy.</param>
            <param name="checkIfSynchronizationObjectExists">true if the check for the existence of the synchronization object should exist.  The check require a round trip to Azure Blob Storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Finalize">
            <summary>
            Finalizes an instance of the BlobWaitHandle class.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Dispose">
            <summary>
            Dispose was called, cleanup the resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.WaitOne">
            <summary>
            Wait until the lock is released to continue.  The time to lock may be increased if blob retries are used and are active.  All errors will be suppressed returning false if one occurs.
            </summary>
            <returns>Returns true if the blob was no longer leased.  False is returned if the request times out.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.WaitOne(System.Int32)">
            <summary>
            Wait until the lock is released or the timeout expires to continue.  This wait may be longer if retries are required as control is not returned.  If the timeout parameter
            is set to -1 it will be considered an infinite wait.
            </summary>
            <param name="timeout">The number of milliseconds to wait for the lock to be cleared.  This value must be between -1 and 2,147,483,647 milliseconds.</param>
            <returns>Returns true if the blob lease is acquired successfully.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.WaitOne(System.TimeSpan)">
            <summary>
            Wait until the lock is released or the timeout expires to continue.  This wait may be longer if retries are required as control is not returned.  If the timeout parameter
            is set to -1 milliseconds it will be considered an infinite wait.
            </summary>
            <param name="timeout">A TimeSpan to wait or continue if the lock is not released.  This value must be between -1 and 2,147,483,647 milliseconds.</param>
            <returns>Returns true if the blob was no longer leased.  False is returned if the request times out.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Reset">
            <summary>
            Acquires a lease on the blob.
            </summary>
            <returns>True if the lock was acquired, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Reset(System.TimeSpan)">
            <summary>
            Waits for up to the timeout specified to acquire the lease.  This wait may be longer if retries are required as control is not returned.  If the timeout is set to -1 
            milliseconds it will be considered and infinite wait.
            </summary>
            <param name="timeout">The maximum duration to try and acquire the lease.  The timeout must be between -1 and 2,147,483,647 milliseconds.</param>
            <returns>True if the lease was acquired, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Reset(System.Int32)">
            <summary>
            Waits up to the number of milliseconds specified to acquire the lease.  This wait may be longer if retries are required as control is not returned.  If the timeout is set to -1 
            milliseconds it will be considered and infinite wait.
            </summary>
            <param name="timeout">The maximum duration in milliseconds to try and acquire the lease.  The timeout must be between -1 and 2,147,483,647 milliseconds.</param>
            <returns>True if the lease was acquired, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Set">
            <summary>
            Releases the lock on the object and allows waiting threads to continue.
            </summary>
            <returns>True if the lock was released successfully, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Set(System.Boolean)">
            <summary>
            Releases the lock on the object and allows waiting threads to continue.  When force is true this will reset the the lock even if the lease was not previously held by this object.
            </summary>
            <param name="force">true to force the release of the lock (lease on the blob), false to only release if this object held a lock originally.</param>
            <returns>True if the lock was released successfully.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.Dispose(System.Boolean)">
            <summary>
            Cleans up resources and removes the object the finalization queue.
            </summary>
            <param name="isDisposing">True if the method is being called from the Dispose method, false otherwise.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.StartRenewTimer">
            <summary>
            Start the lease renewal timer, ensuring that it is first reset to maximize the time before the initial server query.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.StopRenewTimer">
            <summary>
            Stop the lease renewal timer.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.LeaseTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called every interval when the lease must be renewed.  This will attempt to renew the lease 3 times in the event of an error.
            </summary>
            <param name="sender">The timer object that called the method.</param>
            <param name="e">Associated event arguments</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.InitializeSynchronizationObject(Microsoft.WindowsAzure.Storage.CloudStorageAccount,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initialize the synchronization blob that is required.
            </summary>
            <param name="storageAccount">The CloudStorageAccount used to create the synchronization object.</param>
            <param name="containerName">The name of the container that the synchronization blob is contained in.</param>
            <param name="blobName">The name of the blob to use for synchronization.</param>
            <param name="useRetries">true to use exponential retries when accessing the blob and container.  False will not use any retries.</param>
            <param name="checkIfSynchronizationObjectExists">true if the check for the existence of the synchronization object should exist.  The check require a round trip to Azure Blob Storage.</param>
        </member>
        <member name="E:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.onRenewFailure">
            <summary>
            This event is called when a failure to renew the lease occurs after it is initially acquired.  
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.BlobWaitHandle.ErrorRenewingLease">
            <summary>
            The method signature used to notify a consumer that an error occurred and after the retries the blob lease could still not be renewed.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation">
            <summary>
            Represents a location of a blob in the Azure storage infrastructure.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.Unknown">
            <summary>
            Represents an unknown, non-discoverable location.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation"/> object using the specified location settings.
            </summary>
            <param name="storageAccount">The name of the storage account on which the blob is located.</param>
            <param name="containerName">The name of the container in which the blob is located.</param>
            <param name="blobName">The name of the blob.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation"/> object using the specified location settings.
            </summary>
            <param name="storageAccount">The name of the storage account on which the blob is located.</param>
            <param name="containerName">The name of the container in which the blob is located.</param>
            <param name="blobName">The name of the blob.</param>
            <param name="eTag">The known eTag of the blob.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.IsUnknown(Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation)">
            <summary>
            Determines whether or not the specified location is null or is considered as unknown.
            This method does not check if the blob is actually present in the given location.
            </summary>
            <param name="location">The location to be validated.</param>
            <returns>A flag indicating whether or not the specified location is null or is considered as unknown</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.StorageAccount">
            <summary>
            The name of the storage account on which the blob is located.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.ContainerName">
            <summary>
            The name of the container in which the blob is located.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.BlobName">
            <summary>
            The name of the blob.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.ETag">
            <summary>
            The optional eTag of the blob.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLocation.IsDiscoverable">
            <summary>
            Indicates whether or not the blob location is discoverable.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions">
            <summary>
            Provides value-add extension methods related to leasing of the blobs associated with the <seealso cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob"/> class.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.DefaultServerTimeout">
            <summary>
            The number of seconds that the server will timeout if not overridden.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.HeaderNameLeaseId">
            <summary>
            The name of the header that stores the lease id.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.HeaderNameLeaseStatus">
            <summary>
            The name of the header that stores the lease status.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.LeaseStatusLocked">
            <summary>
            The text representation that indicates a lease is already existing on a blob.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.AcquireLease(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,System.String@)">
            <summary>
            This method is used to acquire a lease on a blob.
            </summary>
            <param name="blob">The blob to acquire the lease for.</param>
            <param name="leaseId">Outputs the leaseId when the action is successful, null otherwise.</param>
            <returns>A LeaseRequestStatusCode used to determine if the action was successful.  An unknown failure indicates that the HTTP response was not "Created".  If a status code
            of AlreadyLeased is returned a lease already exists on the blob so it could not be acquired.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.AcquireLease(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,System.Nullable{System.TimeSpan},System.String@)">
            <summary>
            This method is used to acquire a lease on a blob.
            </summary>
            <param name="blob">The blob to acquire the lease for.</param>
            <param name="leaseDuration">The length of time that the lease will be acquired for or 60 seconds by default.  60 seconds is used for backwards compatibility.</param>
            <param name="leaseId">Outputs the leaseId when the action is successful, null otherwise.</param>
            <returns>A LeaseRequestStatusCode used to determine if the action was successful.  An unknown failure indicates that the HTTP response was not "Created".  If a status code
            of AlreadyLeased is returned a lease already exists on the blob so it could not be acquired.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.ReleaseLease(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,System.String)">
            <summary>
            This method is used to release a previously acquired lease based on the existingLeaseId.
            </summary>
            <param name="blob">The blob for which the lease is to be released.</param>
            <param name="leaseId">The lease id that was previously obtained from the AcquireLease call.</param>
            <returns>Success if successful, Conflict if there was a failure due to releasing a blob with no active lease or one that does not match the id provided.  UnknownFailure status
            could be due to an invalid http response code (other than OK).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.TerminateLease(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob)">
            <summary>
            This method is used to terminate (break) an existing lease.
            </summary>
            <param name="blob">The blob for which the lease is to be broken.</param>
            <returns>Success if the lease was broken successfully.  Conflict will be returned if the lease could not be broken because the blob does not have an active lease.  A return value of
            UnknownFailure may indicate an invalid HTTP response (other than Accepted).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.RenewLease(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,System.String)">
            <summary>
            This method is used to renew a lease on a blob.
            </summary>
            <param name="blob">The blob to renew the lease for.</param>
            <param name="leaseId">The lease id from a previously acquired lease.</param>
            <returns>Success if the lease was renewed successfully.  Conflict will be returned if the lease being renewed ahs already been broken but not yet expired or there is no matching or 
            active lease on the blob.  Unknown Failure may indicate an invalid Http code being returned (not OK).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.RenewLease(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            This method is used to renew a lease on a blob.
            </summary>
            <param name="blob">The blob to renew the lease for.</param>
            <param name="leaseDuration">The length of time that the lease will be acquired for or 60 seconds by default.  60 seconds is used for backwards compatibility.</param>
            <param name="leaseId">The lease id from a previously acquired lease.</param>
            <returns>Success if the lease was renewed successfully.  Conflict will be returned if the lease being renewed ahs already been broken but not yet expired or there is no matching or 
            active lease on the blob.  Unknown Failure may indicate an invalid Http code being returned (not OK).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.IsLeased(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob)">
            <summary>
            This method checks to see if the current blob is leased.
            </summary>
            <param name="blob">The instance of the blob that the query is for.</param>
            <returns>True if the blob is currently leased, false if not.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.PerformLeaseAction(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,Microsoft.WindowsAzure.Storage.Blob.LeaseAction,System.Nullable{System.TimeSpan},System.String@)">
            <summary>
            This method performs acquire, break, renew and release leasing operations on a blob.
            </summary>
            <param name="blob">The blob that the leasing action is to be performed on.</param>
            <param name="leaseAction">The type of leasing action to be performed (ex. release, renew).</param>
            <param name="leaseDuration">The length of time that the lease will be acquired for or 60 seconds by default.  60 seconds is used for backwards compatibility.</param>
            <param name="leaseId">The lease id to be impacted for renew and release commands.  For acquire this will be populated with the acquired lease id.  Break actions will not use
            this parameter.</param>
            <returns>A LeaseRequestStatusCode representing the outcome of the operation.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.LeaseRequestStatusCode">
            <summary>
            The enumeration is used to identify the status of the lease request.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.LeaseRequestStatusCode.UnknownFailure">
            <summary>
            There was a failure but the specifics are not known.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.LeaseRequestStatusCode.Success">
            <summary>
            The operation was successfully executed.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.LeaseRequestStatusCode.AlreadyLeased">
            <summary>
            The blob already has an active lease on it.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.LeaseRequestStatusCode.Conflict">
            <summary>
            The lease action could not be performed due to a conflict.  
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.BlobLeaseStatus">
            <summary>
            Used to indicate the status of a lease on a blob.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.BlobLeaseStatus.Unknown">
            <summary>
            Lease status could not be confirmed typically due to an error.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.BlobLeaseStatus.Leased">
            <summary>
            The blob is leased already.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobLockingExtensions.BlobLeaseStatus.NotLeased">
            <summary>
            The blob is not leased.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobEntityMetadataResolver`1">
            <summary>
            This type manages the reflection of known properties from cloud blob entities. 
            </summary>
            <typeparam name="TBlob">The type that the resolver should be created for.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobEntityMetadataResolver`1.GetBlobName(`0)">
            <summary>
            Retrieves the blob name if it is supplied in the specified <paramref name="blob"/>, otherwise returns null.
            </summary>
            <param name="blob">The entity that represents a blob to be queried.</param>
            <returns>Returns the blob name (if set), otherwise returns null.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobEntityMetadataResolver`1.GetContainerName(`0)">
            <summary>
            Retrieves the blob's container name if it is supplied in the specified <paramref name="blob"/>, otherwise returns null.
            </summary>
            <param name="blob">The entity that represents a blob to be queried.</param>
            <returns>Returns the blob's container name (if set), otherwise returns null.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobEntityMetadataResolver`1.GetLeaseId(`0)">
            <summary>
            Retrieves the blob's lease ID if it is supplied in the specified <paramref name="blob"/>, otherwise returns null.
            </summary>
            <param name="blob">The entity that represents a blob to be queried.</param>
            <returns>Returns the blob's lease ID (if set), otherwise returns null.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudBlobEntityMetadataResolver`1.GetBlobData(`0)">
            <summary>
            Retrieves the blob's payload if it is supplied in the specified <paramref name="blob"/>, otherwise returns null.
            </summary>
            <param name="blob">The entity that represents a blob to be queried.</param>
            <returns>Returns the blob's payload (if set), otherwise returns null.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription">
            <summary>
            Represents a description of a queue in the Windows Azure storage infrastructure with details like queue name, storage account name, approximate message count.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.Unknown">
            <summary>
            Represents an unknown, non-discoverable queue.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription"/> object with the default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription"/> object with the specified approximate number of items in the specified queue.
            </summary>
            <param name="messageCount">The approximate number of items in the specified queue.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.IsValid(Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription)">
            <summary>
            Determines whether or not the specified queue description is valid, meaning it is not null or not is considered as unknown.
            This method does not check if the queue is actually present in the storage account.
            </summary>
            <param name="queueDescription">The queue description to be validated.</param>
            <returns>A flag indicating whether or not the specified queue description is null or is considered as unknown.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.StorageAccount">
            <summary>
            Gets or sets the name of the storage account on which the queue is located.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.QueueName">
            <summary>
            Gets or sets the name of the queue.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.MessageCount">
            <summary>
            Returns the approximate number of items in the specified queue.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.VisibilityTimeout">
            <summary>
            The visibility timeout (in seconds) indicating when messages should become visible in the queue 
            again if they not consumed and deleted from the queue.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription.IsDiscoverable">
            <summary>
            Indicates whether or not the queue location is discoverable without asserting its physical presence.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent">
            <summary>
            Implements a trigger event indicating that a new workload was put in a queue.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the trigger event indicating that a given queue in the specified account has received a new payload.
            </summary>
            <param name="storageAccount">The name of the storage account on which the queue is located.</param>
            <param name="queueName">The name of the queue on which a new payload was put.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent.#ctor(System.String,System.String,System.Int64,Microsoft.Experience.CloudFx.Framework.Storage.PayloadSizeKind)">
            <summary>
            Initializes a new instance of the trigger event indicating that a given queue in the specified account has received a new payload.
            </summary>
            <param name="storageAccount">The name of the storage account on which the queue is located.</param>
            <param name="queueName">The name of the queue on which a new payload was put.</param>
            <param name="payloadSize">The a size of the queue's payload (e.g. the size of a message or the number of messages).</param>
            <param name="payloadSizeKind">The kind of payload size.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent.StorageAccount">
            <summary>
            Returns the name of the storage account on which the queue is located.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent.QueueName">
            <summary>
            Returns a name of the queue where the payload was put.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent.PayloadSize">
            <summary>
            Returns a size of the queue's payload (e.g. the size of a message or the number of messages).
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent.PayloadSizeKind">
            <summary>
            Returns the kind of payload size.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.PayloadSizeKind">
            <summary>
            Defines a particular kind of payload size that can be sent in the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueWorkDetectedEvent"/> events.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.PayloadSizeKind.MessageCount">
            <summary>
            Payload size represents the number of messages.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.PayloadSizeKind.MessageSize">
            <summary>
            Payload size represents the size of an individual message.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudStorageEntitySerializer">
            <summary>
            Provides a default implementation of ICloudStorageEntitySerializer which performs serialization and 
            deserialization of storage objects such as queue items, blobs and table entries.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudStorageEntitySerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serializes the object to the specified stream.
            </summary>
            <param name="instance">The object instance to be serialized.</param>
            <param name="target">The destination stream into which the serialized object will be written.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CloudStorageEntitySerializer.Deserialize(System.IO.Stream,System.Type)">
            <summary>
            Deserializes the object from specified data stream.
            </summary>
            <param name="source">The source stream from which serialized object will be consumed.</param>
            <param name="type">The type of the object that will be deserialized.</param>
            <returns>The deserialized object instance.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob">
            <summary>
            Represents a base class for an untyped blob composed along with its attributes.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob.#ctor(System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob"/> object with the specified payload and optional attributes.
            </summary>
            <param name="blobName">The blob's name.</param>
            <param name="blobData">The optional blob's payload.</param>
            <param name="attributes">The optional attributes to be associated with the blob.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob.BlobName">
            <summary>
            Returns the blob's name.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob.ContainerName">
            <summary>
            Returns the blob's container name.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob.LeaseId">
            <summary>
            Returns the ID of the lease either proposed or acquired on the blob.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob.Attributes">
            <summary>
            Returns the blob's attributes.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob.BlobData">
            <summary>
            Returns the untyped blob's payload.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob.BlobDataType">
            <summary>
            Returns the type of the blob's payload.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob`1">
            <summary>
            Represents a strongly-typed blob of the specified type <typeparamref name="T"/> composed along with its attributes.
            </summary>
            <typeparam name="T">The type of the blob's payload.</typeparam>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobEntity`1">
            <summary>
            This contract represents a generic strongly typed blob entity in the Windows Azure blob storage. 
            </summary>
            <typeparam name="T">The type of data carried by the blob entity</typeparam>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobEntity`1.BlobName">
            <summary>
            Gets or sets the name of the blob.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobEntity`1.ContainerName">
            <summary>
            Gets or sets the name of the container holding the blob.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobEntity`1.BlobData">
            <summary>
            Gets or sets the data of the blob.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob`1.#ctor(System.String,`0,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob`1"/> object with the specified payload and optional properties.
            </summary>
            <param name="blobName">The blob's name.</param>
            <param name="blobData">The optional blob's payload.</param>
            <param name="attributes">The optional attributes to be associated with the blob.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob`1.BlobData">
            <summary>
            Returns the strongly-typed blob's payload.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob`1.BlobDataType">
            <summary>
            Returns the type of the blob's payload.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions">
            <summary>
            Represents a set of behavior options for a specific request related to Windows Azure storage blob containers.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions.ListingDetails">
            <summary>
            Gets or sets the level of details that will be included when listing the containers in this storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions.NamePrefix">
            <summary>
            Gets or sets a prefix that will be used when looking for containers whose names begin with the specified prefix.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ExcludeAttribute">
            <summary>
            Provides a declarative mechanism for excluding select properties from table entities.
            <para>The common use case for this attribute would be to exclude computed properties. For example, the developer may want to expose the PartitionKey to the rest of the 
            application under a different name to reflect its business meaning. In this case, the developer will create a business domain-specific property that gets and sets the 
            PartitionKey value, and is decorated with <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ExcludeAttribute"/> so that it doesn't get persisted to the table storage.</para>
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods">
            <summary>
            Provides value-add extension methods for various components in the <seealso cref="N:Microsoft.Experience.CloudFx.Framework.Storage"/> namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Put``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage,System.String,System.String,``0,System.Boolean)">
            <summary>
            Synchronously puts the specified blob into the specified storage container. If the blob with the same name already exists in the target container, 
            the specified overwrite behavior will be applied.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blobStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage"/> for which the extension method will be invoked.</param>
            <param name="containerName">The target blob container name into which a blob will be stored.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <param name="blobData">The blob's payload.</param>
            <param name="overwrite">The optional flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>True if the blob was successfully put into the specified container, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.PutAsync``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage,System.String,System.String,``0,System.Boolean)">
            <summary>
            Asynchronously puts the specified blob into the specified storage container. If the blob with the same name already exists in the target container, 
            the specified overwrite behavior will be applied.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blobStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage"/> for which the extension method will be invoked.</param>
            <param name="containerName">The target blob container name into which a blob will be stored.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <param name="blobData">The blob's payload.</param>
            <param name="overwrite">The optional flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Put``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage,System.String,System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Synchronously puts a collection of blobs into the specified storage container. Blob names will be auto-generated and initialized to an unique <see cref="T:System.Guid"/> value.
            If the blob with the same name already exists in the target container, the specified overwrite behavior will be applied.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blobStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage"/> for which the extension method will be invoked.</param>
            <param name="containerName">The target blob container name into which blobs will be stored.</param>
            <param name="blobs">The collection of blobs to be stored in the underlying storage.</param>
            <param name="overwrite">The optional flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>True if all blobs were successfully put into the specified container, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.PutAsync``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage,System.String,System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            Asynchronously puts a collection of blobs into the specified storage container. Blob names will be auto-generated and initialized to an unique <see cref="T:System.Guid"/> value.
            If the blob with the same name already exists in the target container, the specified overwrite behavior will be applied.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blobStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage"/> for which the extension method will be invoked.</param>
            <param name="containerName">The target blob container name into which a blob will be stored.</param>
            <param name="blobs">The collection of blobs to be stored in the underlying storage.</param>
            <param name="overwrite">The optional flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Delete(Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage,System.String,System.String)">
            <summary>
            Deletes the specified blob identified by the name and container.
            </summary>
            <param name="blobStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage"/> for which the extension method will be invoked.</param>
            <param name="containerName">The target blob container name from which the blob will be deleted.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <returns>True if the blob was deleted, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Put``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String,``0)">
            <summary>
            Synchronously puts a single message on a queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> for which the extension method will be invoked.</param>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="message">The message to be put into a queue.</param>
            <returns>True if the message was successfully put on the specified queue, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Put``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Synchronously puts a collection of message on the specified queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> for which the extension method will be invoked.</param>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="messages">The collection of message to be stored in the queue.</param>
            <returns>True if all message were successfully put on the specified queue, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.PutAsync``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String,``0)">
            <summary>
            Asynchronously puts a single message on the specified queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> for which the extension method will be invoked.</param>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="message">The message to be put into a queue.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.PutAsync``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Asynchronously puts a collection of messages on the specified queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> for which the extension method will be invoked.</param>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="messages">The collection of messages to be put into a queue.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Get``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String)">
            <summary>
            Retrieves a single message from the specified queue and applies the default visibility timeout.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> for which the extension method will be invoked.</param>
            <param name="queueName">The name of the source queue.</param>
            <returns>An instance of the object that has been fetched from the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Get``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String,System.Int32)">
            <summary>
            Gets a collection of messages from the specified queue and applies the default visibility timeout.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> for which the extension method will be invoked.</param>
            <param name="queueName">The name of the source queue.</param>
            <param name="count">The number of messages to retrieve.</param>
            <returns>The list of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Get``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String,System.Int32,System.TimeSpan)">
            <summary>
            Gets a collection of messages from the specified queue and applies the specified visibility timeout.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> for which the extension method will be invoked.</param>
            <param name="queueName">The name of the source queue.</param>
            <param name="count">The number of messages to retrieve.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The list of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Add``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.IObservable{``0})">
            <summary>
            Adds the entities returned by the specified provider into the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table into which the entities will be added.</param>
            <param name="provider">The provider supplying the entities to be added into the table.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Add``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Adds the specified collection of entities into the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table into which the specified entities will be added.</param>
            <param name="entities">The collection of entities to be added into the table.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>True if all the entities have been successfully added, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Update``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,``0)">
            <summary>
            Updates the specified entity stored in the table by replacing all properties with the properties taken from the specified entity.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table containing the entity to be updated.</param>
            <param name="entity">The instance of the entity to be updated.</param>
            <returns>True if the entity has been successfully updated, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Update``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.IObservable{``0})">
            <summary>
            Updates the entities returned by the specified provider in the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table in which the entities will be updated.</param>
            <param name="provider">The provider supplying the entities to be updated.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Update``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
            <summary>
            Updates the specified collection of entities stored in the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table containing the entity to be updated.</param>
            <param name="entities">The collection of entities to be updated.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entities, or merge the entity's properties with the already existing ones.</param>
            <returns>True if all the entities have been successfully updated (or did not exist anyway), otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Upsert``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.IObservable{``0},System.Boolean)">
            <summary>
            Enumerates through the entities returned by the specified provider and updates each entity if it already exists, or inserts a new entity if it doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage swhen an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario.
            </summary>
            <remarks>
            <para>The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.</para>
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table containing the entities.</param>
            <param name="provider">The provider supplying the entities to be either updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Upsert``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.Collections.Generic.IEnumerable{``0},System.Int32,System.Boolean)">
            <summary>
            Enumerates through the specified collection of entities and updates each entity if it already exists, or inserts a new entity if it doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario.
            </summary>
            <remarks>
            <para>The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.</para>
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table containing the entities.</param>
            <param name="entities">The collection of entities to be either updated or inserted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">The optional flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if all the entities have been successfully updated or inserted, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Delete``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.IObservable{``0})">
            <summary>
            Deletes the entities returned by the specified provider from the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table containing the entities to be deleted.</param>&gt;
            <param name="provider">The provider supplying the entities to be deleted.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Delete``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String,System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Deletes the specified collection of entities stored in the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> for which the extension method will be invoked.</param>
            <param name="tableName">The name of the table containing the entity to be deleted.</param>
            <param name="entities">The collection of entities to be deleted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>True if all the entities have been successfully deleted (or did not exist anyway), otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveExecuteBatch(Microsoft.WindowsAzure.Storage.Table.CloudTable,Microsoft.WindowsAzure.Storage.Table.TableBatchOperation,Microsoft.WindowsAzure.Storage.Table.TableRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)">
            <summary>
            Returns an observable object representing an asynchronous operation that executes a batch operation on a table as an atomic operation.
            </summary>
            <param name="table">The <see cref="T:Microsoft.WindowsAzure.Storage.Table.CloudTable"/> object this method extends.</param>
            <param name="batch">The object representing a batch of operations to execute on the table.</param>
            <param name="options">The optional object that specifies execution options, such as retry policy and timeout settings, for the operation.</param>
            <param name="context">The optional object for tracking the current operation.</param>
            <returns>A enumerable collection that contains the results, in order, of each operation in the specified batch that was executed in the table.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveGetMessages(Microsoft.WindowsAzure.Storage.Queue.CloudQueue,System.Int32,System.TimeSpan)">
            <summary>
            Returns an observable sequence of messages from the specified queue. The returned messages will be invisible to other consumers for the specified visibility timeout.
            </summary>
            <param name="queue">The <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/> object this method extends.</param>
            <param name="messageCount">The number of messages to retrieve.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveAddMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueue,Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Returns an observable object representing an asynchronous operation that puts the specified message on a queue.
            </summary>
            <param name="queue">The <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/> object this method extends.</param>
            <param name="message">The message to be put into a queue.</param>
            <param name="timeToLive">The optional parameter indicating the message time to live (TTL).</param>
            <param name="initialVisibilityDelay">The optional parameter indicating the visibility delay for the message.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
            <remarks>
            <para>The <paramref name="timeToLive"/> parameter specifies how long a message will remain in the queue, from the time it is 
            added to the time it is retrieved and deleted. If a message is not retrieved before the time-to-live interval expires,
            the message is removed from the queue.</para>
            <para>The <paramref name="initialVisibilityDelay"/> parameter specifies the time that the message will be invisible. 
            After the delay expires, the message will become visible. Visibility of a message can be delayed for up to 7 days.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveDeleteMessage(Microsoft.WindowsAzure.Storage.Queue.CloudQueue,Microsoft.WindowsAzure.Storage.Queue.CloudQueueMessage)">
            <summary>
            Returns an observable object representing an asynchronous operation that deletes the specified message from a queue.
            </summary>
            <param name="queue">The <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueue"/> object this method extends.</param>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveListQueuesSegmented(Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient,System.String,Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueListingDetails,System.Nullable{System.Int32},Microsoft.WindowsAzure.Storage.Queue.Protocol.QueueContinuationToken,Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions,Microsoft.WindowsAzure.Storage.OperationContext)">
            <summary>
            Returns an observable object representing an asynchronous operation that returns a result segment containing a collection of queues in the storage account.
            </summary>
            <param name="queueClient">The <see cref="T:Microsoft.WindowsAzure.Storage.Queue.CloudQueueClient"/> object this method extends.</param>
            <param name="prefix">The queue name prefix.</param>
            <param name="queueListingDetails">One of the enumeration values that indicates which details to include in the listing.</param>
            <param name="maxResults">A non-negative integer value that indicates the maximum number of results to be returned at a time, up to the per-operation limit of 5000. If this value is zero, the maximum possible number of results will be returned, up to 5000.</param>
            <param name="currentToken">A continuation token returned by a previous listing operation.</param>
            <param name="options">A <see cref="T:Microsoft.WindowsAzure.Storage.Queue.QueueRequestOptions"/> object that specifies any additional options for the request. Specifying a null value will use the default request options from the associated service client.</param>
            <param name="operationContext">An <see cref="T:Microsoft.WindowsAzure.Storage.OperationContext"/> object that represents the context for the current operation. This object is used to track requests to the storage service, and to provide additional runtime information about the operation.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveUploadFromStream(Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob,System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Returns an observable object representing an asynchronous operation that uploads the content of the specified stream into the page blob.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob"/> object this method extends.</param>
            <param name="source">The source stream from which blob data will be consumed.</param>
            <param name="condition">The optional <see cref="T:Microsoft.WindowsAzure.Storage.AccessCondition"/> object that specifies access conditions to be used for operations against the blob storage.</param>
            <param name="options">The optional <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveUploadFromStream(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.IO.Stream,Microsoft.WindowsAzure.Storage.AccessCondition,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Returns an observable object representing an asynchronous operation that uploads the content of the specified stream into the block blob.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob"/> object this method extends.</param>
            <param name="source">The source stream from which blob data will be consumed.</param>
            <param name="condition">The optional <see cref="T:Microsoft.WindowsAzure.Storage.AccessCondition"/> object that specifies access conditions to be used for operations against the blob storage.</param>
            <param name="options">The optional <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveDownloadToStream(Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob,System.IO.Stream,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Returns an observable object representing an asynchronous operation that downloads the contents of a page blob to a stream,
            using a optional conditional request based on the specified <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/>.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob"/> object this method extends.</param>
            <param name="target">The target stream into which blob data will be written.</param>
            <param name="options">The optional <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveDownloadToStream(Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob,System.IO.Stream,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Returns an observable object representing an asynchronous operation that downloads the contents of a block blob to a stream,
            using a optional conditional request based on the specified <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/>.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudBlockBlob"/> object this method extends.</param>
            <param name="target">The target stream into which blob data will be written.</param>
            <param name="options">The optional <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveFetchAttributes(Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Returns an observable object representing an asynchronous operation that populates the blob's properties and metadata, using a conditional request based on the optional <paramref name="options"/> specified.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.CloudPageBlob"/> object this method extends.</param>
            <param name="options">The optional <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>The object observing the status of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.ObserveSetMetadata(Microsoft.WindowsAzure.Storage.Blob.ICloudBlob,Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions)">
            <summary>
            Sets the meta data of blob.
            </summary>
            <param name="blob">The <see cref="T:Microsoft.WindowsAzure.Storage.Blob.ICloudBlob"/> object this method extends.</param>
            <param name="options">The optional <see cref="T:Microsoft.WindowsAzure.Storage.Blob.BlobRequestOptions"/> object that specifies additional options for the request.</param>
            <returns>Observable object representing an asynchronous operation that sets metadata, using a conditional request based on the optional <paramref name="options"/> specified.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.GetByRowKeyPrefix``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository{``0},System.String,System.String)">
            <summary>
            Gets a collection of entities from the specified table by their optional partition key and row key prefix.
            </summary>
            <typeparam name="T">The entity type which the underlying table storage persists.</typeparam>
            <param name="dataTable">The strongly typed cloud data table object this method extends.</param>
            <param name="partitionKey">The optional table partition key that will enforce the server-side filtering. Pass null to ignore partition key</param>
            <param name="rowKeyPrefix">The optional table row key prefix that will enforce the server-side filtering. Only rows which keys start with this prefix will be returned. Pass null to ignore row key.</param>
            <returns>The LINQ-queryable collection of entities retrieved from the specified table.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Put``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository{``0},``0)">
            <summary>
            Synchronously puts a single message on the queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1"/> for which the extension method will be invoked.</param>
            <param name="message">The message to be put into a queue.</param>
            <returns>True if the message was successfully put on the specified queue, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Put``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Synchronously puts a collection of message on the queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1"/> for which the extension method will be invoked.</param>
            <param name="messages">The collection of message to be stored in the queue.</param>
            <returns>True if all message were successfully put on the specified queue, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.PutAsync``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository{``0},``0)">
            <summary>
            Asynchronously puts a single message on the queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1"/> for which the extension method will be invoked.</param>
            <param name="message">The message to be put into a queue.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.PutAsync``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Asynchronously puts a collection of messages on the queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1"/> for which the extension method will be invoked.</param>
            <param name="messages">The collection of messages to be put into a queue.</param>
            <returns>A disposable object which represents a callback subscription to the underlying asynchronous operation. Disposing the subscription will result in blocking the caller until the asynchronous operation is finished, either successfully or with a failure.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Get``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository{``0})">
            <summary>
            Retrieves a single message from the queue and applies the default visibility timeout.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1"/> for which the extension method will be invoked.</param>
            <returns>An instance of the object that has been fetched from the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Get``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository{``0},System.Int32)">
            <summary>
            Gets a collection of messages from the queue and applies the default visibility timeout.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1"/> for which the extension method will be invoked.</param>
            <param name="count">The number of messages to retrieve.</param>
            <returns>The list of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Get``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository{``0},System.Int32,System.TimeSpan)">
            <summary>
            Gets a collection of messages from the queue and applies the specified visibility timeout.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="queueStorage">The instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1"/> for which the extension method will be invoked.</param>
            <param name="count">The number of messages to retrieve.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The list of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Deserialize(Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,System.Byte[],System.Type)">
            <summary>
            Deserializes the object from specified data buffer.
            </summary>
            <param name="serializer">The <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> object which this method extends.</param>
            <param name="source">The buffer from which serialized object will be consumed.</param>
            <param name="type">The type of the object that will be deserialized.</param>
            <returns>The deserialized object instance.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.Deserialize``1(Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,System.Byte[])">
            <summary>
            Deserializes the object from specified data buffer into the specified type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of the object that will be deserialized.</typeparam>
            <param name="serializer">The <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> object which this method extends.</param>
            <param name="source">The buffer from which serialized object will be consumed.</param>
            <returns>The deserialized object instance.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ExtensionMethods.TraceStorageError(Microsoft.Experience.CloudFx.Framework.Diagnostics.ITraceEventProvider,System.Exception,System.Boolean)">
            <summary>
            Writes the detailed information about a given storage exception with optional stack trace intended to facilitate troubleshooting.
            </summary>
            <param name="traceProvider">The type which is extended by this extension method.</param>
            <param name="ex">The storage exception to be formatted and written to the trace.</param>
            <param name="includeStackTrace">A flag indicating whether or not call stack details should be included.</param>
            <returns>The formatted message carrying exception details.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage">
            <summary>
            Defines a generics-aware abstraction layer for Windows Azure Blob storage.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.CreateContainer(System.String)">
            <summary>
            Creates a new blob container using specified name.
            </summary>
            <param name="containerName">The name of the blob container to be created.</param>
            <returns>True if the container did not already exist and was created; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.DeleteContainer(System.String)">
            <summary>
            Deletes the specified blob container.
            </summary>
            <param name="containerName">The name of the blob container to be deleted.</param>
            <returns>True if the container existed and was successfully deleted; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.GetCount(System.String)">
            <summary>
            Gets the number of blobs in the specified container.
            </summary>
            <param name="containerName">The name of the blob container to be queried.</param>
            <returns>The number of blobs in the container.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.GetContainers(Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions)">
            <summary>
            Returns a list of all container names found in the storage account.
            </summary>
            <param name="options">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions"/> object to use when making a request.</param>
            <returns>The list containing container names.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.Put``1(System.IObservable{``0},System.Boolean)">
            <summary>
            Asynchronously puts a collection of blobs into the underlying storage. If the blob with the same name already exists, the specified overwrite behavior will be applied. 
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="provider">The provider object supplying blobs to be stored in the underlying storage.</param>
            <param name="overwrite">The flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.Get``1(System.String,System.String)">
            <summary>
            Retrieves a typed blob by its name from the specified container.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <returns>An instance of <typeparamref name="T"/> or default(T) if the specified blob was not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.Get``1(System.String)">
            <summary>
            Gets an observable collection of blobs from the specified container.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <returns>The list of blobs found the specified container.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.Get(System.String,System.String,System.IO.Stream)">
            <summary>
            Retrieves an untyped blob by its name from the specified container and places the blob data into the specified stream.
            </summary>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <param name="target">The target stream where the blob data will be written to.</param>
            <returns>True if the blob was successfully retrieved from the specified container, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.Delete``1(``0)">
            <summary>
            Deletes the specified blob. The blob object can be of any compatible type as long as it contains the following two compulsory properties: Name and ContainerName.
            For additional convenience, use <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob"/> class to represent an untyped blob. Please note that the blob's payload is not required when deleting the blob.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blob">The object representing a blob.</param>
            <returns>True if the blob was deleted, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage.SetMetadata(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets the metadata of the specified blob.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobName">Name of the blob.</param>
            <param name="metadata">The metadata which will be set in blob.</param>
            <returns>True if metadata was set successfully, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Caching.ICloudCacheStorage">
            <summary>
            Defines a generics-aware abstraction layer for Windows Azure Caching Service.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1">
            <summary>
            Defines an interface that exposes the type-safe cloud queue repository. A cloud queue repository is the abstraction of a single Windows Azure storage queue.
            </summary>
            <typeparam name="T">The item type which the underlying queue storage persists.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.Create">
            <summary>
            Creates a queue if it does not already exist.
            </summary>
            <returns>A flag indicating whether or not the queue has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.Drop">
            <summary>
            Deletes a queue if it exists.
            </summary>
            <returns>A flag indicating whether or not the queue has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.Clear">
            <summary>
            Clears all messages from the queue.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.Put(System.IObservable{`0})">
            <summary>
            Puts one or more messages returned by the specified provider on a queue.
            </summary>
            <param name="provider">The provider supplying messages for publication on a queue.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.Get(System.Int32,System.TimeSpan)">
            <summary>
            Gets an observable sequence of messages from the queue. The size of the sequence will be limited to the number of messages specified in the <paramref name="messageCount"/> parameter.
            All messages retrieved from the queue will be assigned the specified <paramref name="visibilityTimeout"/> value and remain invisible on the queue until the specified timeout is elapsed.
            </summary>
            <param name="messageCount">The maximum number of messages to retrieve from the queue.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.Delete(`0)">
            <summary>
            Deletes the specified message from the queue.
            </summary>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>A flag indicating whether or not the specified message has actually been deleted.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.QueueName">
            <summary>
            Gets the queue name which this repository represents.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueRepository`1.ItemCount">
            <summary>
            Gets the approximate count of items in the queue.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1">
            <summary>
            Defines an interface that exposes the type-safe cloud table repository.
            </summary>
            <typeparam name="T">The entity type which the underlying table storage persists.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Create">
            <summary>
            Creates a new table if it does not already exist.
            </summary>
            <returns>A flag indicating whether or not the table has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Drop">
            <summary>
            Deletes a table if it exists.
            </summary>
            <returns>A flag indicating whether or not the table has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Get(System.String,System.String)">
            <summary>
            Gets a collection of entities from the specified table by their optional partition key and row key.
            </summary>
            <param name="partitionKey">The optional table partition key that will enforce the server-side filtering. Pass null to ignore partition key</param>
            <param name="rowKey">The optional table row key that will enforce the server-side filtering. Pass null to ignore row key.</param>
            <returns>The LINQ-queryable collection of entities retrieved from the specified table.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Add(`0)">
            <summary>
            Adds the specified entity into the table.
            </summary>
            <param name="entity">The entity containing the data to be added into the table.</param>
            <returns>True if the entity has been successfully added, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the specified collection of entities into the table.
            </summary>
            <remarks>All entities must share the same PartitionKey property. If not all entities have the same PartitionKey, the function will fail.</remarks>
            <param name="entities">The collection of entities to be added into the table.</param>
            <returns>True if all the entities have been successfully added, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Update(`0,System.Boolean)">
            <summary>
            Updates the specified entity stored in the table.
            </summary>
            <param name="entity">The data entity to be updated.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity, or merge the entity's properties with the already existing ones.</param>
            <returns>True if the entity has been successfully updated, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Update(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Updates the specified collection of entities stored in the table.
            </summary>
            <param name="entities">The collection of entities to be updated.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity, or merge the entity's properties with the already existing ones.</param>
            <returns>True if all the entities have been successfully updated, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Upsert(`0,System.Boolean)">
            <summary>
            Updates the specified entity if it already exists, or inserts the entity if the specified entity doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario. 
            </summary>
            <remarks>
            The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <param name="entity">The instance of the entity to be either updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if the entity has been successfully updated or inserted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Upsert(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Enumerates through the specified collection of entities and updates each entity if it already exists, or inserts a new entity if it doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario.
            </summary>
            <remarks>
            <para>The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.</para>
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <param name="entities">The collection of entities to be updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if all entities have been successfully updated or inserted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Delete(`0)">
            <summary>
            Deletes the specified entity stored in the table.
            </summary>
            <param name="entity">The data entity to be deleted.</param>
            <returns>True if the entity has been successfully deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.Delete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Deletes the specified collection of entities stored in the table.
            </summary>
            <remarks>All entities must share the same PartitionKey property. If not all entities have the same PartitionKey, the function will fail.</remarks>
            <param name="entities">The collection of entities to be deleted.</param>
            <returns>True if all the entities have been successfully deleted (or did not exist anyway), otherwise false.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableRepository`1.TableName">
            <summary>
            Gets the table name.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableEntity">
            <summary>
            This contract represents an entity (row) in a table in the Windows Azure table storage. 
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableEntity.PartitionKey">
            <summary>
            Gets or sets the partition key of a table entity.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableEntity.RowKey">
            <summary>
            Gets or sets the row key of a table entity.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage">
            <summary>
            Defines a generics-aware abstraction layer for Windows Azure Table storage.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.CreateTable(System.String)">
            <summary>
            Creates a new table if it does not already exist.
            </summary>
            <param name="tableName">The name of the table to be created.</param>
            <returns>A flag indicating whether or not the table has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.DeleteTable(System.String)">
            <summary>
            Deletes a table if it exists.
            </summary>
            <param name="tableName">The name of the table to be deleted.</param>
            <returns>A flag indicating whether or not the table has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.TableExists(System.String)">
            <summary>
            Checks whether the specified table exists.
            </summary>
            <param name="tableName">The name of the table to be checked for existence.</param>
            <returns>A flag indicating whether or not the table already exists.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Get``1(System.String,System.String,System.String)">
            <summary>
            Gets a collection of entities from the specified table by their optional partition key and row key.
            </summary>
            <typeparam name="T">The type of the entity stored in the table.</typeparam>
            <param name="tableName">The name of the source table to be queried.</param>
            <param name="partitionKey">The optional table partition key that will enforce the server-side filtering.</param>
            <param name="rowKey">The optional table row key that will enforce the server-side filtering.</param>
            <returns>The LINQ-queryable collection of entities retrieved from the specified table.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Add``1(System.String,``0)">
            <summary>
            Adds the specified entity into the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table into which the specified entity will be added.</param>
            <param name="entity">The instance of the entity to be added into the table.</param>
            <returns>True if the entity has been successfully added, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Add``1(System.String,System.IObservable{``0},System.Int32)">
            <summary>
            Adds the entities returned by the specified provider into the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table into which the entities will be added.</param>
            <param name="provider">The provider supplying the entities to be added into the table.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Update``1(System.String,``0,System.Boolean)">
            <summary>
            Updates the specified entity stored in the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity to be updated.</param>
            <param name="entity">The instance of the entity to be updated.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity, or merge the entity's properties with the already existing ones.</param>
            <returns>True if the entity has been successfully updated, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Update``1(System.String,System.IObservable{``0},System.Int32,System.Boolean)">
            <summary>
            Updates the entities returned by the specified provider in the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table in which the entities will be updated.</param>
            <param name="provider">The provider supplying the entities to be updated.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entities, or merge the entity's properties with the already existing ones.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Upsert``1(System.String,``0,System.Boolean)">
            <summary>
            Updates the specified entity if it already exists, or inserts the entity if the specified entity doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario. 
            </summary>
            <remarks>
            The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity.</param>
            <param name="entity">The instance of the entity to be either updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if the entity has been successfully updated or inserted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Upsert``1(System.String,System.IObservable{``0},System.Int32,System.Boolean)">
            <summary>
            Enumerates through the entities returned by the specified provider and updates each entity if it already exists, or inserts a new entity if it doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario.
            </summary>
            <remarks>
            <para>The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.</para>
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entities.</param>
            <param name="provider">The provider supplying the entities to be either updated or inserted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Delete``1(System.String,``0)">
            <summary>
            Deletes the specified entity stored in the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity to be deleted.</param>
            <param name="entity">The instance of the entity to be deleted.</param>
            <returns>True if the entity has been successfully deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage.Delete``1(System.String,System.IObservable{``0},System.Int32)">
            <summary>
            Deletes the entities returned by the specified provider from the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entities to be deleted.</param>>
            <param name="provider">The provider supplying the entities to be deleted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage">
            <summary>
            Defines a generics-aware in-memory implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.AnyEntityEtag">
            <summary>
            ETAG value that represents a forced overwrite.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.PartitionKeyPropertyName">
            <summary>
            The property name associated with the partition key in table storage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.RowKeyPropertyName">
            <summary>
            The property name associated with the row key in table storage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Tables">
            <summary>
            A dictionary collection that contains the tables that are in existence.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.disposed">
            <summary>
            Used as part of the Dispose pattern set to true once the method has been disposed of.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage"/> class.  Constructor overloads have been added to replicate the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/>.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="storageAccountInfo">This value is not used in the this implementation, only included for consistency during tests.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage"/> class.  Constructor overloads have been added to replicate the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/>.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="connectionString">This value is not used in the this implementation, only included for consistency during tests.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage"/> class.  Constructor overloads have been added to replicate the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/>.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="storageAccount">This value is not used in the this implementation, only included for consistency during tests.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage"/> class.  Constructor overloads have been added to replicate the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/>.
            </summary>
            <param name="connectionString">This value is not used in the this implementation, only included for consistency during tests.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage"/> class.  Constructor overloads have been added to replicate the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/>.
            </summary>
            <param name="storageAccount">This value is not used in the this implementation, only included for consistency during tests.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class using the specified storage account information and a custom retry policy.
            </summary>
            <param name="storageAccountInfo">This value is not used in the this implementation, only included for consistency during tests.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.CreateTable(System.String)">
            <summary>
            Creates a new table if it does not already exist.
            </summary>
            <param name="tableName">The name of the table to be created.  The table name is case insensitive and must adhere to Windows Azure Table Storage
            naming conventions.</param>
            <returns>A flag indicating whether or not the table has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.DeleteTable(System.String)">
            <summary>
            Deletes a table if it exists.
            </summary>
            <param name="tableName">The name of the table to be deleted.  The table name is case insensitive and must adhere to Windows Azure Table Storage
            naming conventions.</param>
            <returns>A flag indicating whether or not the table has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableExists(System.String)">
            <summary>
            Checks whether the specified table exists.
            </summary>
            <param name="tableName">The name of the table to confirm existence of.  The table name is case insensitive and must adhere to Windows Azure Table Storage
            naming conventions.</param>
            <returns>A flag indicating whether or not the table already exists.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Get``1(System.String,System.String,System.String)">
            <summary>
            Gets a collection of entities from the specified table by their optional partition key and row key.
            </summary>
            <typeparam name="T">The type of the entity stored in the table.</typeparam>
            <param name="tableName">The name of the source table to be queried.</param>
            <param name="partitionKey">The optional table partition key that will enforce the server-side filtering.</param>
            <param name="rowKey">The optional table row key that will enforce the server-side filtering.</param>
            <returns>A collection retrieved from the specified table that can be queried by LINQ.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Add``1(System.String,``0)">
            <summary>
            Adds the specified entity into the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table into which the specified entity will be added.</param>
            <param name="entity">The instance of the entity to be added into the table.</param>
            <returns>True if the entity has been successfully added, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Add``1(System.String,System.IObservable{``0},System.Int32)">
            <summary>
            Adds the entities returned by the specified provider into the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table into which the entities will be added.</param>
            <param name="provider">The provider supplying the entities to be added into the table.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Update``1(System.String,``0,System.Boolean)">
            <summary>
            Updates the specified entity stored in the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity to be updated.</param>
            <param name="entity">The instance of the entity to be updated.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity, or merge the entity's properties with the already existing ones.</param>
            <returns>True if the entity has been successfully updated, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Update``1(System.String,System.IObservable{``0},System.Int32,System.Boolean)">
            <summary>
            Updates the entities returned by the specified provider in the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table in which the entities will be updated.</param>
            <param name="provider">The provider supplying the entities to be updated.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entities, or merge the entity's properties with the already existing ones.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Upsert``1(System.String,``0,System.Boolean)">
            <summary>
            Updates the specified entity if it already exists, or inserts the entity if the specified entity doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario. 
            </summary>
            <remarks>
            The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity.</param>
            <param name="entity">The instance of the entity to be either updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if the entity has been successfully updated or inserted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Upsert``1(System.String,System.IObservable{``0},System.Int32,System.Boolean)">
            <summary>
            Enumerates through the entities returned by the specified provider and updates each entity if it already exists, or inserts a new entity if it doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario.
            </summary>
            <remarks>
            <para>The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.</para>
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entities.</param>
            <param name="provider">The provider supplying the entities to be either updated or inserted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Delete``1(System.String,``0)">
            <summary>
            Deletes the specified entity stored in the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity to be deleted.</param>
            <param name="entity">The instance of the entity to be deleted.</param>
            <returns>True if the entity has been successfully deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Delete``1(System.String,System.IObservable{``0},System.Int32)">
            <summary>
            Deletes the entities returned by the specified provider from the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entities to be deleted.</param>>
            <param name="provider">The provider supplying the entities to be deleted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.ConsumeObservable``1(System.IObservable{``0},System.Action{System.Collections.Generic.IList{``0}},System.Int32,System.Guid)">
            <summary>
            Receives a batch query identified by the provider and executes the defined actions against the batch on a background thread.  
            </summary>
            <typeparam name="T">The type of the entity being processed.</typeparam>
            <param name="provider">The provider of the batch contents.</param>
            <param name="action">The action to be performed on each of the entities in the batch.</param>
            <param name="batchSize">Not used</param>
            <param name="callToken">The call token for tracing current location.</param>
            <returns>An observable of the table entity.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.GetTableEntityPartitionKey``1(``0)">
            <summary>
            Retrieves the partition key from the table entity.
            </summary>
            <typeparam name="T">The type of the entity being reflected.</typeparam>
            <param name="entity">The entity to be reflected.</param>
            <returns>The partition key if available.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.GetTableEntityKeys``1(``0,System.String@,System.String@)">
            <summary>
            Retrieves the partition and row key from the entity based on its derived type, or it falls back to reflection.
            </summary>
            <typeparam name="T">The type of the entity to be reflected.</typeparam>
            <param name="entity">The entity to be reflected.</param>
            <param name="partitionKey">The partition key that was contained in the entity.</param>
            <param name="rowKey">The row key that was contained in the entity.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.ValidateTableEntityKeys(System.String,System.String)">
            <summary>
            Validate the partition and row keys for an entity.
            </summary>
            <param name="partitionKey">The partition key.</param>
            <param name="rowKey">The row key.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.ArgumentNotValidTableName(System.String,System.String)">
            <summary>
            Checks a string argument to ensure it is a valid Windows Azure Storage table name.
            </summary>
            <param name="argumentValue">The argument value to check.</param>
            <param name="argumentName">The name of the argument.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.GetKeys``1(``0,System.String@,System.String@)">
            <summary>
            Retrieves the partition and row key from the entity.
            </summary>
            <typeparam name="T">The type of the entity.</typeparam>
            <param name="entity">The entity that contains the keys.</param>
            <param name="partitionKey">The partition key that the entity contains.</param>
            <param name="rowKey">The row key that the entity contains.</param>
            <returns>true if the partition or row key are not empty strings.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.ValidateEntityType``1">
            <summary>
            Validates that the entity provided is derived from ICloudTableEntity, TableServiceEntity, ITableEntity or has a row and partition key.
            </summary>
            <typeparam name="TEntity">The type of the entity being validated.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.GetEntityProperties``1(``0)">
            <summary>
            Retrieves the properties from the entity and returns them in a dictionary.
            </summary>
            <typeparam name="TEntity">The type of the entity to be reflected.</typeparam>
            <param name="entity">The entity to be reflected.</param>
            <returns>A dictionary containing the properties and values found in the entity.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.MaterializeEntity``1(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}})">
            <summary>
            Retrieves an entity of the specified type based on the list of properties provided. 
            </summary>
            <typeparam name="TEntity">The type of the entity to be created.</typeparam>
            <param name="partitionKey">The partition key of the entity.</param>
            <param name="rowKey">The row key of the entity.</param>
            <param name="properties">A list of properties other than the row and partition key.</param>
            <returns>An entity of the requested type, populated with property values found in the enumeration.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1">
            <summary>
            The TableWriter type manages the observable portion of the object, notifying the observers of processing as it occurs, errors and completion status.
            </summary>
            <typeparam name="T">The type of the object being written.</typeparam>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.writeAction">
            <summary>
            The action to be executed.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.resultSubject">
            <summary>
            The instance that the feedback will be sent to.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.disposed">
            <summary>
            Used to manage the Disposable pattern.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.#ctor(System.Action{System.Collections.Generic.IList{`0}})">
            <summary>
            Instantiates a new instance of the TableWriter class with the defined action to be performed.
            </summary>
            <param name="writeAction">The action to be performed.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.Finalize">
            <summary>
            Terminator to complete the Disposable pattern.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.OnNext(System.Collections.Generic.IList{`0})">
            <summary>
            Performs the action and notifies the subject of success or failure.
            </summary>
            <param name="batch">The batch to be processed.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.OnCompleted">
            <summary>
            Notify the subject that the action is completed.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.OnError(System.Exception)">
            <summary>
            Notifies the client of an error processing.
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.Subscribe(System.IObserver{Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableOperationResult{`0}})">
            <summary>
            Subscribes for notifications.
            </summary>
            <param name="observer">An instance of the object that will observe the notification.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableWriter`1.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableOperationResult`1">
            <summary>
            This type is used to communicate status information for the Observable implementation.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableOperationResult`1.Batch">
            <summary>
            A list of objects of the specified type that are to be processed.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableOperationResult`1.Exception">
            <summary>
            Exception details that were generated during the batch.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.InMemoryCloudTableStorage.TableOperationResult`1.IsFailure">
            <summary>
            True if an failure occured during the processing.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo">
            <summary>
            Implements an object holding metadata related to a large message which is stored in 
            the overflow message store such as Windows Azure blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo.#ctor">
            <summary>
            The default constructor is inaccessible, the object needs to be instantiated using its Create method.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo.Create(System.String)">
            <summary>
            Creates a new instance of the large message metadata object and allocates a globally unique blob reference.
            </summary>
            <param name="queueName">The name of the Windows Azure queue on which a reference to the large message will be stored.</param>
            <returns>The instance of the large message metadata object.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo.Create(System.Xml.XmlReader)">
            <summary>
            Reconstructs an instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo"/> object from its XML representation generated by <see cref="T:System.Runtime.Serialization.DataContractSerializer"/>.
            </summary>
            <param name="reader">The XML reader supplying the serialized representation of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo"/> object.</param>
            <returns>The initialized instance of a <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo"/> object containing large message metadata, or a null reference if incorrect data was consumed from the XML reader.</returns>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo.ContainerName">
            <summary>
            Returns the name of the blob container holding the large message payload.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.LargeQueueMessageInfo.BlobReference">
            <summary>
            Returns the unique reference to a blob holding the large message payload.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute">
            <summary>
            Implements a declarative attribute that can be applied to a worker role to enable the role instances
            to automatically participate in queue service operations.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.#ctor">
            <summary>
            Initializes a new instance of the QueueServiceWorkerRoleAttribute class with a default visibility timeout.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the QueueServiceWorkerRoleAttribute class with the default queue storage account 
            and queue name on which service instances will be listening.
            </summary>
            <param name="queueName">The name of the queue on which service instances will be listening.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the QueueServiceWorkerRoleAttribute class with the name of storage account 
            and queue on which service instances will be listening.
            </summary>
            <param name="storageAccount">The name of the storage account definition in the application configuration.</param>
            <param name="queueName">The name of the queue on which service instances will be listening.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.StorageAccount">
            <summary>
            The name of the storage account definition in the application configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.QueueName">
            <summary>
            The name of the queue on which service instances will be listening.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.VisibilityTimeoutSeconds">
            <summary>
            The visibility timeout (in seconds) indicating when messages should become visible in the queue again if they not consumed and deleted from the queue.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.VisibilityTimeout">
            <summary>
            The visibility timeout indicating when messages should become visible in the queue again if they not consumed and deleted from the queue.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.NumberOfListeners">
            <summary>
            The number of worker threads listening on the queue.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.QueueServiceWorkerRoleAttribute.QueueDescription">
            <summary>
            The object holding a description of the Windows Azure Storage queue.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage">
            <summary>
            Provides reliable generics-aware access to the Windows Azure Blob storage.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account information.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the blobs.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account connection string.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the blobs.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the blobs.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account information and a custom retry policy.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the blobs.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying blob storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account connection string and a custom retry policy.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the blobs.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying blob storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account and a custom retry policy.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the blobs.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying blob storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account connection string, a custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the blobs.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying blob storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account, a custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the blobs.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying blob storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage"/> class using the specified storage account information, a custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the blobs.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying blob storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.CreateContainer(System.String)">
            <summary>
            Creates a new blob container using specified name.
            </summary>
            <param name="containerName">The name of the blob container to be created.</param>
            <returns>True if the container did not already exist and was created; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.DeleteContainer(System.String)">
            <summary>
            Deletes the specified blob container.
            </summary>
            <param name="containerName">The name of the blob container to be deleted.</param>
            <returns>True if the container existed and was successfully deleted; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.Put``1(System.IObservable{``0},System.Boolean)">
            <summary>
            Asynchronously puts a collection of blobs into the underlying storage. If the blob with the same name already exists, the specified overwrite behavior will be applied. 
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="provider">The provider object supplying blobs to be stored in the underlying storage.</param>
            <param name="overwrite">The flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.Get``1(System.String)">
            <summary>
            Gets an observable collection of blobs from the specified container.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <returns>The list of blobs found the specified container.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.Get``1(System.String,System.String)">
            <summary>
            Retrieves a typed blob by its name from the specified container.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <returns>An instance of <typeparamref name="T"/> or default(T) if the specified blob was not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.Get(System.String,System.String,System.IO.Stream)">
            <summary>
            Retrieves an untyped blob by its name from the specified container and places the blob data into the specified stream.
            </summary>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <param name="target">The target stream where the blob data will be written to.</param>
            <returns>True if the blob was successfully retrieved from the specified container, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.Delete``1(``0)">
            <summary>
            Deletes the specified blob. The blob object can be of any compatible type as long as it contains the following two compulsory properties: Name and ContainerName.
            For additional convenience, use <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob"/> class to represent an untyped blob. Please note that the blob's payload is not required when deleting the blob.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blob">The object representing a blob.</param>
            <returns>True if the blob was deleted, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.SetMetadata(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets the metadata of the specified blob.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobName">Name of the blob.</param>
            <param name="metadata">The metadata which will be set in blob.</param>
            <returns>True if metadata was set successfully, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.GetCount(System.String)">
            <summary>
            Gets the number of blobs in the specified container.
            </summary>
            <param name="containerName">The name of the blob container to be queried.</param>
            <returns>The number of blobs in the container.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.GetContainers(Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions)">
            <summary>
            Returns a list of all container names found in the storage account.
            </summary>
            <param name="options">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions"/> object to use when making a request.</param>
            <returns>The list containing container names.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudBlobStorage.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage">
            <summary>
            Implements reliable generics-aware layer for Windows Azure Caching Service.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage"/> class using the specified caching service endpoint details.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="endpointInfo">The endpoint details for Windows Azure Caching Service.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage"/> class using the specified caching service endpoint details and a custom retry policy.
            </summary>
            <param name="endpointInfo">The endpoint details for Windows Azure Caching Service.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the Caching Service.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage"/> class using the specified storage account information, custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="endpointInfo">The endpoint details for Windows Azure Caching Service.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the Caching Service.</param>
            <param name="dataSerializer">An instance of the component which performs custom serialization and deserialization of cache items.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.CreateContainer(System.String)">
            <summary>
            Creates a new container (cache region) using specified name.
            </summary>
            <param name="regionName">The name of the container (cache region) to be created.</param>
            <returns>True if the container did not already exist and was created; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.DeleteContainer(System.String)">
            <summary>
            Deletes the specified container (cache region).
            </summary>
            <param name="regionName">The name of the container (cache region) to be deleted.</param>
            <returns>True if the container existed and was successfully deleted; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Put``1(System.String,System.String,``0)">
            <summary>
            Puts an item into the cache, overwrites the existing item if the item with the same key already exists.
            </summary>
            <typeparam name="T">The type of the payload associated with the cache item.</typeparam>
            <param name="regionName">The target container (cache region) name into which the cache item will be stored.</param>
            <param name="key">The key associated with the cache item.</param>
            <param name="item">The cache item.</param>
            <returns>True if the cache item was successfully put into the specified region, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Put``1(System.String,System.String,``0,System.Boolean)">
            <summary>
            Puts an item into the cache. 
            If the item with the same name already exists, the older item can be overwritten depending on the behavior specified in the <paramref name="overwrite"/> parameter.
            </summary>
            <typeparam name="T">The type of the payload associated with the cache item.</typeparam>
            <param name="regionName">The target container (cache region) name into which the cache item will be stored.</param>
            <param name="key">The key associated with the cache item.</param>
            <param name="item">The cache item.</param>
            <param name="overwrite">The flag indicating whether or not overwriting the existing cache item is permitted.</param>
            <returns>True if the cache item was successfully put into the specified region, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Put``1(System.IObservable{``0},System.Boolean)">
            <summary>
            Asynchronously puts a collection of blobs into the underlying storage. If the blob with the same name already exists, the specified overwrite behavior will be applied. 
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="provider">The provider object supplying blobs to be stored in the underlying storage.</param>
            <param name="overwrite">The flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Get``1(System.String)">
            <summary>
            Gets an observable collection of blobs from the specified container.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <returns>The list of blobs found the specified container.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Get``1(System.String,System.String)">
            <summary>
            Retrieves a cache item by its key.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="regionName">The target container (cache region) name from which the blob will be retrieved.</param>
            <param name="key">The key associated with the cache item.</param>
            <returns>An instance of <typeparamref name="T"/> or default(T) if the specified cache item was not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Get(System.String,System.String,System.IO.Stream)">
            <summary>
            Retrieves an untyped blob by its name from the specified container and places the blob data into the specified stream.
            </summary>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <param name="target">The target stream where the blob data will be written to.</param>
            <returns>True if the blob was successfully retrieved from the specified container, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Delete``1(``0)">
            <summary>
            Deletes the specified blob. The blob object can be of any compatible type as long as it contains the following two compulsory properties: Name and ContainerName.
            For additional convenience, use <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob"/> class to represent an untyped blob. Please note that the blob's payload is not required when deleting the blob.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blob">The object representing a blob.</param>
            <returns>True if the blob was deleted, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.SetMetadata(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets the metadata of the specified blob. This method does not apply to this implementation of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage"/> interface and therefore is not implemented.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobName">Name of the blob.</param>
            <param name="metadata">The metadata which will be set in blob.</param>
            <returns>True if meta data was set successfully, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.GetCount(System.String)">
            <summary>
            Gets the number of cache items in the specified container (region).
            </summary>
            <param name="regionName">The target container (cache region) name to be queried.</param>
            <returns>The number of cache items in the container (region).</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.GetContainers(Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions)">
            <summary>
            Returns a list of all container (region) names found in the storage account.
            </summary>
            <param name="options">The <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions"/> object to use when making a request.</param>
            <returns>The list containing container (region) names.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Caching.ReliableCloudCacheStorage.Put``1(System.String,System.String,``0,System.Boolean,System.String@)">
            <summary>
            Puts an item into the cache and returns its globally unique auto-generated tag value.
            If the item with the same name already exists, the older item can be overwritten depending on the behavior specified in the <paramref name="overwrite"/> parameter.
            </summary>
            <typeparam name="T">The type of the payload associated with the cache item.</typeparam>
            <param name="regionName">The target container (cache region) name into which the cache item will be stored.</param>
            <param name="key">The key associated with the cache item.</param>
            <param name="item">The cache item.</param>
            <param name="overwrite">The flag indicating whether or not overwriting the existing cache item is permitted.</param>
            <param name="itemTag">The output parameters holding the cache item's globally unique auto-generated tag value.</param>
            <returns>True if the cache item was successfully put into the specified region, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1">
            <summary>
            Implements a generic component that exposes the type-safe cloud queue repository functionality. A cloud queue repository is the abstraction of a single Windows Azure storage queue.
            </summary>
            <typeparam name="T">The item type which the underlying queue storage persists.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.#ctor(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1"/> class using the specified queue storage and default queue name taken from the name of the generic type <typeparamref name="T"/>.
            </summary>
            <param name="queueStorage">An instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> component which provides access to the underlying queue storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.#ctor(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1"/> class using the specified queue storage and queue name.
            </summary>
            <param name="queueStorage">An instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> component which provides access to the underlying queue storage.</param>
            <param name="queueName">The queue name.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Create">
            <summary>
            Creates a queue if it does not already exist.
            </summary>
            <returns>A flag indicating whether or not the queue has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Drop">
            <summary>
            Deletes a queue if it exists.
            </summary>
            <returns>A flag indicating whether or not the queue has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Clear">
            <summary>
            Clears all messages from the queue.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Put(System.IObservable{`0})">
            <summary>
            Puts one or more messages returned by the specified provider on a queue.
            </summary>
            <param name="provider">The provider supplying messages for publication on a queue.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Get(System.Int32,System.TimeSpan)">
            <summary>
            Gets an observable sequence of messages from the queue. The size of the sequence will be limited to the number of messages specified in the <paramref name="messageCount"/> parameter.
            All messages retrieved from the queue will be assigned the specified <paramref name="visibilityTimeout"/> value and remain invisible on the queue until the specified timeout is elapsed.
            </summary>
            <param name="messageCount">The maximum number of messages to retrieve from the queue.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Delete(`0)">
            <summary>
            Deletes the specified message from the queue.
            </summary>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>A flag indicating whether or not the specified message has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.QueueName">
            <summary>
            Gets the queue name which this repository represents.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueRepository`1.ItemCount">
            <summary>
            Gets the approximate count of items in the queue.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1">
            <summary>
            Implements a generic component that exposes the type-safe cloud table repository functionality.
            </summary>
            <typeparam name="T">The entity type which the underlying table storage persists.</typeparam>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.tableNameValidatorRegex">
            <summary>
            A regular expression object for validating Azure table names
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.#ctor(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1"/> class using the specified table storage and default table name taken from the name of the generic type <typeparamref name="T"/>.
            </summary>
            <param name="tableStorage">An instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> component which provides access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.#ctor(Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1"/> class using the specified table storage and table name.
            </summary>
            <param name="tableName">The table name.</param>
            <param name="tableStorage">An instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudTableStorage"/> component which provides access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Create">
            <summary>
            Creates a new table if it does not already exist.
            </summary>
            <returns>A flag indicating whether or not the table has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Drop">
            <summary>
            Deletes a table if it exists.
            </summary>
            <returns>A flag indicating whether or not the table has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Get(System.String,System.String)">
            <summary>
            Gets a collection of entities from the specified table by their optional partition key and row key.
            </summary>
            <param name="partitionKey">The optional table partition key that will enforce the server-side filtering. Pass null to ignore partition key</param>
            <param name="rowKey">The optional table row key that will enforce the server-side filtering. Pass null to ignore row key.</param>
            <returns>The LINQ-queryable collection of entities retrieved from the specified table.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Add(`0)">
            <summary>
            Adds the specified entity into the table.
            </summary>
            <param name="entity">The entity containing the data to be added into the table.</param>
            <returns>True if the entity has been successfully added, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the specified collection of entities into the table.
            </summary>
            <remarks>All entities must share the same PartitionKey property. If not all entities have the same PartitionKey, the function will fail.</remarks>
            <param name="entities">The collection of entities to be added into the table.</param>
            <returns>True if all the entities have been successfully added, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Update(`0,System.Boolean)">
            <summary>
            Updates the specified entity stored in the table.
            </summary>
            <param name="entity">The data entity to be updated.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity, or merge the entity's properties with the already existing ones.</param>
            <returns>True if the entity has been successfully updated, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Update(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Updates the specified collection of entities stored in the table.
            </summary>
            <param name="entities">The collection of entities to be updated.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity, or merge the entity's properties with the already existing ones.</param>
            <returns>True if all the entities have been successfully updated, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Upsert(`0,System.Boolean)">
            <summary>
            Updates the specified entity if it already exists, or inserts the entity if the specified entity doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario. 
            </summary>
            <remarks>
            The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <param name="entity">The instance of the entity to be either updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if the entity has been successfully updated or inserted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Upsert(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
            Enumerates through the specified collection of entities and updates each entity if it already exists, or inserts a new entity if it doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario.
            </summary>
            <remarks>
            <para>The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.</para>
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <param name="entities">The collection of entities to be updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if all entities have been successfully updated or inserted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Delete(`0)">
            <summary>
            Deletes the specified entity stored in the table.
            </summary>
            <param name="entity">The data entity to be deleted.</param>
            <returns>True if the entity has been successfully deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Delete(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Deletes the specified collection of entities stored in the table.
            </summary>
            <remarks>All entities must share the same PartitionKey property. If not all entities have the same PartitionKey, the function will fail.</remarks>
            <param name="entities">The collection of entities to be deleted.</param>
            <returns>True if all the entities have been successfully deleted (or did not exist anyway), otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.GetEnumerator">
            <summary>
            Returns a type-safe enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.ValidateTableName(System.String)">
            <summary>
            Validates that the specified table name is a valid Windows Azure table name.
            </summary>
            <param name="tableName">The table name to validate.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.TableName">
            <summary>
            Gets the table name.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.ElementType">
            <summary>
            Gets the type of the element(s) that are returned when the expression tree associated with this instance of IQueryable is executed.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Expression">
            <summary>
            Gets the expression tree that is associated with the instance of IQueryable.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableRepository`1.Provider">
            <summary>
            Gets the query provider that is associated with this data source.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage">
            <summary>
            Provides reliable generics-aware access to the Windows Azure Queue storage.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account information.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the queues.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the queues.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the queues.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account information and a custom retry policy.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string and a custom retry policy.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account and a custom retry policy.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account information, a custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the queues.</param>
            <param name="retryPolicy">The specific/ retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of queue messages.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string, a custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of queue messages.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account, a custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of queue messages.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account information, a custom retry policy
            and custom implementation of the large message overflow store.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string, a custom retry policy
            and custom implementation of the large message overflow store.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account, a custom retry policy
            and custom implementation of the large message overflow store.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account information and custom 
            implementation of the large message overflow store. Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the queues.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string and custom
            implementation of the large message overflow store. Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the queues.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string and custom
            implementation of the large message overflow store. Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the queues.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string, a custom retry policy,
            custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface and custom implementation of the large message overflow store.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account connection string, a custom retry policy,
            custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface and custom implementation of the large message overflow store.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage"/> class using the specified storage account information, a custom retry policy,
            custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface and custom implementation of the large message overflow store.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the queues.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.CreateQueue(System.String)">
            <summary>
            Creates a new queue.
            </summary>
            <param name="queueName">The name of a new queue.</param>
            <returns>A flag indicating whether or the queue did not exist and was therefore created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.DeleteQueue(System.String)">
            <summary>
            Deletes the specified queue.
            </summary>
            <param name="queueName">The name of the queue to be deleted.</param>
            <returns>True if the queue name has been actually deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.GetCount(System.String)">
            <summary>
            Gets the approximate number of items in the specified queue.
            </summary>
            <param name="queueName">The name of the queue to be queried.</param>
            <returns>The approximate number of items in the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.Clear(System.String)">
            <summary>
            Clears all messages from the specified queue.
            </summary>
            <param name="queueName">The name of the queue that will be emptied.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.Put``1(System.String,System.IObservable{``0})">
            <summary>
            Puts one or more messages returned by the specified provider on a queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="provider">The provider supplying messages for publication on a queue.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.Get``1(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Gets an observable sequence of messages from the specified queue. The size of the sequence will be limited to the number of messages specified in the <paramref name="messageCount"/> parameter.
            All messages retrieved from the queue will be assigned the specified <paramref name="visibilityTimeout"/> value and remain invisible on the queue until the specified timeout is elapsed.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="queueName">The name of the source queue.</param>
            <param name="messageCount">The maximum number of messages to retrieve from the queue.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the specified queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.Delete``1(``0)">
            <summary>
            Deletes a single message from a queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>A flag indicating whether or not the specified message has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudQueueStorage.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage">
            <summary>
            Provides reliable access to the Windows Azure table storage.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class using the specified storage account information.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the tables.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class using the specified storage account connection string.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the tables.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class using the specified storage account.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the tables.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.#ctor(System.String,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class using the specified storage account connection string and a custom retry policy.
            </summary>
            <param name="connectionString">A valid connection string for the Windows Azure storage account holding the tables.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.#ctor(Microsoft.WindowsAzure.Storage.CloudStorageAccount,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class using the specified storage account connection string and a custom retry policy.
            </summary>
            <param name="storageAccount">The Windows Azure storage account holding the tables.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage"/> class using the specified storage account information and a custom retry policy.
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that is holding the tables.</param>
            <param name="retryPolicy">The custom retry policy that will ensure reliable access to the underlying table storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.CreateTable(System.String)">
            <summary>
            Creates a new table if it does not already exist.
            </summary>
            <param name="tableName">The name of the table to be created.</param>
            <returns>A flag indicating whether or not the table has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.DeleteTable(System.String)">
            <summary>
            Deletes a table if it exists.
            </summary>
            <param name="tableName">The name of the table to be deleted.</param>
            <returns>A flag indicating whether or not the table has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.TableExists(System.String)">
            <summary>
            Checks whether the specified table exists.
            </summary>
            <param name="tableName">The name of the table to be checked for existence.</param>
            <returns>A flag indicating whether or not the table already exists.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Get``1(System.String,System.String,System.String)">
            <summary>
            Gets a collection of entities from the specified table by their optional partition key and row key.
            </summary>
            <typeparam name="T">The type of the entity stored in the table.</typeparam>
            <param name="tableName">The name of the source table to be queried.</param>
            <param name="partitionKey">The optional table partition key that will enforce the server-side filtering.</param>
            <param name="rowKey">The optional table row key that will enforce the server-side filtering.</param>
            <returns>The LINQ-queryable collection of entities retrieved from the specified table.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Add``1(System.String,``0)">
            <summary>
            Adds the specified entity into the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table into which the specified entity will be added.</param>
            <param name="entity">The instance of the entity to be added into the table.</param>
            <returns>True if the entity has been successfully added, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Add``1(System.String,System.IObservable{``0},System.Int32)">
            <summary>
            Adds the entities returned by the specified provider into the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table into which the entities will be added.</param>
            <param name="provider">The provider supplying the entities to be added into the table.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Update``1(System.String,``0,System.Boolean)">
            <summary>
            Updates the specified entity stored in the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity to be updated.</param>
            <param name="entity">The instance of the entity to be updated.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity, or merge the entity's properties with the already existing ones.</param>
            <returns>True if the entity has been successfully updated, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Update``1(System.String,System.IObservable{``0},System.Int32,System.Boolean)">
            <summary>
            Updates the entities returned by the specified provider in the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table in which the entities will be updated.</param>
            <param name="provider">The provider supplying the entities to be updated.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entities, or merge the entity's properties with the already existing ones.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Delete``1(System.String,``0)">
            <summary>
            Deletes the specified entity stored in the table.
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity to be deleted.</param>
            <param name="entity">The instance of the entity to be deleted.</param>
            <returns>True if the entity has been successfully deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Delete``1(System.String,System.IObservable{``0},System.Int32)">
            <summary>
            Deletes the entities returned by the specified provider from the table. 
            </summary>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entities to be deleted.</param>>
            <param name="provider">The provider supplying the entities to be deleted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Upsert``1(System.String,``0,System.Boolean)">
            <summary>
            Updates the specified entity if it already exists, or inserts the entity if the specified entity doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario. 
            </summary>
            <remarks>
            The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entity.</param>
            <param name="entity">The instance of the entity to be either updated or inserted.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>True if the entity has been successfully updated or inserted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Upsert``1(System.String,System.IObservable{``0},System.Int32,System.Boolean)">
            <summary>
            Enumerates through the entities returned by the specified provider and updates each entity if it already exists, or inserts a new entity if it doesn't exist in the target table.
            The Upsert action will save an extra roundtrip to the storage system when an application wants to insert or update an entity without needing to know if the 
            entity already exists or not. Upsert can help increase performance and decrease latencies in the described scenario.
            </summary>
            <remarks>
            <para>The <paramref name="replace"/> flag tells the Windows Azure Table storage infrastructure how it should treat the existing entities.</para>
            <para>If <paramref name="replace"/> is set to True, Upsert will insert the entity if the entity does not exist, or if the entity exists, 
            replace the existing one. This means that once the operation successfully completes, the table will contain the specified entity with its properties, 
            replacing the previous entity and all of its existing properties if it had previously existed.</para>
            <para>If <paramref name="replace"/> is set to False, Upsert will insert the entity if the entity does not exist or, if the entity exists, 
            merges the specified entity's properties with the already existing ones. Once the operation successfully completes, the table will contain the specified 
            entity with updated properties provided in the request.</para>
            </remarks>
            <typeparam name="T">The type of the table entity.</typeparam>
            <param name="tableName">The name of the table containing the entities.</param>
            <param name="provider">The provider supplying the entities to be either updated or inserted.</param>
            <param name="batchSize">The number of entities to be batched together and sent in a single request. For optimal batch size, refer to the Windows Azure Table Storage API documentation.</param>
            <param name="replace">A flag indicating whether the operation will replace the existing entity if it already exists.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.Finalize">
            <summary>
            Implements the destructor containing finalization code.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.TableWriter`1.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableCloudTableStorage.TableWriter`1.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage">
            <summary>
            Implements reliable generics-aware storage layer combining Windows Azure Blob storage and Windows Azure Cache in a hybrid mode.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage"/> class using the specified storage account information and caching service endpoint.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccountInfo">The access credentials for Windows Azure storage account.</param>
            <param name="cacheEndpointInfo">The endpoint details for Windows Azure Caching Service.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage"/> class using the specified storage account information, caching service endpoint
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface. Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> 
            retry policies when accessing storage and caching services.
            </summary>
            <param name="storageAccountInfo">The access credentials for Windows Azure storage account.</param>
            <param name="cacheEndpointInfo">The endpoint details for Windows Azure Caching Service.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Configuration.CachingServiceEndpointInfo,Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage"/> class using the specified storage account information, caching service endpoint, custom retry policies
            and a custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccountInfo">The access credentials for Windows Azure storage account.</param>
            <param name="storageRetryPolicy">The custom retry policy that will ensure reliable access to the underlying blob storage.</param>
            <param name="cacheEndpointInfo">The endpoint details for Windows Azure Caching Service.</param>
            <param name="cacheRetryPolicy">The custom retry policy that will ensure reliable access to the Caching Service.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.CreateContainer(System.String)">
            <summary>
            Creates a new blob container using specified name.
            </summary>
            <param name="containerName">The name of the blob container to be created.</param>
            <returns>True if the container did not already exist and was created; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.DeleteContainer(System.String)">
            <summary>
            Deletes the specified blob container.
            </summary>
            <param name="containerName">The name of the blob container to be deleted.</param>
            <returns>True if the container existed and was successfully deleted; otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Put``1(System.String,System.String,``0,System.Boolean)">
            <summary>
            Puts a blob into the underlying storage. If the blob with the same name already exists, overwrite behavior can be customized. 
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name into which a blob will be stored.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <param name="blob">The blob's payload.</param>
            <param name="overwrite">The flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>True if the blob was successfully put into the specified container, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Put``1(System.IObservable{``0},System.Boolean)">
            <summary>
            Asynchronously puts a collection of blobs into the underlying storage. If the blob with the same name already exists, the specified overwrite behavior will be applied. 
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="provider">The provider object supplying blobs to be stored in the underlying storage.</param>
            <param name="overwrite">The flag indicating whether or not overwriting the existing blob is permitted.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Get``1(System.String)">
            <summary>
            Gets an observable collection of blobs from the specified container.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <returns>The list of blobs found the specified container.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Get``1(System.String,System.String)">
            <summary>
            Retrieves a blob by its name from the underlying storage.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <returns>An instance of <typeparamref name="T"/> or default(T) if the specified blob was not found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Get(System.String,System.String,System.IO.Stream)">
            <summary>
            Retrieves an untyped blob by its name from the specified container and places the blob data into the specified stream.
            </summary>
            <param name="containerName">The target blob container name from which the blob will be retrieved.</param>
            <param name="blobName">The custom name associated with the blob.</param>
            <param name="target">The target stream where the blob data will be written to.</param>
            <returns>True if the blob was successfully retrieved from the specified container, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Delete``1(``0)">
            <summary>
            Deletes the specified blob. The blob object can be of any compatible type as long as it contains the following two compulsory properties: Name and ContainerName.
            For additional convenience, use <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CompositeBlob"/> class to represent an untyped blob. Please note that the blob's payload is not required when deleting the blob.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="blob">The object representing a blob.</param>
            <returns>True if the blob was deleted, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.SetMetadata(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Sets the metadata of the specified blob. This method does not apply to this implementation of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage"/> interface and therefore is not implemented.
            </summary>
            <param name="containerName">Name of the container.</param>
            <param name="blobName">Name of the blob.</param>
            <param name="metadata">The metadata which will be set in blob.</param>
            <returns>True if metadata was set successfully, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.GetCount(System.String)">
            <summary>
            Gets the number of blobs in the specified container.
            </summary>
            <param name="containerName">The name of the blob container to be queried.</param>
            <returns>The number of blobs in the container.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.GetContainers(Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions)">
            <summary>
            Returns a list of all container names found in the underlying storage.
            </summary>
            <param name="options">The optional <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ContainerRequestOptions"/> object to use when making a request.</param>
            <returns>The list containing container names.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ReliableHybridBlobStorage.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1">
            <summary>
            Provides a generics-aware repository backed by the Windows Azure Queue storage and capable of scaling across multiple queues.
            </summary>
            <typeparam name="T">The item type which the underlying queue storage persists.</typeparam>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.#ctor(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1"/> class using the specified queue storage and a template defining how queue names will be worked out.
            </summary>
            <param name="queueStorage">An instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> component which provides access to the underlying queue storage.</param>
            <param name="queueNameTemplate">The queue name template that must contain a format placeholder {0} which will be replaced with the queue number at runtime.</param>
            <param name="maxQueueCount">The maximum number of queues this component will be scaling across.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.#ctor(Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1"/> class using the specified queue storage and a list of queue names that will be used for scale-out purposes.
            </summary>
            <param name="queueStorage">An instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudQueueStorage"/> component which provides access to the underlying queue storage.</param>
            <param name="queueNames">The list of queue names which this component will use for scale-out purposes.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Create">
            <summary>
            Creates a queue (or queues) if they don't already exist.
            </summary>
            <returns>A flag indicating whether or not the queue(s) has actually been created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Drop">
            <summary>
            Deletes a queue (or queues) if it exists.
            </summary>
            <returns>A flag indicating whether or not the queue(s) has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Clear">
            <summary>
            Clears all messages from all queues managed by this component.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Put(System.IObservable{`0})">
            <summary>
            Puts one or more messages returned by the specified provider on a queue.
            </summary>
            <param name="provider">The provider supplying messages for publication on a queue.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Get(System.Int32,System.TimeSpan)">
            <summary>
            Gets an observable sequence of messages from all queues managed by this component. The size of the sequence will be limited to the number of messages 
            specified in the <paramref name="messageCount"/> parameter multiplied by the number of queues this component is managing. All messages retrieved from the 
            queue will be assigned the specified <paramref name="visibilityTimeout"/> value and remain invisible on the queue until the specified timeout is elapsed.
            </summary>
            <param name="messageCount">The maximum number of messages to retrieve from each individual queue.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Delete(`0)">
            <summary>
            Deletes the specified message from the queue.
            </summary>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>A flag indicating whether or not the specified message has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.QueueName">
            <summary>
            Gets the queue name which this repository represents.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueRepository`1.ItemCount">
            <summary>
            Gets the approximate count of items in all queues managed by this component.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage">
            <summary>
            Provides a generics-aware access to the Windows Azure Queue storage that can scale across multiple storage accounts.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage"/> class using the specified collection of storage accounts.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccounts">The storage accounts that will be used by this component to provide scale-out queue access.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo},Microsoft.Experience.CloudFx.Framework.RetryPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage"/> class using the specified storage accounts and retry policy.
            </summary>
            <param name="storageAccounts">The storage accounts that will be used by this component to provide scale-out queue access.</param>
            <param name="retryPolicy">The specific retry policy that will ensure reliable access to the underlying storage.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo},Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage"/> class using the specified storage accounts, custom retry policy
            and custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccounts">The storage accounts that will be used by this component to provide scale-out queue access.</param>
            <param name="retryPolicy">The specific retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo},Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage"/> class using the specified storage accounts, custom retry policy
            and custom implementation of the large message overflow store.
            </summary>
            <param name="storageAccounts">The storage accounts that will be used by this component to provide scale-out queue access.</param>
            <param name="retryPolicy">The specific retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo},Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage"/> class using the specified storage accounts and custom implementation of the large message overflow store.
            Assumes the default use of <see cref="F:Microsoft.Experience.CloudFx.Framework.RetryPolicy.DefaultExponential"/> retry policy and default implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface.
            </summary>
            <param name="storageAccounts">The storage accounts that will be used by this component to provide scale-out queue access.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo},Microsoft.Experience.CloudFx.Framework.RetryPolicy,Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer,Microsoft.Experience.CloudFx.Framework.Storage.ICloudBlobStorage)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage"/> class using the specified storage accounts, custom retry policy,
            custom implementation of <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.ICloudStorageEntitySerializer"/> interface and custom implementation of the large message overflow store.
            </summary>
            <param name="storageAccounts">The storage accounts that will be used by this component to provide scale-out queue access.</param>
            <param name="retryPolicy">The specific retry policy that will ensure reliable access to the underlying storage.</param>
            <param name="dataSerializer">An instance of the component which performs serialization and deserialization of storage objects.</param>
            <param name="overflowStorage">An instance of the component implementing overflow store that will be used for persisting large messages that cannot be accommodated in a queue due to message size constraints.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.CreateQueue(System.String)">
            <summary>
            Creates a new queue in all storage accounts which this component was initialized with.
            </summary>
            <param name="queueName">The name of a new queue.</param>
            <returns>A flag indicating whether or the queue did not exist and was therefore created.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.DeleteQueue(System.String)">
            <summary>
            Deletes the specified queue in all storage accounts which this component was initialized with.
            </summary>
            <param name="queueName">The name of the queue to be deleted.</param>
            <returns>True if the queue name has been actually deleted, otherwise False.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.GetCount(System.String)">
            <summary>
            Gets the approximate number of items in the specified queue in all storage accounts which this component was initialized with.
            </summary>
            <param name="queueName">The name of the queue to be queried.</param>
            <returns>The approximate number of items in the queue.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.Clear(System.String)">
            <summary>
            Clears all messages from the specified queue in all storage accounts which this component was initialized with.
            </summary>
            <param name="queueName">The name of the queue that will be emptied.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.Put``1(System.String,System.IObservable{``0})">
            <summary>
            Puts one or more messages returned by the specified provider on a queue.
            </summary>
            <typeparam name="T">The type of the message to be put on a queue.</typeparam>
            <param name="queueName">The target queue name on which message will be placed.</param>
            <param name="provider">The provider supplying messages for publication on a queue.</param>
            <returns>The object which enables the consumer to track the progress of the operation, and be notified when an error occurs or when the operation finishes.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.Get``1(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Gets an observable sequence of messages from the specified queue in all storage accounts managed by this component. The size of the sequence will be limited to the number of 
            messages specified in the <paramref name="messageCount"/> parameter multiplied by the number of storage accounts this component is managing. All messages retrieved from the queue 
            will be assigned the specified <paramref name="visibilityTimeout"/> value and remain invisible on the queue until the specified timeout is elapsed.
            </summary>
            <typeparam name="T">The type of the payload associated with the blob.</typeparam>
            <param name="queueName">The name of the source queue.</param>
            <param name="messageCount">The maximum number of messages to retrieve from each individual queue.</param>
            <param name="visibilityTimeout">The timeout during which retrieved messages will remain invisible on the queue.</param>
            <returns>The observable sequence of messages retrieved from the specified queue in all storage accounts managed by this component.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.Delete``1(``0)">
            <summary>
            Deletes a single message from a queue.
            </summary>
            <typeparam name="T">The type of the payload associated with the message.</typeparam>
            <param name="message">The message to be deleted from a queue.</param>
            <returns>A flag indicating whether or not the specified message has actually been deleted.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.Dispose(System.Boolean)">
            <summary>
            Disposes of instance state.
            </summary>
            <param name="disposing">Determines whether this was called by Dispose or by the finalizer.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.ScalableCloudQueueStorage.Dispose">
            <summary>
            Disposes of instance state.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver">
            Projects the Windows Azure storage account as an observable sequence of objects carrying telemetry information about the account and its storage entities, such 
            as current queue depth, etc. This class can act as a data source for monitoring purposes.
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver.#ctor(Microsoft.Experience.CloudFx.Framework.Configuration.StorageAccountInfo,System.TimeSpan)">
            <summary>
            
            </summary>
            <param name="storageAccountInfo">The configuration object describing a storage account that will be monitored.</param>
            <param name="interval">The time interval which defines how often the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver"/> component will be collecting telemetry from Windows Azure Storage service and dispatching notifications to the active subscribers.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver.Subscribe(System.IObserver{Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription})">
            <summary>
            Subscribes the specified <paramref name="observer"/> to receive notifications that carry a <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.CloudQueueDescription"/> object describing the current state of
            a Windows Azure Storage queue.
            </summary>
            <param name="observer">The observer that will be receiving notifications.</param>
            <returns>A disposable subscription object that allows the subscriber to indicate whenever it wants to stop receiving notifications.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver.Interval">
            <summary>
            Gets a time interval which defines how often the <see cref="T:Microsoft.Experience.CloudFx.Framework.Storage.StorageAccountObserver"/> component will be collecting telemetry from 
            Windows Azure Storage service and dispatching notifications to the active subscribers.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.StorageTransientErrorDetectionStrategy">
            <summary>
            Provides the transient error detection logic that can recognize transient faults when dealing with Windows Azure storage services.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.StorageTransientErrorDetectionStrategy.TransientStorageErrorCodeStrings">
            <summary>
            The error code strings that will be used to check for transient errors.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.StorageTransientErrorDetectionStrategy.IsTransient(System.Exception)">
            <summary>
            Determines whether the specified exception represents a transient failure that can be compensated by a retry.
            </summary>
            <param name="ex">The exception object to be verified.</param>
            <returns>true if the specified exception is considered transient; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.StorageTransientErrorDetectionStrategy.CheckIsTransient(System.Exception)">
            <summary>
            Checks whether the specified exception is transient.
            </summary>
            <param name="ex">The exception object to be verified.</param>
            <returns>true if the specified exception is considered transient; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.StorageTransientErrorDetectionStrategy.GetErrorCode(System.Data.Services.Client.DataServiceRequestException)">
            <summary>
            Gets the error code string from the exception.
            </summary>
            <param name="ex">The exception that contains the error code as a string inside the message.</param>
            <returns>The error code string.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.StorageTransientErrorDetectionStrategy.StorageV2ExceptionChecker">
            <summary>
            Provides support for checking transient faults when using the Windows Azure Storage version 2 managed API.
            </summary>
            <remarks>
            This type avoids externalizing the usage of the Windows Azure Storage assembly, so if the application
            is using another version of the assembly, this type does not throw exceptions when the JIT
            compiler tries to load this version of the assembly.
            </remarks>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer">
            <summary>
            This object can be used to create a software "round robin" load balancer for Azure endpoints.  The load balancing is specific to each instance of the object.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer._role">
            <summary>
            The Azure role that contains the endpoints to be load balanced.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer._endpointName">
            <summary>
            The endpoint to be load balanced.  This should only be used for internal endpoints seeing external already have the default Azure load balancer in use.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer._lastInstance">
            <summary>
            The index of the endpoint that was last handed out
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer._indexLock">
            <summary>
            The object to synchronize modification to the _lastInstance variable
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance of the EndpointLoadBalancer type.  When instantiating the name of the role will be validated against the role environment and the endpoint name as long as 
            one or more instances of the role exist.  If the role name does not exist it will throw an InvalidRoleNameException.  If there are any instances of the role and the name of the 
            endpoint does not exist in the instances endpoints it will throw an InvalidEndpointNameException.
            </summary>
            <param name="roleName">The name of the role containing the endpoint to be load balanced.  This is case sensitive.</param>
            <param name="endpointName">The name of the endpoint being load balanced.  This is case sensitive.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer.GetNext">
            <summary>
            Retrieve the next endpoint instance in the round robin balancer.
            </summary>
            <returns>The next RoleInstanceEndpoint instance in the round robin.  If there is a failure retrieving the instance and no instances of the role exist anymore a null will be returned.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer.GetNextIndex">
            <summary>
            Retrieve the index of the next endpoint instance in the round robin balancer. 
            </summary>
            <returns>The index of the next RoleInstanceEndpoint instance in the round robin.  If there is a failure retrieving the instance and no instances of the role exist anymore a -1 will be 
            returned.</returns>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer.InvalidRoleNameException">
            <summary>
            This type is an exception that indicates the specified role name does not exist in the Azure Role Environment
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer.InvalidRoleNameException.#ctor">
            <summary>
            Initializes the type and sets the base error message.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer.InvalidEndpointNameException">
            <summary>
            This type is an exception that indicates the specified endpoint name does not exist in the Azure Role Environment for that role
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.EndpointLoadBalancer.InvalidEndpointNameException.#ctor">
            <summary>
            Initializes the type and sets the base error message.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1">
            <summary>
            This type manages the reflection of known properties from table entities. 
            </summary>
            <typeparam name="TEntity">The type that the resolver should be created for.</typeparam>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.PartitionKeyPropertyName">
            <summary>
            The property name associated with the partition key in table storage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.RowKeyPropertyName">
            <summary>
            The property name associated with the row key in table storage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.TimestampPropertyName">
            <summary>
            The property name associated with the timestamp in table storage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.ETagPropertyName">
            <summary>
            The property name associated with the ETAG concurrency value in table storage.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.getPartitionKey">
            <summary>
            The function used to retrieve the partition key value.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.getRowKey">
            <summary>
            The function used to retrieve the row key value.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.propertyReaderMap">
            <summary>
            Contains a dictionary of functions used to read the properties of a specific type.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.propertyWriterMap">
            <summary>
            Contains a dictionary of actions used to set the properties of a specified type.
            </summary>
        </member>
        <member name="F:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.propertyReaderMapLength">
            <summary>
            Contains the number of properties defined in the specified type.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.GetProperties(`0)">
            <summary>
            Uses reflection to retrieve a list of all properties the type contains.  
            </summary>
            <param name="entity">An instance of the entity that contains the properties to be reflected.</param>
            <returns>A dictionary of the properties the entity contains.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.SetProperties(`0,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.WindowsAzure.Storage.Table.EntityProperty}})">
            <summary>
            Sets the values of an entity based on the table entity properties passed in.
            </summary>
            <param name="entity">The entity that the properties are to be set on.</param>
            <param name="properties">The source list of properties that contain the values.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.GetPartitionKey(`0)">
            <summary>
            Uses the function retrieved to get the partition key if it exists or returns null.
            </summary>
            <param name="entity">The entity that the partition key is to be retrieved from.</param>
            <returns>Returns the partition key if set and the method to retrieve the partition key could be found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.GetRowKey(`0)">
            <summary>
            Uses the function retrieved to get the row key if it exists or returns null.
            </summary>
            <param name="entity">The entity that the row key is to be retrieved from.</param>
            <returns>Returns the row key if set and the method to retrieve the row key could be found.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.GetPropertyValueReaderMap">
            <summary>
            Create the functions for each property in the object that will be used to retrieve the value.
            </summary>
            <returns>A dictionary of functions used to retrieve the value for the specified property.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.GetPropertyValueWriterMap">
            <summary>
            Returns a Dictionary of Actions used to set the values of the named properties within the type.
            </summary>
            <returns>A Dictionary of Actions used to set the properties for the specified type.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.CreateEntityPropertyFromObject(System.Object,System.Boolean)">
            <summary>
            This is a clone of the internal method found in the Microsoft.WindowsAzure.Storage.Table.EntityProperty class. 
            We copy/paste it here until the API exposes the original implementation as a public method.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.HasPartitionKey">
            <summary>
            True indicates that the type has a partition key.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.Storage.TableEntityMetadataResolver`1.HasRowKey">
            <summary>
            True indicates that the type has a row key.
            </summary>
        </member>
        <member name="T:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase">
            <summary>
            Provides a base class for building extensible Windows services.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase"/> object initialized with default settings.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.OnStart(System.String[])">
            <summary>
            Called by Windows Service Manager to initialize the service instance.
            </summary>
            <param name="args">The command-line arguments specified in the service startup configuration.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.OnStop">
            <summary>
            Called by Windows Service Manager when the service instance is to be stopped.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.OnRoleStart">
            <summary>
            Enables the user code to extend the OnStart phase that is called by Windows Azure runtime to initialize the role instance.
            </summary>
            <returns>True if initialization succeeds, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.OnRoleStop">
            <summary>
            Enables the user code to extend the OnStop phase that is called by Windows Azure runtime when the role instance is to be stopped.
            </summary>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.OnUnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Enables the user code to provide a custom implementation of a method that will handle the event raised by an exception that is not handled by the application domain.
            </summary>
            <param name="sender">The source of the unhandled exception event.</param>
            <param name="e">An <see cref="T:System.UnhandledExceptionEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.ConfigureDefaultExtensions">
            <summary>
            Configures the collection of default extensions that will be shared across all implementations of the <see cref="T:Microsoft.Experience.CloudFx.Framework.CloudWorkerRoleBase"/> abstract class.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.InstanceId">
            <summary>
            Returns an unique <see cref="T:System.Guid"/> value for the Windows service instance. This ID is being used by the base class for tracing purposes.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.Extensions">
            <summary>
            Gets a collection of extension objects for this extensible object.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.ConnectionLimit">
            <summary>
            Gets or sets the maximum number of concurrent connections allowed by a <see cref="T:System.Net.ServicePoint"/> object.
            </summary>
        </member>
        <member name="P:Microsoft.Experience.CloudFx.Framework.WindowsServiceBase.IsRunning">
            <summary>
            Gets the flag indicating whether or not the service instance has been successfully initialized and is currently running.
            </summary>
        </member>
    </members>
</doc>
